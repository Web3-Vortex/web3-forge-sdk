{"version":3,"sources":["../src/dex/abi/aerodrome.ts","../src/dex/abi/ixswap-v2.ts","../src/dex/abi/uniswap-v2.ts","../src/dex/abi/uniswap-v3.ts","../src/erc20/abi/erc20-abi.ts","../src/types/network.ts","../src/dex/addresses/uniswap-v2-kind/aerodrome-v2.ts","../src/dex/types/IDexParams.ts","../src/dex/DexBase.ts","../src/utils/is-object-addressable.ts","../src/erc20/tokens/ERC20.ts","../src/utils/reverse-copy.ts","../src/dex/AerodromeV2.ts","../src/dex/addresses/uniswap-v2-kind/ixswap-v2.ts","../src/utils/split-encoded-data.ts","../src/utils/cut-encoded-data-params.ts","../src/dex/addresses/uniswap-v2-kind/uniswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/pancakeswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/sushiswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/alienbase-v2.ts","../src/dex/addresses/uniswap-v2-kind/dackieswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/rai-finance-v2.ts","../src/dex/addresses/uniswap-v2-kind/sharkswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/swapbased-amm-v2.ts","../src/dex/addresses/uniswap-v2-kind/leetswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/icecreamswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/elkswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/rocketswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/baseswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/deltaswap-v2.ts","../src/dex/addresses/uniswap-v2-kind/ringswap-v2.ts","../src/dex/UniswapV2Kind.ts","../src/dex/IxSwapV2.ts","../src/dex/addresses/uniswap-v3-kind/uniswap-v3.ts","../src/dex/addresses/uniswap-v3-kind/sushiswap-v3.ts","../src/dex/addresses/uniswap-v3-kind/pancakeswap-v3.ts","../src/dex/addresses/uniswap-v3-kind/derpdex-v3.ts","../src/dex/addresses/uniswap-v3-kind/throne-v3.ts","../src/dex/addresses/uniswap-v3-kind/dackieswap-v3.ts","../src/dex/addresses/uniswap-v3-kind/horizondex-v3.ts","../src/dex/addresses/uniswap-v3-kind/swapbasedamm-v3.ts","../src/dex/addresses/uniswap-v3-kind/baseswap-v3.ts","../src/dex/addresses/uniswap-v3-kind/kinetix-v3.ts","../src/dex/addresses/uniswap-v3-kind/wagmi-v3.ts","../src/dex/addresses/uniswap-v3-kind/alienbase-v3.ts","../src/dex/UniswapV3Kind.ts","../src/utils/get-enum-values-array.ts","../src/dex/DexFactory.ts","../src/dex/types/fees.ts","../src/utils/chunk.ts","../src/erc20/abi/weth9-abi.ts","../src/erc20/tokens/Token.ts","../src/erc20/tokens/WETH9.ts","../src/dex/utils/PoolScraper.ts","../src/utils/call-transaction.ts","../src/utils/sign-transaction.ts"],"names":["aerodrome_exports","__export","aerodromeV2CLFactoryAbi","aerodromeV2CLPoolAbi","aerodromeV2FactoryAbi","aerodromeV2PoolAbi","aerodromeV2RouterAbi","ixswap_v2_exports","routerAbi","uniswap_v2_exports","factoryAbi","pairAbi","uniswap_v3_exports","poolAbi","quoterAbi","routerV1Abi","erc20Abi","Network","aerodromeV2Addresses","DexType","DexInterfaceName","DexBase","params","AbiCoder","JsonRpcProvider","Contract","isObjectAddressable","object","ERC20","address","network","abi","privateKey","provider","Wallet","NonceManager","wssUrl","rpcUrl","wss","spender","amount","to","from","owner","runnerAddress","oldAllowance","newAllowance","JsonRpcSigner","reverseCopy","arr","result","i","v","AerodromeV2","overrides","addresses","path","splitedPaths","poolData","pair","ZeroAddress","pairContract","tokens","reserves","token","tokenQuote","parsedPath","decimals","decimalsQuote","amountsOut","parseUnits","formatUnits","clCount","factoryCount","index","clFactoryPoolCount","factoryPoolCount","clFactoryPoolCountMinusOne","factoryPoolCountMinusOne","clFactoryPool","clPool","poolPairs","pairsArray","poolPair","token0","token1","data","t0","t1","amount0In","amount1In","amount0Out","amount1Out","isFeePool","reserve0","reserve1","blockTimestampLast","decimals0","decimals1","poolContract","sqrtPriceX96Struct","liquidity","sqrtPriceX96","dec0","dec1","Q96","sqrtX","L","amountsIn","sendTo","deadline","slippage","amountOutMin","pools","routes","rawEvent","id","ixswapV2Addresses","splitEncodedData","hexPart","invalidCharIndices","char","pointerLine","errorMessage","functionSelector","dataWithoutFunctionSelector","chunkSize","chunks","cutEncodedDataParams","start","end","startIndex","endIndex","leftChunks","rightChunks","topHalf","chunk","bottomHalf","uniswapV2Addresses","pancakeswapV2Addresses","sushiswapV2Addresses","alienbaseV2Addresses","alienbaseArea51V2Addresses","dackieswapV2Addresses","raifinanceV2Addresses","sharkswapV2Addresses","swapbasedammV2Addresses","leetswapV2Addresses","icecreamswapV2Addresses","elkswapV2Addresses","rocketswapV2Addresses","baseswapV2Addresses","deltaswapV2Addresses","ringswapV2Addresses","DexBaseKindUniswapV2","routerAddress_","factoryAddress_","name","routerAbi_","factoryAbi_","isAddress","MaxUint256","UniswapV2","PancakeSwapV2","SushiSwapV2","AlienBaseV2","AlienBaseArea51V2","DackieSwapV2","RaiFinanceV2","SharkSwapV2","SwapBasedAmmV2","LeetSwapV2","IcecreamSwapV2","ElkV2","RocketSwapV2","BaseSwapV2","DeltaSwapV2","RingSwapV2","emptyAuthorisation","IxSwapV2","routerAddress","factoryAddress","secPath","uniswapV3Addresses","sushiswapV3Addresses","pancakeswapV3Addresses","derpdexV3Addresses","throneV3Addresses","dackieswapV3Addresses","horizonDexV3Addresses","swapBasedAmmV3Addresses","baseswapV3Addresses","kinetixV3Addresses","wagmiV3Addresses","alienbaseV3Addresses","DexBaseKindUniswapV3","quoterAddress_","token0Contract","token1Contract","balance0","balance1","encodedPath","fee","_","poolAddress","erc0","erc1","amount0","amount1","types","solidityPacked","UniswapV3","PancakeSwapV3","SushiSwapV3","DerpDexV3","ThroneV3","HorizonDexV3","SwapBasedAmmV3","BaseSwapV3","KinetixV3","DackieSwapV3","WagmiV3","AlienBaseV3","getEnumValuesArray","e","DexFactory","dexInterfaceName","networks","UniswapV3Fees","AlienbaseV3Fees","ThroneV3Fees","WagmiV3Fees","HorizonDexV3Fees","SwapBasedAmmV3Fees","getChunkNumber","itemsCount","maxChunks","chunkArray","array","processInChunks","items","processor","results","chunkResults","item","processInChunksAsync","awaitTime","r","chunk_default","weth9abi","Token","symbol","wethAddresses","WETH9","PoolScraper","tokenIn","tokenOut","dexIncluded","isDirectPathOnly","settings","tokenInContract","tokenOutContract","_settings","dexes","d","dexPaths","dex","validatePathsTask","param","vp","dexType","weth","isWethIncluded","fees","directPaths","paths","fee0","fee1","callTransaction","runner","txRequest","signTransaction","rawTx","privateKeyBuffer","baseTxData","txFromTxData","txData","common","Common","TransactionType","LegacyTransaction","FeeMarketEIP1559Transaction","signedTx","bytesToHex"],"mappings":"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","file":"index.mjs","sourcesContent":["export const aerodromeV2RouterAbi = [\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_forwarder\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_factoryRegistry\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_factory\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_voter\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_weth\", type: \"address\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"constructor\",\r\n    },\r\n    { inputs: [], name: \"ETHTransferFailed\", type: \"error\" },\r\n    { inputs: [], name: \"Expired\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientAmount\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientAmountA\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientAmountADesired\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientAmountAOptimal\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientAmountB\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientAmountBDesired\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientLiquidity\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientOutputAmount\", type: \"error\" },\r\n    { inputs: [], name: \"InvalidAmountInForETHDeposit\", type: \"error\" },\r\n    { inputs: [], name: \"InvalidPath\", type: \"error\" },\r\n    { inputs: [], name: \"InvalidRouteA\", type: \"error\" },\r\n    { inputs: [], name: \"InvalidRouteB\", type: \"error\" },\r\n    { inputs: [], name: \"InvalidTokenInForETHDeposit\", type: \"error\" },\r\n    { inputs: [], name: \"OnlyWETH\", type: \"error\" },\r\n    { inputs: [], name: \"PoolDoesNotExist\", type: \"error\" },\r\n    { inputs: [], name: \"PoolFactoryDoesNotExist\", type: \"error\" },\r\n    { inputs: [], name: \"SameAddresses\", type: \"error\" },\r\n    { inputs: [], name: \"ZeroAddress\", type: \"error\" },\r\n    {\r\n        inputs: [],\r\n        name: \"ETHER\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routes\",\r\n                type: \"tuple[]\",\r\n            },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"UNSAFE_swapExactTokensForTokens\",\r\n        outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"uint256\", name: \"amountADesired\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountBDesired\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"addLiquidity\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"token\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"uint256\", name: \"amountTokenDesired\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"addLiquidityETH\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"defaultFactory\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"factoryRegistry\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"address\", name: \"_factory\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amountInA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountInB\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routesA\",\r\n                type: \"tuple[]\",\r\n            },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routesB\",\r\n                type: \"tuple[]\",\r\n            },\r\n        ],\r\n        name: \"generateZapInParams\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountOutMinA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountOutMinB\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"address\", name: \"_factory\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routesA\",\r\n                type: \"tuple[]\",\r\n            },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routesB\",\r\n                type: \"tuple[]\",\r\n            },\r\n        ],\r\n        name: \"generateZapOutParams\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountOutMinA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountOutMinB\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routes\",\r\n                type: \"tuple[]\",\r\n            },\r\n        ],\r\n        name: \"getAmountsOut\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"address\", name: \"_factory\", type: \"address\" },\r\n        ],\r\n        name: \"getReserves\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"reserveA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"reserveB\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"forwarder\", type: \"address\" }],\r\n        name: \"isTrustedForwarder\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"address\", name: \"_factory\", type: \"address\" },\r\n        ],\r\n        name: \"poolFor\",\r\n        outputs: [{ internalType: \"address\", name: \"pool\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"address\", name: \"_factory\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amountADesired\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountBDesired\", type: \"uint256\" },\r\n        ],\r\n        name: \"quoteAddLiquidity\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"address\", name: \"_factory\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n        ],\r\n        name: \"quoteRemoveLiquidity\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_factory\", type: \"address\" },\r\n        ],\r\n        name: \"quoteStableLiquidityRatio\",\r\n        outputs: [{ internalType: \"uint256\", name: \"ratio\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"removeLiquidity\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"token\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"removeLiquidityETH\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"token\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"removeLiquidityETHSupportingFeeOnTransferTokens\",\r\n        outputs: [{ internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n        ],\r\n        name: \"sortTokens\",\r\n        outputs: [\r\n            { internalType: \"address\", name: \"token0\", type: \"address\" },\r\n            { internalType: \"address\", name: \"token1\", type: \"address\" },\r\n        ],\r\n        stateMutability: \"pure\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routes\",\r\n                type: \"tuple[]\",\r\n            },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactETHForTokens\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routes\",\r\n                type: \"tuple[]\",\r\n            },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactETHForTokensSupportingFeeOnTransferTokens\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routes\",\r\n                type: \"tuple[]\",\r\n            },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactTokensForETH\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routes\",\r\n                type: \"tuple[]\",\r\n            },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactTokensForETHSupportingFeeOnTransferTokens\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routes\",\r\n                type: \"tuple[]\",\r\n            },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactTokensForTokens\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routes\",\r\n                type: \"tuple[]\",\r\n            },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"voter\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"weth\",\r\n        outputs: [{ internalType: \"contract IWETH\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amountInA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountInB\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                    { internalType: \"uint256\", name: \"amountOutMinA\", type: \"uint256\" },\r\n                    { internalType: \"uint256\", name: \"amountOutMinB\", type: \"uint256\" },\r\n                    { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\r\n                    { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\r\n                ],\r\n                internalType: \"struct IRouter.Zap\",\r\n                name: \"zapInPool\",\r\n                type: \"tuple\",\r\n            },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routesA\",\r\n                type: \"tuple[]\",\r\n            },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routesB\",\r\n                type: \"tuple[]\",\r\n            },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stake\", type: \"bool\" },\r\n        ],\r\n        name: \"zapIn\",\r\n        outputs: [{ internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" }],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                    { internalType: \"uint256\", name: \"amountOutMinA\", type: \"uint256\" },\r\n                    { internalType: \"uint256\", name: \"amountOutMinB\", type: \"uint256\" },\r\n                    { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\r\n                    { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\r\n                ],\r\n                internalType: \"struct IRouter.Zap\",\r\n                name: \"zapOutPool\",\r\n                type: \"tuple\",\r\n            },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routesA\",\r\n                type: \"tuple[]\",\r\n            },\r\n            {\r\n                components: [\r\n                    { internalType: \"address\", name: \"from\", type: \"address\" },\r\n                    { internalType: \"address\", name: \"to\", type: \"address\" },\r\n                    { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n                    { internalType: \"address\", name: \"factory\", type: \"address\" },\r\n                ],\r\n                internalType: \"struct IRouter.Route[]\",\r\n                name: \"routesB\",\r\n                type: \"tuple[]\",\r\n            },\r\n        ],\r\n        name: \"zapOut\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const aerodromeV2FactoryAbi = [\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_implementation\", type: \"address\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"constructor\",\r\n    },\r\n    { inputs: [], name: \"FeeInvalid\", type: \"error\" },\r\n    { inputs: [], name: \"FeeTooHigh\", type: \"error\" },\r\n    { inputs: [], name: \"InvalidPool\", type: \"error\" },\r\n    { inputs: [], name: \"NotFeeManager\", type: \"error\" },\r\n    { inputs: [], name: \"NotPauser\", type: \"error\" },\r\n    { inputs: [], name: \"NotVoter\", type: \"error\" },\r\n    { inputs: [], name: \"PoolAlreadyExists\", type: \"error\" },\r\n    { inputs: [], name: \"SameAddress\", type: \"error\" },\r\n    { inputs: [], name: \"ZeroAddress\", type: \"error\" },\r\n    { inputs: [], name: \"ZeroFee\", type: \"error\" },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"token0\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"token1\",\r\n                type: \"address\",\r\n            },\r\n            { indexed: true, internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"pool\",\r\n                type: \"address\",\r\n            },\r\n            { indexed: false, internalType: \"uint256\", name: \"\", type: \"uint256\" },\r\n        ],\r\n        name: \"PoolCreated\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: true, internalType: \"address\", name: \"pool\", type: \"address\" },\r\n            { indexed: false, internalType: \"uint256\", name: \"fee\", type: \"uint256\" },\r\n        ],\r\n        name: \"SetCustomFee\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"feeManager\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"SetFeeManager\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: false, internalType: \"bool\", name: \"state\", type: \"bool\" },\r\n        ],\r\n        name: \"SetPauseState\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"pauser\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"SetPauser\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"voter\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"SetVoter\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"MAX_FEE\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"ZERO_FEE_INDICATOR\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        name: \"allPools\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"allPoolsLength\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n        ],\r\n        name: \"createPool\",\r\n        outputs: [{ internalType: \"address\", name: \"pool\", type: \"address\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\r\n        ],\r\n        name: \"createPool\",\r\n        outputs: [{ internalType: \"address\", name: \"pool\", type: \"address\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        name: \"customFee\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"feeManager\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"pool\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"_stable\", type: \"bool\" },\r\n        ],\r\n        name: \"getFee\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\r\n        ],\r\n        name: \"getPool\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"stable\", type: \"bool\" },\r\n        ],\r\n        name: \"getPool\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"implementation\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"isPaused\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"pool\", type: \"address\" }],\r\n        name: \"isPool\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"pauser\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"pool\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"fee\", type: \"uint256\" },\r\n        ],\r\n        name: \"setCustomFee\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"bool\", name: \"_stable\", type: \"bool\" },\r\n            { internalType: \"uint256\", name: \"_fee\", type: \"uint256\" },\r\n        ],\r\n        name: \"setFee\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"_feeManager\", type: \"address\" }],\r\n        name: \"setFeeManager\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"bool\", name: \"_state\", type: \"bool\" }],\r\n        name: \"setPauseState\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"_pauser\", type: \"address\" }],\r\n        name: \"setPauser\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"_voter\", type: \"address\" }],\r\n        name: \"setVoter\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"stableFee\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"volatileFee\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"voter\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n];\r\n\r\nexport const aerodromeV2CLFactoryAbi = [\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_voter\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_poolImplementation\", type: \"address\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"constructor\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"uint24\",\r\n                name: \"oldUnstakedFee\",\r\n                type: \"uint24\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"uint24\",\r\n                name: \"newUnstakedFee\",\r\n                type: \"uint24\",\r\n            },\r\n        ],\r\n        name: \"DefaultUnstakedFeeChanged\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"oldOwner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"newOwner\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"OwnerChanged\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"token0\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"token1\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"int24\",\r\n                name: \"tickSpacing\",\r\n                type: \"int24\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"pool\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"PoolCreated\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"oldFeeManager\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"newFeeManager\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"SwapFeeManagerChanged\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"oldFeeModule\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"newFeeModule\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"SwapFeeModuleChanged\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"int24\",\r\n                name: \"tickSpacing\",\r\n                type: \"int24\",\r\n            },\r\n            { indexed: true, internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\r\n        ],\r\n        name: \"TickSpacingEnabled\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"oldFeeManager\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"newFeeManager\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"UnstakedFeeManagerChanged\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"oldFeeModule\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"newFeeModule\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"UnstakedFeeModuleChanged\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        name: \"allPools\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"allPoolsLength\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"int24\", name: \"tickSpacing\", type: \"int24\" },\r\n            { internalType: \"uint160\", name: \"sqrtPriceX96\", type: \"uint160\" },\r\n        ],\r\n        name: \"createPool\",\r\n        outputs: [{ internalType: \"address\", name: \"pool\", type: \"address\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"defaultUnstakedFee\",\r\n        outputs: [{ internalType: \"uint24\", name: \"\", type: \"uint24\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"int24\", name: \"tickSpacing\", type: \"int24\" },\r\n            { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\r\n        ],\r\n        name: \"enableTickSpacing\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"factoryRegistry\",\r\n        outputs: [\r\n            { internalType: \"contract IFactoryRegistry\", name: \"\", type: \"address\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"\", type: \"address\" },\r\n            { internalType: \"address\", name: \"\", type: \"address\" },\r\n            { internalType: \"int24\", name: \"\", type: \"int24\" },\r\n        ],\r\n        name: \"getPool\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"pool\", type: \"address\" }],\r\n        name: \"getSwapFee\",\r\n        outputs: [{ internalType: \"uint24\", name: \"\", type: \"uint24\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"pool\", type: \"address\" }],\r\n        name: \"getUnstakedFee\",\r\n        outputs: [{ internalType: \"uint24\", name: \"\", type: \"uint24\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"pool\", type: \"address\" }],\r\n        name: \"isPool\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"owner\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"poolImplementation\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint24\", name: \"_defaultUnstakedFee\", type: \"uint24\" },\r\n        ],\r\n        name: \"setDefaultUnstakedFee\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"_owner\", type: \"address\" }],\r\n        name: \"setOwner\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_swapFeeManager\", type: \"address\" },\r\n        ],\r\n        name: \"setSwapFeeManager\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_swapFeeModule\", type: \"address\" },\r\n        ],\r\n        name: \"setSwapFeeModule\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_unstakedFeeManager\", type: \"address\" },\r\n        ],\r\n        name: \"setUnstakedFeeManager\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_unstakedFeeModule\", type: \"address\" },\r\n        ],\r\n        name: \"setUnstakedFeeModule\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"swapFeeManager\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"swapFeeModule\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"int24\", name: \"\", type: \"int24\" }],\r\n        name: \"tickSpacingToFee\",\r\n        outputs: [{ internalType: \"uint24\", name: \"\", type: \"uint24\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"tickSpacings\",\r\n        outputs: [{ internalType: \"int24[]\", name: \"\", type: \"int24[]\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"unstakedFeeManager\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"unstakedFeeModule\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"voter\",\r\n        outputs: [{ internalType: \"contract IVoter\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n];\r\n\r\nexport const aerodromeV2CLPoolAbi = [\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"int24\",\r\n                name: \"tickLower\",\r\n                type: \"int24\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"int24\",\r\n                name: \"tickUpper\",\r\n                type: \"int24\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint128\",\r\n                name: \"amount\",\r\n                type: \"uint128\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Burn\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"int24\",\r\n                name: \"tickLower\",\r\n                type: \"int24\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"int24\",\r\n                name: \"tickUpper\",\r\n                type: \"int24\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint128\",\r\n                name: \"amount0\",\r\n                type: \"uint128\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint128\",\r\n                name: \"amount1\",\r\n                type: \"uint128\",\r\n            },\r\n        ],\r\n        name: \"Collect\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint128\",\r\n                name: \"amount0\",\r\n                type: \"uint128\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint128\",\r\n                name: \"amount1\",\r\n                type: \"uint128\",\r\n            },\r\n        ],\r\n        name: \"CollectFees\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"paid0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"paid1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Flash\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint16\",\r\n                name: \"observationCardinalityNextOld\",\r\n                type: \"uint16\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint16\",\r\n                name: \"observationCardinalityNextNew\",\r\n                type: \"uint16\",\r\n            },\r\n        ],\r\n        name: \"IncreaseObservationCardinalityNext\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint160\",\r\n                name: \"sqrtPriceX96\",\r\n                type: \"uint160\",\r\n            },\r\n            { indexed: false, internalType: \"int24\", name: \"tick\", type: \"int24\" },\r\n        ],\r\n        name: \"Initialize\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"int24\",\r\n                name: \"tickLower\",\r\n                type: \"int24\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"int24\",\r\n                name: \"tickUpper\",\r\n                type: \"int24\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint128\",\r\n                name: \"amount\",\r\n                type: \"uint128\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Mint\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint8\",\r\n                name: \"feeProtocol0Old\",\r\n                type: \"uint8\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint8\",\r\n                name: \"feeProtocol1Old\",\r\n                type: \"uint8\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint8\",\r\n                name: \"feeProtocol0New\",\r\n                type: \"uint8\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint8\",\r\n                name: \"feeProtocol1New\",\r\n                type: \"uint8\",\r\n            },\r\n        ],\r\n        name: \"SetFeeProtocol\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"int256\",\r\n                name: \"amount0\",\r\n                type: \"int256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"int256\",\r\n                name: \"amount1\",\r\n                type: \"int256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint160\",\r\n                name: \"sqrtPriceX96\",\r\n                type: \"uint160\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint128\",\r\n                name: \"liquidity\",\r\n                type: \"uint128\",\r\n            },\r\n            { indexed: false, internalType: \"int24\", name: \"tick\", type: \"int24\" },\r\n        ],\r\n        name: \"Swap\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"int24\", name: \"tickLower\", type: \"int24\" },\r\n            { internalType: \"int24\", name: \"tickUpper\", type: \"int24\" },\r\n            { internalType: \"uint128\", name: \"amount\", type: \"uint128\" },\r\n            { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n        ],\r\n        name: \"burn\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amount0\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amount1\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"int24\", name: \"tickLower\", type: \"int24\" },\r\n            { internalType: \"int24\", name: \"tickUpper\", type: \"int24\" },\r\n            { internalType: \"uint128\", name: \"amount\", type: \"uint128\" },\r\n        ],\r\n        name: \"burn\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amount0\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amount1\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"recipient\", type: \"address\" },\r\n            { internalType: \"int24\", name: \"tickLower\", type: \"int24\" },\r\n            { internalType: \"int24\", name: \"tickUpper\", type: \"int24\" },\r\n            { internalType: \"uint128\", name: \"amount0Requested\", type: \"uint128\" },\r\n            { internalType: \"uint128\", name: \"amount1Requested\", type: \"uint128\" },\r\n            { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n        ],\r\n        name: \"collect\",\r\n        outputs: [\r\n            { internalType: \"uint128\", name: \"amount0\", type: \"uint128\" },\r\n            { internalType: \"uint128\", name: \"amount1\", type: \"uint128\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"recipient\", type: \"address\" },\r\n            { internalType: \"int24\", name: \"tickLower\", type: \"int24\" },\r\n            { internalType: \"int24\", name: \"tickUpper\", type: \"int24\" },\r\n            { internalType: \"uint128\", name: \"amount0Requested\", type: \"uint128\" },\r\n            { internalType: \"uint128\", name: \"amount1Requested\", type: \"uint128\" },\r\n        ],\r\n        name: \"collect\",\r\n        outputs: [\r\n            { internalType: \"uint128\", name: \"amount0\", type: \"uint128\" },\r\n            { internalType: \"uint128\", name: \"amount1\", type: \"uint128\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"collectFees\",\r\n        outputs: [\r\n            { internalType: \"uint128\", name: \"amount0\", type: \"uint128\" },\r\n            { internalType: \"uint128\", name: \"amount1\", type: \"uint128\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"factory\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"factoryRegistry\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"fee\",\r\n        outputs: [{ internalType: \"uint24\", name: \"\", type: \"uint24\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"feeGrowthGlobal0X128\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"feeGrowthGlobal1X128\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"recipient\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amount0\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amount1\", type: \"uint256\" },\r\n            { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n        ],\r\n        name: \"flash\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"gauge\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"gaugeFees\",\r\n        outputs: [\r\n            { internalType: \"uint128\", name: \"token0\", type: \"uint128\" },\r\n            { internalType: \"uint128\", name: \"token1\", type: \"uint128\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"int24\", name: \"tickLower\", type: \"int24\" },\r\n            { internalType: \"int24\", name: \"tickUpper\", type: \"int24\" },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"_rewardGrowthGlobalX128\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"getRewardGrowthInside\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"rewardGrowthInside\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"uint16\",\r\n                name: \"observationCardinalityNext\",\r\n                type: \"uint16\",\r\n            },\r\n        ],\r\n        name: \"increaseObservationCardinalityNext\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_factory\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_token0\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_token1\", type: \"address\" },\r\n            { internalType: \"int24\", name: \"_tickSpacing\", type: \"int24\" },\r\n            { internalType: \"address\", name: \"_factoryRegistry\", type: \"address\" },\r\n            { internalType: \"uint160\", name: \"_sqrtPriceX96\", type: \"uint160\" },\r\n        ],\r\n        name: \"initialize\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"lastUpdated\",\r\n        outputs: [{ internalType: \"uint32\", name: \"\", type: \"uint32\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"liquidity\",\r\n        outputs: [{ internalType: \"uint128\", name: \"\", type: \"uint128\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"maxLiquidityPerTick\",\r\n        outputs: [{ internalType: \"uint128\", name: \"\", type: \"uint128\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"recipient\", type: \"address\" },\r\n            { internalType: \"int24\", name: \"tickLower\", type: \"int24\" },\r\n            { internalType: \"int24\", name: \"tickUpper\", type: \"int24\" },\r\n            { internalType: \"uint128\", name: \"amount\", type: \"uint128\" },\r\n            { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n        ],\r\n        name: \"mint\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amount0\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amount1\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"nft\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        name: \"observations\",\r\n        outputs: [\r\n            { internalType: \"uint32\", name: \"blockTimestamp\", type: \"uint32\" },\r\n            { internalType: \"int56\", name: \"tickCumulative\", type: \"int56\" },\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"secondsPerLiquidityCumulativeX128\",\r\n                type: \"uint160\",\r\n            },\r\n            { internalType: \"bool\", name: \"initialized\", type: \"bool\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint32[]\", name: \"secondsAgos\", type: \"uint32[]\" },\r\n        ],\r\n        name: \"observe\",\r\n        outputs: [\r\n            { internalType: \"int56[]\", name: \"tickCumulatives\", type: \"int56[]\" },\r\n            {\r\n                internalType: \"uint160[]\",\r\n                name: \"secondsPerLiquidityCumulativeX128s\",\r\n                type: \"uint160[]\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"periodFinish\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n        name: \"positions\",\r\n        outputs: [\r\n            { internalType: \"uint128\", name: \"liquidity\", type: \"uint128\" },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeGrowthInside0LastX128\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeGrowthInside1LastX128\",\r\n                type: \"uint256\",\r\n            },\r\n            { internalType: \"uint128\", name: \"tokensOwed0\", type: \"uint128\" },\r\n            { internalType: \"uint128\", name: \"tokensOwed1\", type: \"uint128\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"rewardGrowthGlobalX128\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"rewardRate\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"rewardReserve\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"rollover\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_gauge\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_nft\", type: \"address\" },\r\n        ],\r\n        name: \"setGaugeAndPositionManager\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"slot0\",\r\n        outputs: [\r\n            { internalType: \"uint160\", name: \"sqrtPriceX96\", type: \"uint160\" },\r\n            { internalType: \"int24\", name: \"tick\", type: \"int24\" },\r\n            { internalType: \"uint16\", name: \"observationIndex\", type: \"uint16\" },\r\n            {\r\n                internalType: \"uint16\",\r\n                name: \"observationCardinality\",\r\n                type: \"uint16\",\r\n            },\r\n            {\r\n                internalType: \"uint16\",\r\n                name: \"observationCardinalityNext\",\r\n                type: \"uint16\",\r\n            },\r\n            { internalType: \"bool\", name: \"unlocked\", type: \"bool\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"int24\", name: \"tickLower\", type: \"int24\" },\r\n            { internalType: \"int24\", name: \"tickUpper\", type: \"int24\" },\r\n        ],\r\n        name: \"snapshotCumulativesInside\",\r\n        outputs: [\r\n            { internalType: \"int56\", name: \"tickCumulativeInside\", type: \"int56\" },\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"secondsPerLiquidityInsideX128\",\r\n                type: \"uint160\",\r\n            },\r\n            { internalType: \"uint32\", name: \"secondsInside\", type: \"uint32\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"int128\", name: \"stakedLiquidityDelta\", type: \"int128\" },\r\n            { internalType: \"int24\", name: \"tickLower\", type: \"int24\" },\r\n            { internalType: \"int24\", name: \"tickUpper\", type: \"int24\" },\r\n            { internalType: \"bool\", name: \"positionUpdate\", type: \"bool\" },\r\n        ],\r\n        name: \"stake\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"stakedLiquidity\",\r\n        outputs: [{ internalType: \"uint128\", name: \"\", type: \"uint128\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"recipient\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"zeroForOne\", type: \"bool\" },\r\n            { internalType: \"int256\", name: \"amountSpecified\", type: \"int256\" },\r\n            { internalType: \"uint160\", name: \"sqrtPriceLimitX96\", type: \"uint160\" },\r\n            { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n        ],\r\n        name: \"swap\",\r\n        outputs: [\r\n            { internalType: \"int256\", name: \"amount0\", type: \"int256\" },\r\n            { internalType: \"int256\", name: \"amount1\", type: \"int256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"_rewardRate\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"_rewardReserve\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"_periodFinish\", type: \"uint256\" },\r\n        ],\r\n        name: \"syncReward\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"int16\", name: \"\", type: \"int16\" }],\r\n        name: \"tickBitmap\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"tickSpacing\",\r\n        outputs: [{ internalType: \"int24\", name: \"\", type: \"int24\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"int24\", name: \"\", type: \"int24\" }],\r\n        name: \"ticks\",\r\n        outputs: [\r\n            { internalType: \"uint128\", name: \"liquidityGross\", type: \"uint128\" },\r\n            { internalType: \"int128\", name: \"liquidityNet\", type: \"int128\" },\r\n            { internalType: \"int128\", name: \"stakedLiquidityNet\", type: \"int128\" },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeGrowthOutside0X128\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"feeGrowthOutside1X128\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"rewardGrowthOutsideX128\",\r\n                type: \"uint256\",\r\n            },\r\n            { internalType: \"int56\", name: \"tickCumulativeOutside\", type: \"int56\" },\r\n            {\r\n                internalType: \"uint160\",\r\n                name: \"secondsPerLiquidityOutsideX128\",\r\n                type: \"uint160\",\r\n            },\r\n            { internalType: \"uint32\", name: \"secondsOutside\", type: \"uint32\" },\r\n            { internalType: \"bool\", name: \"initialized\", type: \"bool\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"token0\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"token1\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"unstakedFee\",\r\n        outputs: [{ internalType: \"uint24\", name: \"\", type: \"uint24\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"updateRewardsGrowthGlobal\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\n\r\nexport const aerodromeV2PoolAbi = [\r\n    { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\r\n    { inputs: [], name: \"BelowMinimumK\", type: \"error\" },\r\n    { inputs: [], name: \"DepositsNotEqual\", type: \"error\" },\r\n    { inputs: [], name: \"FactoryAlreadySet\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientInputAmount\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientLiquidity\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientLiquidityBurned\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientLiquidityMinted\", type: \"error\" },\r\n    { inputs: [], name: \"InsufficientOutputAmount\", type: \"error\" },\r\n    { inputs: [], name: \"InvalidTo\", type: \"error\" },\r\n    { inputs: [], name: \"IsPaused\", type: \"error\" },\r\n    { inputs: [], name: \"K\", type: \"error\" },\r\n    { inputs: [], name: \"NotEmergencyCouncil\", type: \"error\" },\r\n    {\r\n        inputs: [{ internalType: \"string\", name: \"str\", type: \"string\" }],\r\n        name: \"StringTooLong\",\r\n        type: \"error\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Approval\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Burn\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"recipient\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Claim\",\r\n        type: \"event\",\r\n    },\r\n    { anonymous: false, inputs: [], name: \"EIP712DomainChanged\", type: \"event\" },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Fees\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Mint\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0In\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1In\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0Out\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1Out\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Swap\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"reserve0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"reserve1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Sync\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n            { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Transfer\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"DOMAIN_SEPARATOR\",\r\n        outputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n            { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n        ],\r\n        name: \"allowance\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n        ],\r\n        name: \"approve\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\r\n        name: \"balanceOf\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"blockTimestampLast\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"to\", type: \"address\" }],\r\n        name: \"burn\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amount0\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amount1\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"claimFees\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"claimed0\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"claimed1\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        name: \"claimable0\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        name: \"claimable1\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"currentCumulativePrices\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"reserve0Cumulative\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"reserve1Cumulative\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"blockTimestamp\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"decimals\",\r\n        outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"subtractedValue\", type: \"uint256\" },\r\n        ],\r\n        name: \"decreaseAllowance\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"eip712Domain\",\r\n        outputs: [\r\n            { internalType: \"bytes1\", name: \"fields\", type: \"bytes1\" },\r\n            { internalType: \"string\", name: \"name\", type: \"string\" },\r\n            { internalType: \"string\", name: \"version\", type: \"string\" },\r\n            { internalType: \"uint256\", name: \"chainId\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"verifyingContract\", type: \"address\" },\r\n            { internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" },\r\n            { internalType: \"uint256[]\", name: \"extensions\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"factory\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\r\n        ],\r\n        name: \"getAmountOut\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"getK\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"getReserves\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"_reserve0\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"_reserve1\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"_blockTimestampLast\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"addedValue\", type: \"uint256\" },\r\n        ],\r\n        name: \"increaseAllowance\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"index0\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"index1\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_token0\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_token1\", type: \"address\" },\r\n            { internalType: \"bool\", name: \"_stable\", type: \"bool\" },\r\n        ],\r\n        name: \"initialize\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"lastObservation\",\r\n        outputs: [\r\n            {\r\n                components: [\r\n                    { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"reserve0Cumulative\",\r\n                        type: \"uint256\",\r\n                    },\r\n                    {\r\n                        internalType: \"uint256\",\r\n                        name: \"reserve1Cumulative\",\r\n                        type: \"uint256\",\r\n                    },\r\n                ],\r\n                internalType: \"struct IPool.Observation\",\r\n                name: \"\",\r\n                type: \"tuple\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"metadata\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"dec0\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"dec1\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"r0\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"r1\", type: \"uint256\" },\r\n            { internalType: \"bool\", name: \"st\", type: \"bool\" },\r\n            { internalType: \"address\", name: \"t0\", type: \"address\" },\r\n            { internalType: \"address\", name: \"t1\", type: \"address\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"to\", type: \"address\" }],\r\n        name: \"mint\",\r\n        outputs: [{ internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"name\",\r\n        outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\r\n        name: \"nonces\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"observationLength\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        name: \"observations\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"reserve0Cumulative\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"reserve1Cumulative\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"periodSize\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n            { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n            { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\r\n            { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\r\n            { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\r\n        ],\r\n        name: \"permit\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"poolFees\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"points\", type: \"uint256\" },\r\n        ],\r\n        name: \"prices\",\r\n        outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"granularity\", type: \"uint256\" },\r\n        ],\r\n        name: \"quote\",\r\n        outputs: [{ internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"reserve0\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"reserve0CumulativeLast\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"reserve1\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"reserve1CumulativeLast\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"points\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"window\", type: \"uint256\" },\r\n        ],\r\n        name: \"sample\",\r\n        outputs: [{ internalType: \"uint256[]\", name: \"\", type: \"uint256[]\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"string\", name: \"__name\", type: \"string\" }],\r\n        name: \"setName\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"string\", name: \"__symbol\", type: \"string\" }],\r\n        name: \"setSymbol\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"to\", type: \"address\" }],\r\n        name: \"skim\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"stable\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        name: \"supplyIndex0\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        name: \"supplyIndex1\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amount0Out\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amount1Out\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n        ],\r\n        name: \"swap\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"symbol\",\r\n        outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"sync\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"token0\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"token1\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"tokens\",\r\n        outputs: [\r\n            { internalType: \"address\", name: \"\", type: \"address\" },\r\n            { internalType: \"address\", name: \"\", type: \"address\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"totalSupply\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n        ],\r\n        name: \"transfer\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"from\", type: \"address\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\r\n        ],\r\n        name: \"transferFrom\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\n","export const routerAbi = [\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '_factory',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: '_WETH',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'constructor',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'WETH',\r\n        outputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'factory',\r\n        outputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'reserveIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'reserveOut',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'bool',\r\n                name: 'isSecurityPool',\r\n                type: 'bool',\r\n            },\r\n        ],\r\n        name: 'getAmountIn',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'pure',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'reserveIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'reserveOut',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'bool',\r\n                name: 'isSecurityPool',\r\n                type: 'bool',\r\n            },\r\n        ],\r\n        name: 'getAmountOut',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'pure',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'bool[]',\r\n                name: 'secPath',\r\n                type: 'bool[]',\r\n            },\r\n        ],\r\n        name: 'getAmountsIn',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256[]',\r\n                name: 'amounts',\r\n                type: 'uint256[]',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'bool[]',\r\n                name: 'secPath',\r\n                type: 'bool[]',\r\n            },\r\n        ],\r\n        name: 'getAmountsOut',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256[]',\r\n                name: 'amounts',\r\n                type: 'uint256[]',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountA',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'reserveA',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'reserveB',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'quote',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountB',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'pure',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'operator',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'deadline',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint8',\r\n                        name: 'v',\r\n                        type: 'uint8',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'r',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 's',\r\n                        type: 'bytes32',\r\n                    },\r\n                ],\r\n                internalType: 'struct IIxsV2Pair.SecAuthorization[]',\r\n                name: 'authorizations',\r\n                type: 'tuple[]',\r\n            },\r\n        ],\r\n        name: 'swapETHForExactTokens',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256[]',\r\n                name: 'amounts',\r\n                type: 'uint256[]',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOutMin',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'operator',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'deadline',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint8',\r\n                        name: 'v',\r\n                        type: 'uint8',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'r',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 's',\r\n                        type: 'bytes32',\r\n                    },\r\n                ],\r\n                internalType: 'struct IIxsV2Pair.SecAuthorization[]',\r\n                name: 'authorizations',\r\n                type: 'tuple[]',\r\n            },\r\n        ],\r\n        name: 'swapExactETHForTokens',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256[]',\r\n                name: 'amounts',\r\n                type: 'uint256[]',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOutMin',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'operator',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'deadline',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint8',\r\n                        name: 'v',\r\n                        type: 'uint8',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'r',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 's',\r\n                        type: 'bytes32',\r\n                    },\r\n                ],\r\n                internalType: 'struct IIxsV2Pair.SecAuthorization[]',\r\n                name: 'authorizations',\r\n                type: 'tuple[]',\r\n            },\r\n        ],\r\n        name: 'swapExactETHForTokensSupportingFeeOnTransferTokens',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOutMin',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'operator',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'deadline',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint8',\r\n                        name: 'v',\r\n                        type: 'uint8',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'r',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 's',\r\n                        type: 'bytes32',\r\n                    },\r\n                ],\r\n                internalType: 'struct IIxsV2Pair.SecAuthorization[]',\r\n                name: 'authorizations',\r\n                type: 'tuple[]',\r\n            },\r\n        ],\r\n        name: 'swapExactTokensForETH',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256[]',\r\n                name: 'amounts',\r\n                type: 'uint256[]',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOutMin',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'operator',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'deadline',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint8',\r\n                        name: 'v',\r\n                        type: 'uint8',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'r',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 's',\r\n                        type: 'bytes32',\r\n                    },\r\n                ],\r\n                internalType: 'struct IIxsV2Pair.SecAuthorization[]',\r\n                name: 'authorizations',\r\n                type: 'tuple[]',\r\n            },\r\n        ],\r\n        name: 'swapExactTokensForETHSupportingFeeOnTransferTokens',\r\n        outputs: [],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOutMin',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'operator',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'deadline',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint8',\r\n                        name: 'v',\r\n                        type: 'uint8',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'r',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 's',\r\n                        type: 'bytes32',\r\n                    },\r\n                ],\r\n                internalType: 'struct IIxsV2Pair.SecAuthorization[]',\r\n                name: 'authorizations',\r\n                type: 'tuple[]',\r\n            },\r\n        ],\r\n        name: 'swapExactTokensForTokens',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256[]',\r\n                name: 'amounts',\r\n                type: 'uint256[]',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOutMin',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'operator',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'deadline',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint8',\r\n                        name: 'v',\r\n                        type: 'uint8',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'r',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 's',\r\n                        type: 'bytes32',\r\n                    },\r\n                ],\r\n                internalType: 'struct IIxsV2Pair.SecAuthorization[]',\r\n                name: 'authorizations',\r\n                type: 'tuple[]',\r\n            },\r\n        ],\r\n        name: 'swapExactTokensForTokensSupportingFeeOnTransferTokens',\r\n        outputs: [],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountInMax',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'operator',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'deadline',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint8',\r\n                        name: 'v',\r\n                        type: 'uint8',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'r',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 's',\r\n                        type: 'bytes32',\r\n                    },\r\n                ],\r\n                internalType: 'struct IIxsV2Pair.SecAuthorization[]',\r\n                name: 'authorizations',\r\n                type: 'tuple[]',\r\n            },\r\n        ],\r\n        name: 'swapTokensForExactETH',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256[]',\r\n                name: 'amounts',\r\n                type: 'uint256[]',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountInMax',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'operator',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'deadline',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint8',\r\n                        name: 'v',\r\n                        type: 'uint8',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'r',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 's',\r\n                        type: 'bytes32',\r\n                    },\r\n                ],\r\n                internalType: 'struct IIxsV2Pair.SecAuthorization[]',\r\n                name: 'authorizations',\r\n                type: 'tuple[]',\r\n            },\r\n        ],\r\n        name: 'swapTokensForExactTokens',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256[]',\r\n                name: 'amounts',\r\n                type: 'uint256[]',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        stateMutability: 'payable',\r\n        type: 'receive',\r\n    },\r\n];\r\n","export const routerAbi = [\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_factory\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_WETH\", type: \"address\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"constructor\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"WETH\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amountADesired\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountBDesired\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"addLiquidity\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"token\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"amountTokenDesired\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"addLiquidityETH\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"factory\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"reserveIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"reserveOut\", type: \"uint256\" },\r\n        ],\r\n        name: \"getAmountIn\",\r\n        outputs: [{ internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" }],\r\n        stateMutability: \"pure\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"reserveIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"reserveOut\", type: \"uint256\" },\r\n        ],\r\n        name: \"getAmountOut\",\r\n        outputs: [{ internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" }],\r\n        stateMutability: \"pure\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n        ],\r\n        name: \"getAmountsIn\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n        ],\r\n        name: \"getAmountsOut\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"reserveA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"reserveB\", type: \"uint256\" },\r\n        ],\r\n        name: \"quote\",\r\n        outputs: [{ internalType: \"uint256\", name: \"amountB\", type: \"uint256\" }],\r\n        stateMutability: \"pure\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"removeLiquidity\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"token\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"removeLiquidityETH\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"token\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"removeLiquidityETHSupportingFeeOnTransferTokens\",\r\n        outputs: [{ internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"token\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n            { internalType: \"bool\", name: \"approveMax\", type: \"bool\" },\r\n            { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\r\n            { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\r\n            { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\r\n        ],\r\n        name: \"removeLiquidityETHWithPermit\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"token\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n            { internalType: \"bool\", name: \"approveMax\", type: \"bool\" },\r\n            { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\r\n            { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\r\n            { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\r\n        ],\r\n        name: \"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\r\n        outputs: [{ internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n            { internalType: \"bool\", name: \"approveMax\", type: \"bool\" },\r\n            { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\r\n            { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\r\n            { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\r\n        ],\r\n        name: \"removeLiquidityWithPermit\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapETHForExactTokens\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactETHForTokens\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactETHForTokensSupportingFeeOnTransferTokens\",\r\n        outputs: [],\r\n        stateMutability: \"payable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactTokensForETH\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactTokensForETHSupportingFeeOnTransferTokens\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactTokensForTokens\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountInMax\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapTokensForExactETH\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amountInMax\", type: \"uint256\" },\r\n            { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n        ],\r\n        name: \"swapTokensForExactTokens\",\r\n        outputs: [\r\n            { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\r\n        ],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    { stateMutability: \"payable\", type: \"receive\" },\r\n];\r\n\r\nexport const factoryAbi = [\r\n    {\r\n        inputs: [],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"constructor\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"token0\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"token1\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"pair\",\r\n                type: \"address\",\r\n            },\r\n            { indexed: false, internalType: \"uint256\", name: \"\", type: \"uint256\" },\r\n        ],\r\n        name: \"PairCreated\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"INIT_CODE_HASH\",\r\n        outputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        name: \"allPairs\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"allPairsLength\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: \"address\", name: \"tokenA\", type: \"address\" },\r\n            { internalType: \"address\", name: \"tokenB\", type: \"address\" },\r\n        ],\r\n        name: \"createPair\",\r\n        outputs: [{ internalType: \"address\", name: \"pair\", type: \"address\" }],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"feeTo\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"feeToSetter\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [\r\n            { internalType: \"address\", name: \"\", type: \"address\" },\r\n            { internalType: \"address\", name: \"\", type: \"address\" },\r\n        ],\r\n        name: \"getPair\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [{ internalType: \"address\", name: \"_feeTo\", type: \"address\" }],\r\n        name: \"setFeeTo\",\r\n        outputs: [],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_feeToSetter\", type: \"address\" },\r\n        ],\r\n        name: \"setFeeToSetter\",\r\n        outputs: [],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\n\r\nexport const pairAbi = [\r\n    {\r\n        inputs: [],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"constructor\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Approval\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n            { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n        ],\r\n        name: \"Burn\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Mint\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"sender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0In\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1In\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount0Out\",\r\n                type: \"uint256\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount1Out\",\r\n                type: \"uint256\",\r\n            },\r\n            { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n        ],\r\n        name: \"Swap\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint112\",\r\n                name: \"reserve0\",\r\n                type: \"uint112\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint112\",\r\n                name: \"reserve1\",\r\n                type: \"uint112\",\r\n            },\r\n        ],\r\n        name: \"Sync\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\r\n            { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Transfer\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"DOMAIN_SEPARATOR\",\r\n        outputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"MINIMUM_LIQUIDITY\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"PERMIT_TYPEHASH\",\r\n        outputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [\r\n            { internalType: \"address\", name: \"\", type: \"address\" },\r\n            { internalType: \"address\", name: \"\", type: \"address\" },\r\n        ],\r\n        name: \"allowance\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n        ],\r\n        name: \"approve\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        name: \"balanceOf\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [{ internalType: \"address\", name: \"to\", type: \"address\" }],\r\n        name: \"burn\",\r\n        outputs: [\r\n            { internalType: \"uint256\", name: \"amount0\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amount1\", type: \"uint256\" },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"decimals\",\r\n        outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"factory\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"getReserves\",\r\n        outputs: [\r\n            { internalType: \"uint112\", name: \"_reserve0\", type: \"uint112\" },\r\n            { internalType: \"uint112\", name: \"_reserve1\", type: \"uint112\" },\r\n            { internalType: \"uint32\", name: \"_blockTimestampLast\", type: \"uint32\" },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: \"address\", name: \"_token0\", type: \"address\" },\r\n            { internalType: \"address\", name: \"_token1\", type: \"address\" },\r\n        ],\r\n        name: \"initialize\",\r\n        outputs: [],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"kLast\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [{ internalType: \"address\", name: \"to\", type: \"address\" }],\r\n        name: \"mint\",\r\n        outputs: [{ internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" }],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"name\",\r\n        outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        name: \"nonces\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: \"address\", name: \"owner\", type: \"address\" },\r\n            { internalType: \"address\", name: \"spender\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\r\n            { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\r\n            { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\r\n            { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\r\n        ],\r\n        name: \"permit\",\r\n        outputs: [],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"price0CumulativeLast\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"price1CumulativeLast\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [{ internalType: \"address\", name: \"to\", type: \"address\" }],\r\n        name: \"skim\",\r\n        outputs: [],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: \"uint256\", name: \"amount0Out\", type: \"uint256\" },\r\n            { internalType: \"uint256\", name: \"amount1Out\", type: \"uint256\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\r\n        ],\r\n        name: \"swap\",\r\n        outputs: [],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"symbol\",\r\n        outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [],\r\n        name: \"sync\",\r\n        outputs: [],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"token0\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"token1\",\r\n        outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"totalSupply\",\r\n        outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n        ],\r\n        name: \"transfer\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: \"address\", name: \"from\", type: \"address\" },\r\n            { internalType: \"address\", name: \"to\", type: \"address\" },\r\n            { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\r\n        ],\r\n        name: \"transferFrom\",\r\n        outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\n","export const routerV1Abi = [\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: '_deployer', type: 'address' },\r\n            { internalType: 'address', name: '_factory', type: 'address' },\r\n            { internalType: 'address', name: '_WETH9', type: 'address' },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'constructor',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'WETH9',\r\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'deployer',\r\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    { internalType: 'bytes', name: 'path', type: 'bytes' },\r\n                    { internalType: 'address', name: 'recipient', type: 'address' },\r\n                    { internalType: 'uint256', name: 'deadline', type: 'uint256' },\r\n                    { internalType: 'uint256', name: 'amountIn', type: 'uint256' },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountOutMinimum',\r\n                        type: 'uint256',\r\n                    },\r\n                ],\r\n                internalType: 'struct ISwapRouter.ExactInputParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'exactInput',\r\n        outputs: [{ internalType: 'uint256', name: 'amountOut', type: 'uint256' }],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    { internalType: 'address', name: 'tokenIn', type: 'address' },\r\n                    { internalType: 'address', name: 'tokenOut', type: 'address' },\r\n                    { internalType: 'uint24', name: 'fee', type: 'uint24' },\r\n                    { internalType: 'address', name: 'recipient', type: 'address' },\r\n                    { internalType: 'uint256', name: 'deadline', type: 'uint256' },\r\n                    { internalType: 'uint256', name: 'amountIn', type: 'uint256' },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountOutMinimum',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint160',\r\n                        name: 'sqrtPriceLimitX96',\r\n                        type: 'uint160',\r\n                    },\r\n                ],\r\n                internalType: 'struct ISwapRouter.ExactInputSingleParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'exactInputSingle',\r\n        outputs: [{ internalType: 'uint256', name: 'amountOut', type: 'uint256' }],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    { internalType: 'bytes', name: 'path', type: 'bytes' },\r\n                    { internalType: 'address', name: 'recipient', type: 'address' },\r\n                    { internalType: 'uint256', name: 'deadline', type: 'uint256' },\r\n                    { internalType: 'uint256', name: 'amountOut', type: 'uint256' },\r\n                    { internalType: 'uint256', name: 'amountInMaximum', type: 'uint256' },\r\n                ],\r\n                internalType: 'struct ISwapRouter.ExactOutputParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'exactOutput',\r\n        outputs: [{ internalType: 'uint256', name: 'amountIn', type: 'uint256' }],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    { internalType: 'address', name: 'tokenIn', type: 'address' },\r\n                    { internalType: 'address', name: 'tokenOut', type: 'address' },\r\n                    { internalType: 'uint24', name: 'fee', type: 'uint24' },\r\n                    { internalType: 'address', name: 'recipient', type: 'address' },\r\n                    { internalType: 'uint256', name: 'deadline', type: 'uint256' },\r\n                    { internalType: 'uint256', name: 'amountOut', type: 'uint256' },\r\n                    { internalType: 'uint256', name: 'amountInMaximum', type: 'uint256' },\r\n                    {\r\n                        internalType: 'uint160',\r\n                        name: 'sqrtPriceLimitX96',\r\n                        type: 'uint160',\r\n                    },\r\n                ],\r\n                internalType: 'struct ISwapRouter.ExactOutputSingleParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'exactOutputSingle',\r\n        outputs: [{ internalType: 'uint256', name: 'amountIn', type: 'uint256' }],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'factory',\r\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [{ internalType: 'bytes[]', name: 'data', type: 'bytes[]' }],\r\n        name: 'multicall',\r\n        outputs: [{ internalType: 'bytes[]', name: 'results', type: 'bytes[]' }],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'int256', name: 'amount0Delta', type: 'int256' },\r\n            { internalType: 'int256', name: 'amount1Delta', type: 'int256' },\r\n            { internalType: 'bytes', name: '_data', type: 'bytes' },\r\n        ],\r\n        name: 'pancakeV3SwapCallback',\r\n        outputs: [],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'refundETH',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'token', type: 'address' },\r\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\r\n            { internalType: 'uint256', name: 'deadline', type: 'uint256' },\r\n            { internalType: 'uint8', name: 'v', type: 'uint8' },\r\n            { internalType: 'bytes32', name: 'r', type: 'bytes32' },\r\n            { internalType: 'bytes32', name: 's', type: 'bytes32' },\r\n        ],\r\n        name: 'selfPermit',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'token', type: 'address' },\r\n            { internalType: 'uint256', name: 'nonce', type: 'uint256' },\r\n            { internalType: 'uint256', name: 'expiry', type: 'uint256' },\r\n            { internalType: 'uint8', name: 'v', type: 'uint8' },\r\n            { internalType: 'bytes32', name: 'r', type: 'bytes32' },\r\n            { internalType: 'bytes32', name: 's', type: 'bytes32' },\r\n        ],\r\n        name: 'selfPermitAllowed',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'token', type: 'address' },\r\n            { internalType: 'uint256', name: 'nonce', type: 'uint256' },\r\n            { internalType: 'uint256', name: 'expiry', type: 'uint256' },\r\n            { internalType: 'uint8', name: 'v', type: 'uint8' },\r\n            { internalType: 'bytes32', name: 'r', type: 'bytes32' },\r\n            { internalType: 'bytes32', name: 's', type: 'bytes32' },\r\n        ],\r\n        name: 'selfPermitAllowedIfNecessary',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'token', type: 'address' },\r\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\r\n            { internalType: 'uint256', name: 'deadline', type: 'uint256' },\r\n            { internalType: 'uint8', name: 'v', type: 'uint8' },\r\n            { internalType: 'bytes32', name: 'r', type: 'bytes32' },\r\n            { internalType: 'bytes32', name: 's', type: 'bytes32' },\r\n        ],\r\n        name: 'selfPermitIfNecessary',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'token', type: 'address' },\r\n            { internalType: 'uint256', name: 'amountMinimum', type: 'uint256' },\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n        ],\r\n        name: 'sweepToken',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'token', type: 'address' },\r\n            { internalType: 'uint256', name: 'amountMinimum', type: 'uint256' },\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n            { internalType: 'uint256', name: 'feeBips', type: 'uint256' },\r\n            { internalType: 'address', name: 'feeRecipient', type: 'address' },\r\n        ],\r\n        name: 'sweepTokenWithFee',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'uint256', name: 'amountMinimum', type: 'uint256' },\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n        ],\r\n        name: 'unwrapWETH9',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'uint256', name: 'amountMinimum', type: 'uint256' },\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n            { internalType: 'uint256', name: 'feeBips', type: 'uint256' },\r\n            { internalType: 'address', name: 'feeRecipient', type: 'address' },\r\n        ],\r\n        name: 'unwrapWETH9WithFee',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    { stateMutability: 'payable', type: 'receive' },\r\n];\r\n\r\nexport const routerAbi = [\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '_factoryV2',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'factoryV3',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: '_positionManager',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: '_WETH9',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'constructor',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'WETH9',\r\n        outputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'approveMax',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'approveMaxMinusOne',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'approveZeroThenMax',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'approveZeroThenMaxMinusOne',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'bytes',\r\n                name: 'data',\r\n                type: 'bytes',\r\n            },\r\n        ],\r\n        name: 'callPositionManager',\r\n        outputs: [\r\n            {\r\n                internalType: 'bytes',\r\n                name: 'result',\r\n                type: 'bytes',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'bytes[]',\r\n                name: 'paths',\r\n                type: 'bytes[]',\r\n            },\r\n            {\r\n                internalType: 'uint128[]',\r\n                name: 'amounts',\r\n                type: 'uint128[]',\r\n            },\r\n            {\r\n                internalType: 'uint24',\r\n                name: 'maximumTickDivergence',\r\n                type: 'uint24',\r\n            },\r\n            {\r\n                internalType: 'uint32',\r\n                name: 'secondsAgo',\r\n                type: 'uint32',\r\n            },\r\n        ],\r\n        name: 'checkOracleSlippage',\r\n        outputs: [],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'bytes',\r\n                name: 'path',\r\n                type: 'bytes',\r\n            },\r\n            {\r\n                internalType: 'uint24',\r\n                name: 'maximumTickDivergence',\r\n                type: 'uint24',\r\n            },\r\n            {\r\n                internalType: 'uint32',\r\n                name: 'secondsAgo',\r\n                type: 'uint32',\r\n            },\r\n        ],\r\n        name: 'checkOracleSlippage',\r\n        outputs: [],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'bytes',\r\n                        name: 'path',\r\n                        type: 'bytes',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'recipient',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountIn',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountOutMinimum',\r\n                        type: 'uint256',\r\n                    },\r\n                ],\r\n                internalType: 'struct IV3SwapRouter.ExactInputParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'exactInput',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'tokenIn',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'tokenOut',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint24',\r\n                        name: 'fee',\r\n                        type: 'uint24',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'recipient',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountIn',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountOutMinimum',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint160',\r\n                        name: 'sqrtPriceLimitX96',\r\n                        type: 'uint160',\r\n                    },\r\n                ],\r\n                internalType: 'struct IV3SwapRouter.ExactInputSingleParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'exactInputSingle',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'bytes',\r\n                        name: 'path',\r\n                        type: 'bytes',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'recipient',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountOut',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountInMaximum',\r\n                        type: 'uint256',\r\n                    },\r\n                ],\r\n                internalType: 'struct IV3SwapRouter.ExactOutputParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'exactOutput',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'tokenIn',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'tokenOut',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint24',\r\n                        name: 'fee',\r\n                        type: 'uint24',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'recipient',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountOut',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountInMaximum',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint160',\r\n                        name: 'sqrtPriceLimitX96',\r\n                        type: 'uint160',\r\n                    },\r\n                ],\r\n                internalType: 'struct IV3SwapRouter.ExactOutputSingleParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'exactOutputSingle',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'factory',\r\n        outputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'factoryV2',\r\n        outputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amount',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'getApprovalType',\r\n        outputs: [\r\n            {\r\n                internalType: 'enum IApproveAndCall.ApprovalType',\r\n                name: '',\r\n                type: 'uint8',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'token0',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'token1',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'tokenId',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amount0Min',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amount1Min',\r\n                        type: 'uint256',\r\n                    },\r\n                ],\r\n                internalType: 'struct IApproveAndCall.IncreaseLiquidityParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'increaseLiquidity',\r\n        outputs: [\r\n            {\r\n                internalType: 'bytes',\r\n                name: 'result',\r\n                type: 'bytes',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'token0',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'token1',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint24',\r\n                        name: 'fee',\r\n                        type: 'uint24',\r\n                    },\r\n                    {\r\n                        internalType: 'int24',\r\n                        name: 'tickLower',\r\n                        type: 'int24',\r\n                    },\r\n                    {\r\n                        internalType: 'int24',\r\n                        name: 'tickUpper',\r\n                        type: 'int24',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amount0Min',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amount1Min',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'recipient',\r\n                        type: 'address',\r\n                    },\r\n                ],\r\n                internalType: 'struct IApproveAndCall.MintParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'mint',\r\n        outputs: [\r\n            {\r\n                internalType: 'bytes',\r\n                name: 'result',\r\n                type: 'bytes',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'bytes32',\r\n                name: 'previousBlockhash',\r\n                type: 'bytes32',\r\n            },\r\n            {\r\n                internalType: 'bytes[]',\r\n                name: 'data',\r\n                type: 'bytes[]',\r\n            },\r\n        ],\r\n        name: 'multicall',\r\n        outputs: [\r\n            {\r\n                internalType: 'bytes[]',\r\n                name: '',\r\n                type: 'bytes[]',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'bytes[]',\r\n                name: 'data',\r\n                type: 'bytes[]',\r\n            },\r\n        ],\r\n        name: 'multicall',\r\n        outputs: [\r\n            {\r\n                internalType: 'bytes[]',\r\n                name: '',\r\n                type: 'bytes[]',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'bytes[]',\r\n                name: 'data',\r\n                type: 'bytes[]',\r\n            },\r\n        ],\r\n        name: 'multicall',\r\n        outputs: [\r\n            {\r\n                internalType: 'bytes[]',\r\n                name: 'results',\r\n                type: 'bytes[]',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'positionManager',\r\n        outputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'value',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'pull',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'refundETH',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'value',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint8',\r\n                name: 'v',\r\n                type: 'uint8',\r\n            },\r\n            {\r\n                internalType: 'bytes32',\r\n                name: 'r',\r\n                type: 'bytes32',\r\n            },\r\n            {\r\n                internalType: 'bytes32',\r\n                name: 's',\r\n                type: 'bytes32',\r\n            },\r\n        ],\r\n        name: 'selfPermit',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'nonce',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'expiry',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint8',\r\n                name: 'v',\r\n                type: 'uint8',\r\n            },\r\n            {\r\n                internalType: 'bytes32',\r\n                name: 'r',\r\n                type: 'bytes32',\r\n            },\r\n            {\r\n                internalType: 'bytes32',\r\n                name: 's',\r\n                type: 'bytes32',\r\n            },\r\n        ],\r\n        name: 'selfPermitAllowed',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'nonce',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'expiry',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint8',\r\n                name: 'v',\r\n                type: 'uint8',\r\n            },\r\n            {\r\n                internalType: 'bytes32',\r\n                name: 'r',\r\n                type: 'bytes32',\r\n            },\r\n            {\r\n                internalType: 'bytes32',\r\n                name: 's',\r\n                type: 'bytes32',\r\n            },\r\n        ],\r\n        name: 'selfPermitAllowedIfNecessary',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'value',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'deadline',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint8',\r\n                name: 'v',\r\n                type: 'uint8',\r\n            },\r\n            {\r\n                internalType: 'bytes32',\r\n                name: 'r',\r\n                type: 'bytes32',\r\n            },\r\n            {\r\n                internalType: 'bytes32',\r\n                name: 's',\r\n                type: 'bytes32',\r\n            },\r\n        ],\r\n        name: 'selfPermitIfNecessary',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOutMin',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'swapExactTokensForTokens',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountInMax',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address[]',\r\n                name: 'path',\r\n                type: 'address[]',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'to',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'swapTokensForExactTokens',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountMinimum',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'recipient',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'sweepToken',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountMinimum',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'sweepToken',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountMinimum',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'feeBips',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'feeRecipient',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'sweepTokenWithFee',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: 'token',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountMinimum',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'recipient',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'feeBips',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'feeRecipient',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'sweepTokenWithFee',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'int256',\r\n                name: 'amount0Delta',\r\n                type: 'int256',\r\n            },\r\n            {\r\n                internalType: 'int256',\r\n                name: 'amount1Delta',\r\n                type: 'int256',\r\n            },\r\n            {\r\n                internalType: 'bytes',\r\n                name: '_data',\r\n                type: 'bytes',\r\n            },\r\n        ],\r\n        name: 'uniswapV3SwapCallback',\r\n        outputs: [],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountMinimum',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'recipient',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'unwrapWETH9',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountMinimum',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'unwrapWETH9',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountMinimum',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'recipient',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'feeBips',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'feeRecipient',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'unwrapWETH9WithFee',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountMinimum',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'feeBips',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: 'feeRecipient',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'unwrapWETH9WithFee',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'value',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'wrapETH',\r\n        outputs: [],\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        stateMutability: 'payable',\r\n        type: 'receive',\r\n    },\r\n];\r\n\r\nexport const quoterAbi = [\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '_factory',\r\n                type: 'address',\r\n            },\r\n            {\r\n                internalType: 'address',\r\n                name: '_WETH9',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'constructor',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'WETH9',\r\n        outputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'factory',\r\n        outputs: [\r\n            {\r\n                internalType: 'address',\r\n                name: '',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'bytes',\r\n                name: 'path',\r\n                type: 'bytes',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'quoteExactInput',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint160[]',\r\n                name: 'sqrtPriceX96AfterList',\r\n                type: 'uint160[]',\r\n            },\r\n            {\r\n                internalType: 'uint32[]',\r\n                name: 'initializedTicksCrossedList',\r\n                type: 'uint32[]',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'gasEstimate',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'tokenIn',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'tokenOut',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amountIn',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint24',\r\n                        name: 'fee',\r\n                        type: 'uint24',\r\n                    },\r\n                    {\r\n                        internalType: 'uint160',\r\n                        name: 'sqrtPriceLimitX96',\r\n                        type: 'uint160',\r\n                    },\r\n                ],\r\n                internalType: 'struct IQuoterV2.QuoteExactInputSingleParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'quoteExactInputSingle',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint160',\r\n                name: 'sqrtPriceX96After',\r\n                type: 'uint160',\r\n            },\r\n            {\r\n                internalType: 'uint32',\r\n                name: 'initializedTicksCrossed',\r\n                type: 'uint32',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'gasEstimate',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'bytes',\r\n                name: 'path',\r\n                type: 'bytes',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountOut',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'quoteExactOutput',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint160[]',\r\n                name: 'sqrtPriceX96AfterList',\r\n                type: 'uint160[]',\r\n            },\r\n            {\r\n                internalType: 'uint32[]',\r\n                name: 'initializedTicksCrossedList',\r\n                type: 'uint32[]',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'gasEstimate',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'tokenIn',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'address',\r\n                        name: 'tokenOut',\r\n                        type: 'address',\r\n                    },\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'amount',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'uint24',\r\n                        name: 'fee',\r\n                        type: 'uint24',\r\n                    },\r\n                    {\r\n                        internalType: 'uint160',\r\n                        name: 'sqrtPriceLimitX96',\r\n                        type: 'uint160',\r\n                    },\r\n                ],\r\n                internalType: 'struct IQuoterV2.QuoteExactOutputSingleParams',\r\n                name: 'params',\r\n                type: 'tuple',\r\n            },\r\n        ],\r\n        name: 'quoteExactOutputSingle',\r\n        outputs: [\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'amountIn',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint160',\r\n                name: 'sqrtPriceX96After',\r\n                type: 'uint160',\r\n            },\r\n            {\r\n                internalType: 'uint32',\r\n                name: 'initializedTicksCrossed',\r\n                type: 'uint32',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'gasEstimate',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'int256',\r\n                name: 'amount0Delta',\r\n                type: 'int256',\r\n            },\r\n            {\r\n                internalType: 'int256',\r\n                name: 'amount1Delta',\r\n                type: 'int256',\r\n            },\r\n            {\r\n                internalType: 'bytes',\r\n                name: 'path',\r\n                type: 'bytes',\r\n            },\r\n        ],\r\n        name: 'uniswapV3SwapCallback',\r\n        outputs: [],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n];\r\n\r\nexport const factoryAbi = [\r\n    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: true, internalType: 'uint24', name: 'fee', type: 'uint24' },\r\n            {\r\n                indexed: true,\r\n                internalType: 'int24',\r\n                name: 'tickSpacing',\r\n                type: 'int24',\r\n            },\r\n        ],\r\n        name: 'FeeAmountEnabled',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'oldOwner',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'newOwner',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'OwnerChanged',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'token0',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'token1',\r\n                type: 'address',\r\n            },\r\n            { indexed: true, internalType: 'uint24', name: 'fee', type: 'uint24' },\r\n            {\r\n                indexed: false,\r\n                internalType: 'int24',\r\n                name: 'tickSpacing',\r\n                type: 'int24',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'address',\r\n                name: 'pool',\r\n                type: 'address',\r\n            },\r\n        ],\r\n        name: 'PoolCreated',\r\n        type: 'event',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'tokenA', type: 'address' },\r\n            { internalType: 'address', name: 'tokenB', type: 'address' },\r\n            { internalType: 'uint24', name: 'fee', type: 'uint24' },\r\n        ],\r\n        name: 'createPool',\r\n        outputs: [{ internalType: 'address', name: 'pool', type: 'address' }],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'uint24', name: 'fee', type: 'uint24' },\r\n            { internalType: 'int24', name: 'tickSpacing', type: 'int24' },\r\n        ],\r\n        name: 'enableFeeAmount',\r\n        outputs: [],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [{ internalType: 'uint24', name: '', type: 'uint24' }],\r\n        name: 'feeAmountTickSpacing',\r\n        outputs: [{ internalType: 'int24', name: '', type: 'int24' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: '', type: 'address' },\r\n            { internalType: 'address', name: '', type: 'address' },\r\n            { internalType: 'uint24', name: '', type: 'uint24' },\r\n        ],\r\n        name: 'getPool',\r\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'owner',\r\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'parameters',\r\n        outputs: [\r\n            { internalType: 'address', name: 'factory', type: 'address' },\r\n            { internalType: 'address', name: 'token0', type: 'address' },\r\n            { internalType: 'address', name: 'token1', type: 'address' },\r\n            { internalType: 'uint24', name: 'fee', type: 'uint24' },\r\n            { internalType: 'int24', name: 'tickSpacing', type: 'int24' },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],\r\n        name: 'setOwner',\r\n        outputs: [],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n];\r\n\r\nexport const poolAbi = [\r\n    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'owner',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'int24',\r\n                name: 'tickLower',\r\n                type: 'int24',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'int24',\r\n                name: 'tickUpper',\r\n                type: 'int24',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint128',\r\n                name: 'amount',\r\n                type: 'uint128',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint256',\r\n                name: 'amount0',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint256',\r\n                name: 'amount1',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'Burn',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'owner',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'address',\r\n                name: 'recipient',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'int24',\r\n                name: 'tickLower',\r\n                type: 'int24',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'int24',\r\n                name: 'tickUpper',\r\n                type: 'int24',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint128',\r\n                name: 'amount0',\r\n                type: 'uint128',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint128',\r\n                name: 'amount1',\r\n                type: 'uint128',\r\n            },\r\n        ],\r\n        name: 'Collect',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'sender',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'recipient',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint128',\r\n                name: 'amount0',\r\n                type: 'uint128',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint128',\r\n                name: 'amount1',\r\n                type: 'uint128',\r\n            },\r\n        ],\r\n        name: 'CollectProtocol',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'sender',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'recipient',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint256',\r\n                name: 'amount0',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint256',\r\n                name: 'amount1',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint256',\r\n                name: 'paid0',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint256',\r\n                name: 'paid1',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'Flash',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint16',\r\n                name: 'observationCardinalityNextOld',\r\n                type: 'uint16',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint16',\r\n                name: 'observationCardinalityNextNew',\r\n                type: 'uint16',\r\n            },\r\n        ],\r\n        name: 'IncreaseObservationCardinalityNext',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint160',\r\n                name: 'sqrtPriceX96',\r\n                type: 'uint160',\r\n            },\r\n            { indexed: false, internalType: 'int24', name: 'tick', type: 'int24' },\r\n        ],\r\n        name: 'Initialize',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: 'address',\r\n                name: 'sender',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'owner',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'int24',\r\n                name: 'tickLower',\r\n                type: 'int24',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'int24',\r\n                name: 'tickUpper',\r\n                type: 'int24',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint128',\r\n                name: 'amount',\r\n                type: 'uint128',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint256',\r\n                name: 'amount0',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint256',\r\n                name: 'amount1',\r\n                type: 'uint256',\r\n            },\r\n        ],\r\n        name: 'Mint',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint8',\r\n                name: 'feeProtocol0Old',\r\n                type: 'uint8',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint8',\r\n                name: 'feeProtocol1Old',\r\n                type: 'uint8',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint8',\r\n                name: 'feeProtocol0New',\r\n                type: 'uint8',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint8',\r\n                name: 'feeProtocol1New',\r\n                type: 'uint8',\r\n            },\r\n        ],\r\n        name: 'SetFeeProtocol',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'sender',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: 'address',\r\n                name: 'recipient',\r\n                type: 'address',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'int256',\r\n                name: 'amount0',\r\n                type: 'int256',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'int256',\r\n                name: 'amount1',\r\n                type: 'int256',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint160',\r\n                name: 'sqrtPriceX96',\r\n                type: 'uint160',\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: 'uint128',\r\n                name: 'liquidity',\r\n                type: 'uint128',\r\n            },\r\n            { indexed: false, internalType: 'int24', name: 'tick', type: 'int24' },\r\n        ],\r\n        name: 'Swap',\r\n        type: 'event',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'int24', name: 'tickLower', type: 'int24' },\r\n            { internalType: 'int24', name: 'tickUpper', type: 'int24' },\r\n            { internalType: 'uint128', name: 'amount', type: 'uint128' },\r\n        ],\r\n        name: 'burn',\r\n        outputs: [\r\n            { internalType: 'uint256', name: 'amount0', type: 'uint256' },\r\n            { internalType: 'uint256', name: 'amount1', type: 'uint256' },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n            { internalType: 'int24', name: 'tickLower', type: 'int24' },\r\n            { internalType: 'int24', name: 'tickUpper', type: 'int24' },\r\n            { internalType: 'uint128', name: 'amount0Requested', type: 'uint128' },\r\n            { internalType: 'uint128', name: 'amount1Requested', type: 'uint128' },\r\n        ],\r\n        name: 'collect',\r\n        outputs: [\r\n            { internalType: 'uint128', name: 'amount0', type: 'uint128' },\r\n            { internalType: 'uint128', name: 'amount1', type: 'uint128' },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n            { internalType: 'uint128', name: 'amount0Requested', type: 'uint128' },\r\n            { internalType: 'uint128', name: 'amount1Requested', type: 'uint128' },\r\n        ],\r\n        name: 'collectProtocol',\r\n        outputs: [\r\n            { internalType: 'uint128', name: 'amount0', type: 'uint128' },\r\n            { internalType: 'uint128', name: 'amount1', type: 'uint128' },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'factory',\r\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'fee',\r\n        outputs: [{ internalType: 'uint24', name: '', type: 'uint24' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'feeGrowthGlobal0X128',\r\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'feeGrowthGlobal1X128',\r\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n            { internalType: 'uint256', name: 'amount0', type: 'uint256' },\r\n            { internalType: 'uint256', name: 'amount1', type: 'uint256' },\r\n            { internalType: 'bytes', name: 'data', type: 'bytes' },\r\n        ],\r\n        name: 'flash',\r\n        outputs: [],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: 'uint16',\r\n                name: 'observationCardinalityNext',\r\n                type: 'uint16',\r\n            },\r\n        ],\r\n        name: 'increaseObservationCardinalityNext',\r\n        outputs: [],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'uint160', name: 'sqrtPriceX96', type: 'uint160' },\r\n        ],\r\n        name: 'initialize',\r\n        outputs: [],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'liquidity',\r\n        outputs: [{ internalType: 'uint128', name: '', type: 'uint128' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'maxLiquidityPerTick',\r\n        outputs: [{ internalType: 'uint128', name: '', type: 'uint128' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n            { internalType: 'int24', name: 'tickLower', type: 'int24' },\r\n            { internalType: 'int24', name: 'tickUpper', type: 'int24' },\r\n            { internalType: 'uint128', name: 'amount', type: 'uint128' },\r\n            { internalType: 'bytes', name: 'data', type: 'bytes' },\r\n        ],\r\n        name: 'mint',\r\n        outputs: [\r\n            { internalType: 'uint256', name: 'amount0', type: 'uint256' },\r\n            { internalType: 'uint256', name: 'amount1', type: 'uint256' },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        name: 'observations',\r\n        outputs: [\r\n            { internalType: 'uint32', name: 'blockTimestamp', type: 'uint32' },\r\n            { internalType: 'int56', name: 'tickCumulative', type: 'int56' },\r\n            {\r\n                internalType: 'uint160',\r\n                name: 'secondsPerLiquidityCumulativeX128',\r\n                type: 'uint160',\r\n            },\r\n            { internalType: 'bool', name: 'initialized', type: 'bool' },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'uint32[]', name: 'secondsAgos', type: 'uint32[]' },\r\n        ],\r\n        name: 'observe',\r\n        outputs: [\r\n            { internalType: 'int56[]', name: 'tickCumulatives', type: 'int56[]' },\r\n            {\r\n                internalType: 'uint160[]',\r\n                name: 'secondsPerLiquidityCumulativeX128s',\r\n                type: 'uint160[]',\r\n            },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\r\n        name: 'positions',\r\n        outputs: [\r\n            { internalType: 'uint128', name: 'liquidity', type: 'uint128' },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'feeGrowthInside0LastX128',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'feeGrowthInside1LastX128',\r\n                type: 'uint256',\r\n            },\r\n            { internalType: 'uint128', name: 'tokensOwed0', type: 'uint128' },\r\n            { internalType: 'uint128', name: 'tokensOwed1', type: 'uint128' },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'protocolFees',\r\n        outputs: [\r\n            { internalType: 'uint128', name: 'token0', type: 'uint128' },\r\n            { internalType: 'uint128', name: 'token1', type: 'uint128' },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'uint8', name: 'feeProtocol0', type: 'uint8' },\r\n            { internalType: 'uint8', name: 'feeProtocol1', type: 'uint8' },\r\n        ],\r\n        name: 'setFeeProtocol',\r\n        outputs: [],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'slot0',\r\n        outputs: [\r\n            { internalType: 'uint160', name: 'sqrtPriceX96', type: 'uint160' },\r\n            { internalType: 'int24', name: 'tick', type: 'int24' },\r\n            { internalType: 'uint16', name: 'observationIndex', type: 'uint16' },\r\n            {\r\n                internalType: 'uint16',\r\n                name: 'observationCardinality',\r\n                type: 'uint16',\r\n            },\r\n            {\r\n                internalType: 'uint16',\r\n                name: 'observationCardinalityNext',\r\n                type: 'uint16',\r\n            },\r\n            { internalType: 'uint8', name: 'feeProtocol', type: 'uint8' },\r\n            { internalType: 'bool', name: 'unlocked', type: 'bool' },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'int24', name: 'tickLower', type: 'int24' },\r\n            { internalType: 'int24', name: 'tickUpper', type: 'int24' },\r\n        ],\r\n        name: 'snapshotCumulativesInside',\r\n        outputs: [\r\n            { internalType: 'int56', name: 'tickCumulativeInside', type: 'int56' },\r\n            {\r\n                internalType: 'uint160',\r\n                name: 'secondsPerLiquidityInsideX128',\r\n                type: 'uint160',\r\n            },\r\n            { internalType: 'uint32', name: 'secondsInside', type: 'uint32' },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n            { internalType: 'bool', name: 'zeroForOne', type: 'bool' },\r\n            { internalType: 'int256', name: 'amountSpecified', type: 'int256' },\r\n            { internalType: 'uint160', name: 'sqrtPriceLimitX96', type: 'uint160' },\r\n            { internalType: 'bytes', name: 'data', type: 'bytes' },\r\n        ],\r\n        name: 'swap',\r\n        outputs: [\r\n            { internalType: 'int256', name: 'amount0', type: 'int256' },\r\n            { internalType: 'int256', name: 'amount1', type: 'int256' },\r\n        ],\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [{ internalType: 'int16', name: '', type: 'int16' }],\r\n        name: 'tickBitmap',\r\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'tickSpacing',\r\n        outputs: [{ internalType: 'int24', name: '', type: 'int24' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [{ internalType: 'int24', name: '', type: 'int24' }],\r\n        name: 'ticks',\r\n        outputs: [\r\n            { internalType: 'uint128', name: 'liquidityGross', type: 'uint128' },\r\n            { internalType: 'int128', name: 'liquidityNet', type: 'int128' },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'feeGrowthOutside0X128',\r\n                type: 'uint256',\r\n            },\r\n            {\r\n                internalType: 'uint256',\r\n                name: 'feeGrowthOutside1X128',\r\n                type: 'uint256',\r\n            },\r\n            { internalType: 'int56', name: 'tickCumulativeOutside', type: 'int56' },\r\n            {\r\n                internalType: 'uint160',\r\n                name: 'secondsPerLiquidityOutsideX128',\r\n                type: 'uint160',\r\n            },\r\n            { internalType: 'uint32', name: 'secondsOutside', type: 'uint32' },\r\n            { internalType: 'bool', name: 'initialized', type: 'bool' },\r\n        ],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'token0',\r\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: 'token1',\r\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n];\r\n","export const erc20Abi = [\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"name\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"string\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            {\r\n                name: \"_spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                name: \"_value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"approve\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"totalSupply\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            {\r\n                name: \"_from\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                name: \"_to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                name: \"_value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"transferFrom\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"decimals\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"uint8\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [\r\n            {\r\n                name: \"_owner\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"balanceOf\",\r\n        outputs: [\r\n            {\r\n                name: \"balance\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"symbol\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"string\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            {\r\n                name: \"_to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                name: \"_value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"transfer\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"bool\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [\r\n            {\r\n                name: \"_owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                name: \"_spender\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"allowance\",\r\n        outputs: [\r\n            {\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        payable: true,\r\n        stateMutability: \"payable\",\r\n        type: \"fallback\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                name: \"owner\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                name: \"spender\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Approval\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                name: \"from\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: true,\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                name: \"value\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Transfer\",\r\n        type: \"event\",\r\n    },\r\n];","export enum Network {\r\n    Arthera = 10242,\r\n    Astar = 592,\r\n    Ethereum = 1,\r\n    Base = 8453,\r\n    BTTC = 199,\r\n    Blast = 81457,\r\n    Bitgert = 32520,\r\n    BOB = 60808,\r\n    BSC = 56,\r\n    Boba = 288,\r\n    BobaAvax = 43288,\r\n    BobaBnb = 56288,\r\n    BobaNetwork = 288,\r\n    BitTorrent = 199,\r\n    Canto = 7700,\r\n    Celo = 42220,\r\n    Core = 1116,\r\n    Cronos = 25,\r\n    Degen = 666666666,\r\n    Dogechain = 2000,\r\n    DoKenSuperChain = 61916,\r\n    Elastos = 20,\r\n    NeonEvm = 245022934,\r\n    RARI = 1380012617,\r\n    Rarimo = 7368,\r\n    Redbelly = 151,\r\n    Kroma = 255,\r\n    Katana = 747474,\r\n    Shibarium = 109,\r\n    Iota = 8822,\r\n    ShibariumBeta = 719,\r\n    Lightlink = 1890,\r\n    Unichain = 130,\r\n    Scroll = 534352,\r\n    Velas = 106,\r\n    Polygon = 137,\r\n    Story = 1514,\r\n    Iotex = 4689,\r\n    HuobiECO = 128,\r\n    ScaleEuropa = 2046399126,\r\n    PolygonZkEvm = 1101,\r\n    Arbitrum = 42161,\r\n    ArbitrumNova = 42170,\r\n    Mode = 34443,\r\n    XDai = 100,\r\n    Telos = 40,\r\n    ShimmerEvm = 148,\r\n    Manta = 169,\r\n    Mantle = 5000,\r\n    ZetaChain = 7000,\r\n    Thundercore = 108,\r\n    Optimism = 10,\r\n    Avalanche = 43114,\r\n    Fantom = 250,\r\n    Filecoin = 314,\r\n    Fuji = 43113,\r\n    Fuse = 122,\r\n    Haqq = 11235,\r\n    Heco = 128,\r\n    Hemi = 43111,\r\n    Kava = 2222,\r\n    Metis = 1088,\r\n    Gnosis = 100,\r\n    Palm = 11297108109,\r\n    Harmony = 162,\r\n    Klaytn = 8217,\r\n    KCC = 321,\r\n    Kaia = 8217,\r\n    Sonic = 146,\r\n    Tatara = 129399,\r\n    Moonbeam = 1284,\r\n    Moonriver = 1285,\r\n    Moonbase = 1287,\r\n    MoonbeamAlpha = 1288,\r\n    Okex = 66,\r\n    OKXChain = 66,\r\n    Zora = 7777777,\r\n    WorldChain = 480,\r\n    ZkEVM = 1101,\r\n    RootStock = 30,\r\n    ZkSync = 324,\r\n    Linea = 59144,\r\n    QBlockchain = 35441,\r\n    opBNB = 204,\r\n    Quitmer = 813,\r\n    Wanchain = 888,\r\n    XDCNetwork = 50,\r\n    XLayer = 196,\r\n    XODEX = 2415,\r\n}\r\n\r\nexport interface INetworkConfig {\r\n    id: Network | number,\r\n    rpcUrl: string,\r\n    wssUrl?: string,\r\n    explorerUrl?: string,\r\n    explorerApiKey?: string,\r\n}","import { Network } from \"../../../types/network\";\r\n\r\nexport const aerodromeV2Addresses = new Map<Network, {router: string, clfactory: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0xcF77a3Ba9A5CA399B7c97c74d54e5b1Beb874E43',\r\n        factory: '0x420DD381b31aEf6683db6B902084cB0FFECe40Da',\r\n        clfactory: '0x5e7BB104d84c7CB9B682AaC2F3d509f5F406809A',\r\n    }],\r\n]);\r\n\r\n","import type { INetworkConfig } from \"../../types/network\";\r\n\r\nexport interface IDexContract {\r\n    address: string,\r\n    abi: Record<string, any>[],\r\n}\r\n\r\nexport const DexType = {\r\n    UniswapV2: \"UniswapV2\",\r\n    UniswapV3: \"UniswapV3\",\r\n    UniswapV4: \"UniswapV4\",\r\n    AerodromeV2: \"AerodromeV2\",\r\n    IXSwap: \"IXSwap\",\r\n} as const;\r\nexport type DexType = typeof DexType[keyof typeof DexType]; \r\n\r\n\r\nexport const DexInterfaceName = {\r\n    // Uniswap V2 forks\r\n    AlienBaseV2: \"AlienBaseV2\",\r\n    AlienBaseArea51V2: \"AlienBaseArea51V2\",\r\n    BaseSwapV2: \"BaseSwapV2\",\r\n    DeltaSwapV2: \"DeltaSwapV2\",\r\n    DackieSwapV2: \"DackieSwapV2\",\r\n    RingSwapV2: \"RingSwapV2\",\r\n    RocketSwapV2: \"RocketSwapV2\",\r\n    RaiFinanceV2: \"RaiFinanceV2\",\r\n    UniswapV2: \"UniswapV2\",\r\n    PancakeSwapV2: \"PancakeSwapV2\",\r\n    SushiSwapV2: \"SushiSwapV2\",\r\n    SharkSwapV2: \"SharkSwapV2\",\r\n    SwapBasedAmmV2: \"SwapBasedAmmV2\",\r\n    LeetSwapV2: \"LeetSwapV2\",\r\n    IcecreamSwapV2: \"IcecreamSwapV2\",\r\n    ElkV2: \"ElkV2\",\r\n\r\n    // Uniswap V3 forks\r\n    UniswapV3: \"UniswapV3\",\r\n    PancakeSwapV3: \"PancakeSwapV3\",\r\n    SushiSwapV3: \"SushiSwapV3\",\r\n    DerpDexV3: \"DerpDexV3\",\r\n    ThroneV3: \"ThroneV3\",\r\n    HorizonDexV3: \"HorizonDexV3\",\r\n    SwapBasedAmmV3: \"SwapBasedAmmV3\",\r\n    BaseSwapV3: \"BaseSwapV3\",\r\n    KinetixV3: \"KinetixV3\",\r\n    DackieSwapV3: \"DackieSwapV3\",\r\n    WagmiV3: \"WagmiV3\",\r\n    AlienBaseV3: \"AlienBaseV3\",\r\n\r\n    // Uniswap Forks with changes\r\n    AerodromeV2: \"AerodromeV2\",\r\n    IXSwap: \"IXSwap\",\r\n} as const;\r\nexport type DexInterfaceName = typeof DexInterfaceName[keyof typeof DexInterfaceName];\r\n\r\n\r\nexport interface IDexParams {\r\n    network: INetworkConfig,\r\n    type: DexType,\r\n    name: DexInterfaceName,\r\n    factory: IDexContract,\r\n    router: IDexContract,\r\n}","import {\r\n    AbiCoder,\r\n    Contract,\r\n    JsonRpcProvider,\r\n} from \"ethers\";\r\nimport {\r\n    DexInterfaceName,\r\n    type DexType,\r\n    type IDexParams\r\n} from \"./types/IDexParams\";\r\nimport type { TPathSegment } from \"./types/path\";\r\nimport type { INetworkConfig } from \"../types/network\";\r\n\r\nexport abstract class DexBase {\r\n    protected readonly _provider: JsonRpcProvider;\r\n    protected readonly _network: INetworkConfig;\r\n    protected readonly _routerContract: Contract;\r\n    protected readonly _factoryContract: Contract;\r\n    protected readonly _coder = AbiCoder.defaultAbiCoder();\r\n\r\n    public readonly dexParams: {\r\n        type: DexType,\r\n        name: DexInterfaceName,\r\n    };\r\n\r\n    constructor(params: IDexParams) {\r\n        this._network = params.network;\r\n\r\n        this.dexParams = {\r\n            type: params.type,\r\n            name: params.name,\r\n        };\r\n        \r\n        this._provider = new JsonRpcProvider(\r\n            params.network.rpcUrl,\r\n            {\r\n                chainId: params.network.id,\r\n                name: \"custom\",\r\n            },\r\n            {\r\n                staticNetwork: true,\r\n            }\r\n        );\r\n        \r\n        this._factoryContract = new Contract(params.factory.address, params.factory.abi, this._provider) as any;\r\n        this._routerContract = new Contract(params.router.address, params.router.abi, this._provider) as any;\r\n    }\r\n\r\n    public get routerAddress(): string {\r\n        return this._routerContract.target as string;\r\n    }\r\n\r\n    public get factoryAddress(): string {\r\n        return this._factoryContract.target as string;\r\n    }\r\n\r\n    public abstract getFactoryAddress(): Promise<string>;\r\n    public abstract getPoolAddress(path: TPathSegment[]): Promise<any>;\r\n    public abstract getPoolAddresses(path: TPathSegment[]): Promise<any>;\r\n    public abstract getPoolCount(): Promise<number | any>;\r\n    public abstract getPoolReserves(path: TPathSegment[]): Promise<any>;\r\n    public abstract getPoolAddressByIndex(index: number): Promise<string | any>;\r\n    public abstract getTokenPrice(path: TPathSegment[]): Promise<any>;\r\n    public abstract getEncodedSwap(\r\n        amountsIn: bigint,\r\n        path: TPathSegment[],\r\n        sendTo: string,\r\n        slippage: number,\r\n        ...params: any\r\n    ): {\r\n        data: string,\r\n        topHalf: string,\r\n        bottomHalf: string,\r\n    }\r\n\r\n    public abstract getPoolData(path: TPathSegment[]): Promise<{\r\n        poolAddress: string;\r\n        token0: string;\r\n        token1: string;\r\n        reserves0: bigint;\r\n        reserves1: bigint;\r\n    }[]>;\r\n\r\n    public abstract getSwapEventSignature(): {\r\n        event: string,\r\n        id: string\r\n    };\r\n\r\n    public abstract getDecodedSwapData(token0: string, token1: string, data: string): {\r\n        tokenFrom: string,\r\n        tokenTo: string,\r\n        amountsIn: bigint,\r\n        amountsOut: bigint,\r\n    }\r\n\r\n    public abstract getReversedPath(path: TPathSegment[]): TPathSegment[];\r\n\r\n    public abstract splitPath(path: TPathSegment[]): TPathSegment[][];\r\n    public abstract simulateSwap(\r\n        from: string,\r\n        amountsIn: bigint,\r\n        path: TPathSegment[],\r\n        sendTo: string\r\n    ): Promise<any>;\r\n}","import type { IAddressable } from \"../types/IAddressable\";\r\n\r\nexport function isObjectAddressable(object: any): object is IAddressable {\r\n    return typeof object === 'object' && object !== null && 'address' in object && typeof object.address === 'string';\r\n}","import { Contract, Wallet, JsonRpcSigner, type ContractRunner, TransactionResponse, JsonRpcProvider, NonceManager } from \"ethers\";\r\nimport { erc20Abi } from \"../abi/erc20-abi\";\r\nimport { isObjectAddressable } from \"../../utils/is-object-addressable\";\r\nimport type { INetworkConfig } from \"../../types/network\";\r\nimport type { IAddressable } from \"../../types/IAddressable\";\r\nimport type { TAddress } from \"../../types/hex\";\r\nimport type { IERC20Settings } from \"../types\";\r\n\r\nexport class ERC20 implements IAddressable {\r\n    private readonly _network: INetworkConfig;\r\n    private readonly _abi: any;\r\n    protected readonly _contract: Contract;\r\n    private readonly _runner: ContractRunner | null | undefined;\r\n    private readonly _runnerWithNonceManager: NonceManager | null | undefined;\r\n\r\n    constructor({\r\n        address,\r\n        network,\r\n        abi = erc20Abi,\r\n        privateKey,\r\n    }: IERC20Settings) {\r\n        this._abi = abi;\r\n        this._network = network;\r\n        const provider = new JsonRpcProvider(\r\n            network.rpcUrl,\r\n            { chainId: network.id, name: \"custom\" },\r\n            { staticNetwork: true }\r\n        );\r\n\r\n        if (privateKey !== undefined && privateKey !== null && privateKey.length > 0) {\r\n            this._runner = new Wallet(privateKey, provider);\r\n            this._runnerWithNonceManager = new NonceManager(this._runner as Wallet);\r\n            this._contract = new Contract(address, abi, this._runnerWithNonceManager);\r\n            return;\r\n        }\r\n\r\n        this._runner = provider;\r\n        this._contract = new Contract(address, abi, provider);\r\n    }\r\n\r\n    public get interface() {\r\n        return this._contract.interface;\r\n    }\r\n\r\n    public get address(): TAddress {\r\n        return this._contract.target as TAddress;\r\n    }\r\n\r\n    public get abi() {\r\n        return this._abi;\r\n    }\r\n\r\n    public get network(): INetworkConfig {\r\n        const { wssUrl, rpcUrl } = this._network;\r\n        if(wssUrl !== undefined) {\r\n            return this._network;\r\n        }\r\n\r\n        // replace: http:// → ws://\r\n        // replace: https:// → wss://\r\n        const wss = rpcUrl\r\n            .replace(/^http:\\/\\//i, \"ws://\")\r\n            .replace(/^https:\\/\\//i, \"wss://\");\r\n\r\n        // return new object\r\n        return {\r\n            ...this._network,\r\n            wssUrl: wss,\r\n        };\r\n    }\r\n\r\n    public getEncodedApprove(spender: TAddress, amount: bigint): string {\r\n        return this._contract.interface.encodeFunctionData(\"approve\", [spender, amount]);\r\n    }\r\n\r\n    public getEncodedTransfer(to: string, amount: bigint): string {\r\n        return this._contract.interface.encodeFunctionData(\"transfer\", [to, amount]);\r\n    }\r\n\r\n    public getEncodedTransferFrom(from: string, to: string, amount: bigint): string {\r\n        return this._contract.interface.encodeFunctionData(\"transferFrom\", [from, to, amount]);\r\n    }\r\n\r\n\r\n    /*******************************************************************************/\r\n    /*                         EIP20 standard GET functions                        */\r\n    /*******************************************************************************/\r\n\r\n    public async getBalance(address: string): Promise<bigint> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.balanceOf(address);\r\n    }\r\n\r\n    public async getDecimals(): Promise<bigint> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.decimals();\r\n    }\r\n\r\n    public async getSymbol(): Promise<string> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.symbol();\r\n    }\r\n\r\n    public async getName(): Promise<string> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.name();\r\n    }\r\n\r\n    public async getTotalSupply(): Promise<bigint> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.totalSupply();\r\n    }\r\n\r\n    public async getAllowance(owner: TAddress, spender: TAddress): Promise<bigint> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.allowance(owner, spender);\r\n    }\r\n\r\n\r\n\r\n    /*******************************************************************************/\r\n    /*                        EIP20 standard POST functions                        */\r\n    /*******************************************************************************/\r\n    \r\n    public async transfer(to: TAddress, amount: bigint): Promise<TransactionResponse> {\r\n        if(this._runnerWithNonceManager === undefined) {\r\n            throw new Error('Wallet has not been provided');\r\n        }\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.transfer(to, amount);\r\n    }\r\n\r\n    public async transferFrom(from: TAddress, to: TAddress, amount: bigint): Promise<TransactionResponse> {\r\n        if(this._runnerWithNonceManager === undefined) {\r\n            throw new Error('Wallet has not been provided');\r\n        }\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.transferFrom(from, to, amount);\r\n    }\r\n\r\n    public async approve(spender: TAddress, amount: bigint): Promise<TransactionResponse> {\r\n        if(this._runnerWithNonceManager === undefined) {\r\n            throw new Error('Wallet has not been provided');\r\n        }\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.approve(spender, amount);\r\n    }\r\n\r\n\r\n    /*******************************************************************************/\r\n    /*                             Extension functions                             */\r\n    /*******************************************************************************/\r\n\r\n    public async addAllowance(spender: TAddress, amount: bigint): Promise<TransactionResponse> {\r\n        const runnerAddress = this._getRunnerAddress();\r\n        if(!runnerAddress) {\r\n            throw new Error(\"No runner provided\");\r\n        }\r\n\r\n        const oldAllowance = await this.getAllowance(runnerAddress, spender);\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.approve(spender, oldAllowance + amount);\r\n    }\r\n\r\n    public async subAllowance(spender: string, amount: bigint): Promise<boolean> {\r\n        const runnerAddress = this._getRunnerAddress();\r\n        if(!runnerAddress) {\r\n            throw new Error(\"No runner provided\");\r\n        }\r\n\r\n        const oldAllowance = await this.getAllowance(runnerAddress, spender);\r\n\r\n        if(oldAllowance === 0n) {\r\n            return true;\r\n        }\r\n\r\n        const newAllowance = oldAllowance > amount ? oldAllowance - amount : 0n;\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.approve(spender, newAllowance);\r\n    }\r\n\r\n    public async revokeApprove(spender: string): Promise<boolean> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._contract.approve(spender, 0);\r\n    }\r\n\r\n    protected _getRunnerAddress(): string {\r\n        if(!this._runner || !this._runnerWithNonceManager) {\r\n            throw new Error(\"No runner provided\");\r\n        }\r\n\r\n        if (\r\n            this._runner instanceof Wallet ||\r\n            this._runner instanceof JsonRpcSigner || \r\n            isObjectAddressable(this._runner)\r\n        ) {\r\n            return this._runner.address;\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n}\r\n","export function reverseCopy<T>(arr: readonly T[]): T[] {\r\n    const result: T[] = [];\r\n    for (let i = arr.length - 1; i >= 0; i--) {\r\n        const v = arr[i];\r\n        if (v !== undefined) result.push(v);\r\n    }\r\n    return result;\r\n}","import { Contract, parseUnits, formatUnits, ZeroAddress, id } from \"ethers\";\r\nimport type { INetworkConfig } from \"../types/network\";\r\nimport { erc20Abi } from \"../erc20/abi/erc20-abi\";\r\nimport { aerodromeV2RouterAbi, aerodromeV2FactoryAbi, aerodromeV2CLFactoryAbi, aerodromeV2PoolAbi, aerodromeV2CLPoolAbi } from \"./abi/aerodrome\";\r\nimport { aerodromeV2Addresses } from \"./addresses/uniswap-v2-kind/aerodrome-v2\";\r\nimport { DexBase } from \"./DexBase\";\r\nimport { DexInterfaceName, DexType } from \"./types/IDexParams\";\r\nimport { ERC20 } from \"../erc20/tokens/ERC20\";\r\nimport { reverseCopy } from \"../utils/reverse-copy\";\r\n\r\n\r\n/**\r\n * Path-формат Solidly/Aerodrome style:\r\n *   [token0, token1, fee0, isStable0, factory0,\r\n *    token1, token2, fee1, isStable1, factory1,\r\n *    ...]\r\n *\r\n * На выходе – массив объектов\r\n *   { from, to, stable, factory }\r\n */\r\ntype RouteSeg = { from: string; to: string; stable: boolean; factory: string };\r\n\r\n\r\nexport class AerodromeV2 extends DexBase {\r\n    private _clfactoryContract: Contract;\r\n\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = aerodromeV2Addresses.get(network.id)!;\r\n        super({\r\n            network,\r\n            type: DexType.AerodromeV2,\r\n            name: overrides?.name ?? DexInterfaceName.AerodromeV2,\r\n            router: {\r\n                address: overrides?.routerAddress ?? addresses.router,\r\n                abi: aerodromeV2RouterAbi,\r\n            },\r\n            factory: {\r\n                address: overrides?.factoryAddress ?? addresses.factory,\r\n                abi: aerodromeV2FactoryAbi,\r\n            },\r\n        });\r\n\r\n        this._clfactoryContract = new Contract(addresses.clfactory, aerodromeV2CLFactoryAbi, this._provider);\r\n    }\r\n\r\n    public async getPoolData(path: string[]): Promise<{\r\n            poolAddress: string;\r\n            token0: string;\r\n            token1: string;\r\n            reserves0: bigint;\r\n            reserves1: bigint;\r\n        }[]> {\r\n            const splitedPaths = this.splitPath(path);\r\n    \r\n            if(splitedPaths.length === 0) {\r\n                throw new Error('No allowed paths provided');\r\n            }\r\n    \r\n            const poolData: {\r\n                poolAddress: string;\r\n                token0: string;\r\n                token1: string;\r\n                reserves0: bigint;\r\n                reserves1: bigint;\r\n            }[] = [];\r\n            for(const path of splitedPaths) {\r\n                const pair = await this.getPoolAddress(path);\r\n\r\n                if(pair === ZeroAddress) {\r\n                    continue;\r\n                }\r\n                \r\n                const pairContract = new Contract(pair, aerodromeV2PoolAbi, this._provider) as any;\r\n    \r\n                const [\r\n                    tokens,\r\n                    reserves,\r\n                ] = await Promise.all([\r\n                    pairContract.tokens(),\r\n                    pairContract.getReserves(),\r\n                ]);\r\n    \r\n                poolData.push({\r\n                    poolAddress: pair,\r\n                    token0: tokens[0],\r\n                    token1: tokens[1],\r\n                    reserves0: reserves[0],\r\n                    reserves1: reserves[1],\r\n                })\r\n            }\r\n    \r\n            return poolData;\r\n        }\r\n\r\n    // в параметр path вставляем два токена для находа пары\r\n    // цена будет возвращаться по первому токену из пары вставленному в path\r\n    public async getTokenPrice(path: (string | boolean)[]): Promise<number> {\r\n        const token = new Contract(path[0] as string, erc20Abi, this._provider) as any;\r\n        const tokenQuote = new Contract(path[path.length - 1] as string, erc20Abi, this._provider) as any;\r\n\r\n        const parsedPath = this._parsePath(path);\r\n\r\n        const [decimals, decimalsQuote]: [bigint, bigint] = await Promise.all([\r\n            token.decimals(),\r\n            tokenQuote.decimals()\r\n        ]);\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        const amountsOut: bigint = (await this._routerContract.getAmountsOut(parseUnits('1', decimals), parsedPath))[0];\r\n\r\n        return +formatUnits(amountsOut, decimalsQuote);\r\n    }\r\n\r\n    public async getFactoryAddress(): Promise<string> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._routerContract.defaultFactory();\r\n    }\r\n\r\n    public async getPoolCount(): Promise<{\r\n        clFactoryPoolCount: number,\r\n        factoryPoolCount: number,\r\n    }> {\r\n        const [clCount, factoryCount] = await Promise.all([\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            this._clfactoryContract.allPoolsLength(),\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            this._factoryContract.allPoolsLength(),\r\n        ]);\r\n\r\n        return {\r\n            clFactoryPoolCount: clCount,\r\n            factoryPoolCount: factoryCount,\r\n        };\r\n    }\r\n\r\n    public async getPoolAddressByIndex(index: number): Promise<{\r\n        clFactoryPool: string,\r\n        clPool: string,\r\n    }> {\r\n        const {\r\n            clFactoryPoolCount,\r\n            factoryPoolCount,\r\n        } = await this.getPoolCount();\r\n\r\n        const clFactoryPoolCountMinusOne = Number(clFactoryPoolCount) - 1;\r\n        const factoryPoolCountMinusOne = Number(factoryPoolCount) - 1;\r\n\r\n        if (index > clFactoryPoolCountMinusOne && index > factoryPoolCountMinusOne) {\r\n            return {\r\n                clFactoryPool: ZeroAddress,\r\n                clPool: ZeroAddress,\r\n            };\r\n        }\r\n\r\n        if (index >= clFactoryPoolCountMinusOne && index <= factoryPoolCountMinusOne) {\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            const clFactoryPool = await this._factoryContract.allPools(index);\r\n\r\n            return {\r\n                clFactoryPool: ZeroAddress,\r\n                clPool: clFactoryPool,\r\n            };\r\n        } else if (index >= factoryPoolCountMinusOne && index <= clFactoryPoolCountMinusOne) {\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            const clFactoryPool = await this._factoryContract.allPools(index);\r\n\r\n            return {\r\n                clFactoryPool: clFactoryPool,\r\n                clPool: ZeroAddress,\r\n            };\r\n        }\r\n\r\n        const [clFactoryPool, clPool] = await Promise.all([\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            this._clfactoryContract.allPools(index),\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            this._factoryContract.allPools(index),\r\n        ]);\r\n\r\n        return {\r\n            clFactoryPool,\r\n            clPool,\r\n        };\r\n    }\r\n\r\n    public async getPoolAddress(path: (string | boolean | number | bigint)[]): Promise<string> {\r\n        const isFeePool = typeof path[1] !== 'boolean';\r\n\r\n        if (isFeePool) {\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            return await this._clfactoryContract.getPool(\r\n                path[0],\r\n                path[path.length - 1],\r\n                path[1] as (number | bigint),\r\n            );\r\n        }\r\n\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._factoryContract[\"getPool(address,address,bool)\"](\r\n            path[0],\r\n            path[path.length - 1],\r\n            path[1] as boolean,\r\n        );\r\n    }\r\n\r\n    public async getPoolAddresses(path: (string | boolean | number | bigint)[]): Promise<string[]> {\r\n        const poolPairs = this.splitPath(path);\r\n        const pairsArray: string[] = []\r\n\r\n        for (const poolPair of poolPairs) {\r\n            pairsArray.push(await this.getPoolAddress(poolPair));\r\n        }\r\n\r\n        return pairsArray;\r\n    }\r\n\r\n    public getDecodedSwapData(token0: string, token1: string, data: string): { tokenFrom: string; tokenTo: string; amountsIn: bigint; amountsOut: bigint; } {\r\n        const t0 = token0.toLowerCase();\r\n        const t1 = token1.toLowerCase();\r\n\r\n        const [amount0In, amount1In, amount0Out, amount1Out] = this._coder.decode(\r\n            [\"uint256\", \"uint256\", \"uint256\", \"uint256\"],\r\n            data\r\n        ) as unknown as [bigint, bigint, bigint, bigint];\r\n\r\n        // Логика идентична UniswapV2:\r\n        // один из In > 0 и противоположный Out > 0\r\n        if (amount0In > 0n) {\r\n            // трейдер внёс token0, получил token1\r\n            return {\r\n                tokenFrom: t0,\r\n                tokenTo: t1,\r\n                amountsIn: amount0In,\r\n                amountsOut: amount1Out\r\n            };\r\n        }\r\n        if (amount1In > 0n) {\r\n            // трейдер внёс token1, получил token0\r\n            return {\r\n                tokenFrom: t1,\r\n                tokenTo: t0,\r\n                amountsIn: amount1In,\r\n                amountsOut: amount0Out\r\n            };\r\n        }\r\n\r\n        throw new Error(\"Aerodrome swap decode: both amount0In and amount1In are zero\");\r\n    }\r\n\r\n    public async getPoolReserves(path: (string | boolean | number | bigint)[]): Promise<{\r\n        reserve0: number,\r\n        reserve1: number,\r\n        blockTimestampLast?: number,\r\n        sqrtPriceX96?: string,\r\n        liquidity?: string,\r\n    }> {\r\n        const isFeePool = typeof path[1] !== 'boolean';\r\n        const token0 = new ERC20({\r\n            address: path[0] as string,\r\n            network: this._network,\r\n        });\r\n        const token1 = new ERC20({\r\n            address: path[path.length - 1] as string,\r\n            network: this._network,\r\n        });\r\n        const pair = await this.getPoolAddress(path);\r\n\r\n        if (pair === ZeroAddress) {\r\n            return {\r\n                reserve0: 0,\r\n                reserve1: 0,\r\n                blockTimestampLast: 0,\r\n            };\r\n        }\r\n\r\n        if (!isFeePool) {\r\n            const pairContract = new Contract(pair, aerodromeV2PoolAbi, this._provider);\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            const [reserve0, reserve1, blockTimestampLast] = await pairContract.getReserves();\r\n            const [decimals0, decimals1] = await Promise.all([\r\n                token0.getDecimals(),\r\n                token1.getDecimals(),\r\n            ]);\r\n\r\n            return {\r\n                reserve0: Number(reserve0) / 10 ** Number(decimals0),\r\n                reserve1: Number(reserve1) / 10 ** Number(decimals1),\r\n                blockTimestampLast: Number(blockTimestampLast),\r\n            };\r\n        }\r\n\r\n        const poolContract = new Contract(pair, aerodromeV2CLPoolAbi, this._provider);\r\n        const [sqrtPriceX96Struct, liquidity] = await Promise.all([\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            poolContract.slot0(),\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            poolContract.liquidity(),\r\n        ]);\r\n\r\n        const sqrtPriceX96 = sqrtPriceX96Struct.sqrtPriceX96 ?? sqrtPriceX96Struct[0]; // совместимость\r\n\r\n        const [dec0, dec1] = await Promise.all([\r\n            token0.getDecimals(),\r\n            token1.getDecimals(),\r\n        ]);\r\n\r\n        // вычисляем виртуальные резервы\r\n        const Q96 = BigInt(2) ** BigInt(96);\r\n        const sqrtX = BigInt(sqrtPriceX96);\r\n        const L = BigInt(liquidity.toString());\r\n\r\n        const reserve0 = Number(L * Q96 / sqrtX) / 10 ** Number(dec0);\r\n        const reserve1 = Number(L * sqrtX / Q96) / 10 ** Number(dec1);\r\n\r\n        return {\r\n            reserve0,\r\n            reserve1,\r\n            sqrtPriceX96: sqrtX.toString(),\r\n            liquidity: L.toString(),\r\n        };\r\n    }\r\n\r\n    public async simulateSwap(\r\n        from: string,\r\n        amountsIn: bigint,\r\n        path: (string | boolean)[],\r\n        sendTo?: string,\r\n        overrides?: {\r\n            gasLimit?: number,\r\n            maxFeePerGas?: number,\r\n            maxPriorityFeePerGas?: number,\r\n        }\r\n    ) {\r\n        const deadline = Math.floor(Date.now() / 1000) + 10000;\r\n\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        const data = await this._routerContract.swapExactTokensForTokens.staticCallResult(\r\n            amountsIn,\r\n            0,\r\n            this._parsePath(path),\r\n            sendTo ?? from,\r\n            deadline,\r\n            {\r\n                ...overrides,\r\n                from,\r\n            }\r\n        );\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    public getEncodedSwap(\r\n        amountsIn: bigint,\r\n        path: (string | boolean)[],\r\n        sendTo: string,\r\n        slippage?: number,\r\n    ): {\r\n        data: string,\r\n        topHalf: string,\r\n        bottomHalf: string,\r\n    } {\r\n        const deadline = Math.floor(Date.now() / 1000) + 10000;\r\n        const amountOutMin = slippage ? amountsIn * BigInt(10000 - slippage) / BigInt(10000) : 0;\r\n\r\n        const data = this._routerContract.interface.encodeFunctionData(\r\n            'swapExactTokensForTokens',\r\n            [\r\n                amountsIn,\r\n                amountOutMin,\r\n                this._parsePath(path),\r\n                sendTo,\r\n                deadline,\r\n            ]\r\n        );\r\n\r\n        return {\r\n            data,\r\n            topHalf: data.slice(0, 10),\r\n            bottomHalf: '0x' + data.slice(74),\r\n        }\r\n    }\r\n\r\n\r\n    public getReversedPath(path: (string | boolean)[]): (string | boolean)[] {\r\n        return reverseCopy(path);\r\n    }\r\n\r\n    public splitPath(path: (string | boolean | number | bigint)[]): (string | number | bigint | boolean)[][] {\r\n        if (path.length === 1) {\r\n            return [];\r\n        }\r\n        if (path.length === 3) {\r\n            return [path];\r\n        }\r\n\r\n        const pools: (string | bigint | number | boolean)[][] = [];\r\n\r\n        for (let i = 0; i < path.length - 2; i += 2) {\r\n            pools.push(path.slice(i, i + 3));\r\n        }\r\n\r\n        return pools;\r\n    }\r\n\r\n\r\n    // HELPERS\r\n    private _parsePath(path: (string | boolean)[]): RouteSeg[] {\r\n        if (path.length < 3 || (path.length - 1) % 2 !== 0) {\r\n            throw new Error(\"Invalid path: must be token,token,stable,factory repeating\");\r\n        }\r\n\r\n        const routes: RouteSeg[] = [];\r\n\r\n        // первый токен - это path[0]; дальше группы длиной 4 с перекрытием\r\n        for (let i = 0; i < path.length - 2; i += 2) {\r\n            routes.push({\r\n                from: path[i] as string,\r\n                to: path[i + 2] as string,\r\n                stable: Boolean(path[i + 1]),\r\n                factory: this._factoryContract.target as string,\r\n            });\r\n        }\r\n\r\n        return routes;\r\n    }\r\n\r\n    public getSwapEventSignature(): {\r\n        event: string,\r\n        id: string,\r\n    } {\r\n        const rawEvent = 'Swap(address indexed,address indexed,uint256,uint256,uint256,uint256)';\r\n        return {\r\n            event: rawEvent,\r\n            id: id(rawEvent),\r\n        };\r\n    }\r\n}\r\n\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://github.com/IXS-Finance/interface/blob/main/src/constants/chains.ts\r\nexport const ixswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0x38e1B66bdfd6DF1e79567D9E4D34Febf99823Ed3',\r\n        factory: '0x2eE28d1Bbc2EcB1fFDB83E8055d585E9F0fb757f',\r\n    }],\r\n    [Network.Polygon, {\r\n        router: '0x72f54BEbabE8A26794B8BFeA832b65B7Bd88da37',\r\n        factory: '0xc2D0e0bc81494adB71Ce9Aa350cC875DaE12D81D',\r\n    }],\r\n    [Network.Redbelly, {\r\n        router: '0x0338acFA4F8c6Ae7EC7f8A218Bc436a6A261c874',\r\n        factory: '0x80747745DcDdDb5a8Eb3fb2fBfAb21fE7990aF15',\r\n    }],\r\n    // TODO: check it for the future\r\n    // [Network.Avalanche, {\r\n    //     router: '',\r\n    //     factory: '',\r\n    // }],\r\n    // [Network.Kaia, {\r\n    //     router: '',\r\n    //     factory: '',\r\n    // }],\r\n]);","/**\r\n * Разбирает строку с закодированными данными вызова контракта.\r\n *\r\n * Эта функция принимает шестнадцатеричную строку, начинающуюся с '0x',\r\n * и разделяет ее на селектор функции и чанки данных.\r\n *\r\n * @example\r\n * const data = '0x7ff36ab50000000000000000000000000000000000000000000000000000000000000001';\r\n * const result = splitEncodedData(data);\r\n * // result.functionSelector будет '0x7ff36ab5'\r\n * // result.chunks будет ['0x0000000000000000000000000000000000000000000000000000000000000001']\r\n *\r\n * // Перед разбором функция выполняет валидацию:\r\n * // 1. Проверяет, что строка начинается с префикса '0x'.\r\n * // 2. Убеждается, что все символы после префикса являются валидными\r\n * //    шестнадцатеричными символами (0-9, a-f, A-F).\r\n * // 3. Проверяет, что длина данных после селектора функции (первые 10 символов)\r\n * //    кратна 64, что соответствует стандартной длине параметров в EVM.\r\n *\r\n * @description В случае ошибки валидации, функция выбрасывает исключение с подробным\r\n * сообщением, указывающим на некорректные символы или неверную длину.\r\n *\r\n * @param data - Входная шестнадцатеричная строка, представляющая закодированные данные.\r\n * @returns Объект, содержащий:\r\n *          - `original`: исходная строка данных.\r\n *          - `functionSelector`: первые 10 символов данных (включая '0x'),\r\n *            которые представляют селектор функции.\r\n *          - `chunks`: массив строк, представляющий остальные данные,\r\n *            разделенные на чанки по 64 символа.\r\n * @throws {Error} Если данные не начинаются с '0x', содержат\r\n *                 недопустимые шестнадцатеричные символы, или имеют\r\n *                 некорректную длину.\r\n */\r\nexport function splitEncodedData(data: string): {\r\n    original: string,\r\n    functionSelector: string,\r\n    chunks: string[],\r\n} {\r\n    if (!data.startsWith('0x')) {\r\n        throw new Error(\"Invalid data format: string must start with '0x'.\");\r\n    }\r\n    if (data.length < 3) {\r\n        throw new Error(\"Data is too small\");\r\n    }\r\n\r\n    const hexPart = data.slice(2);\r\n    const invalidCharIndices: number[] = [];\r\n    \r\n    for (let i = 0; i < hexPart.length; i++) {\r\n        const char: string = hexPart[i]!;\r\n        if (!/^[0-9a-fA-F]$/.test(char)) {\r\n            invalidCharIndices.push(i + 2); // +2 для учета префикса '0x'\r\n        }\r\n    }\r\n\r\n    if (invalidCharIndices.length > 0) {\r\n        let pointerLine = '';\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (invalidCharIndices.includes(i)) {\r\n                pointerLine += '^';\r\n            } else {\r\n                pointerLine += ' ';\r\n            }\r\n        }\r\n        const errorMessage = `Invalid hexadecimal characters found:\\n${data}\\n${pointerLine}`;\r\n        throw new Error(errorMessage);\r\n    }\r\n    \r\n    const functionSelector = data.slice(0, 10);\r\n    const dataWithoutFunctionSelector = data.slice(10);\r\n    const chunkSize = 64;\r\n\r\n    if (dataWithoutFunctionSelector.length % chunkSize !== 0) {\r\n        throw new Error(`Invalid data length: the data part after the function selector must be a multiple of ${chunkSize}.`);\r\n    }\r\n\r\n    const chunks: string[] = [];\r\n    \r\n    for (let i = 0; i < dataWithoutFunctionSelector.length; i += chunkSize) {\r\n        chunks.push('0x' + dataWithoutFunctionSelector.slice(i, i + chunkSize));\r\n    }\r\n    \r\n    return {\r\n        original: data,\r\n        functionSelector,\r\n        chunks,\r\n    };\r\n}","import { splitEncodedData } from \"./split-encoded-data\";\r\n\r\n\r\n/**\r\n * Разделяет закодированные данные на две части, вырезая чанки по индексу или диапазону.\r\n *\r\n * Эта функция сначала разбирает строку данных, а затем \"вырезает\"\r\n * один или несколько чанков. Все, что было до вырезанной части\r\n * (включая селектор функции), попадает в `topHalf`. Все, что было после,\r\n * попадает в `bottomHalf`.\r\n *\r\n * @param data - Входная шестнадцатеричная строка.\r\n * @param start - Начальный индекс для вырезания. По умолчанию 0.\r\n * @param end - Конечный индекс для вырезания. Если end < start, вырезается только\r\n *              один элемент по индексу start. По умолчанию 0.\r\n * @returns Объект с полями `topHalf` и `bottomHalf`.\r\n */\r\nexport function cutEncodedDataParams(data: string, start: number = 0, end: number = 0): {\r\n    topHalf: string,\r\n    bottomHalf: string,\r\n} {\r\n    const { functionSelector, chunks } = splitEncodedData(data);\r\n\r\n    if (chunks.length === 0) {\r\n        // Если чанков нет, то и вырезать нечего.\r\n        // topHalf будет содержать только селектор функции.\r\n        return {\r\n            topHalf: functionSelector,\r\n            bottomHalf: '0x',\r\n        }\r\n    }\r\n\r\n    // \"Прижимаем\" индексы к границам массива\r\n    const startIndex = Math.max(0, Math.min(start, chunks.length - 1));\r\n    const endIndex = (end < start) ? startIndex : Math.max(0, Math.min(end, chunks.length - 1));\r\n\r\n    const leftChunks = chunks.slice(0, startIndex);\r\n    const rightChunks = chunks.slice(endIndex + 1);\r\n\r\n    const topHalf = functionSelector + leftChunks.map(chunk => chunk.slice(2)).join('');\r\n    const bottomHalf = '0x' + rightChunks.map(chunk => chunk.slice(2)).join('');\r\n\r\n    return {\r\n        topHalf,\r\n        bottomHalf,\r\n    };\r\n}","import { Network } from \"../../../types/network\";\r\n\r\nexport const uniswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Ethereum, {\r\n        router: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\r\n        factory: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\r\n        factory: '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6',\r\n    }],\r\n    [Network.Unichain, {\r\n        router: '0x284f11109359a7e1306c3e447ef14d38400063ff',\r\n        factory: '0x1f98400000000000000000000000000000000002',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\r\n        factory: '0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9',\r\n    }],\r\n    [Network.Avalanche, {\r\n        router: '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\r\n        factory: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\r\n    }],\r\n    [Network.BSC, {\r\n        router: '0x4752ba5DBc23f44D87826276BF6Fd6b1C372aD24',\r\n        factory: '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6',\r\n    }],\r\n    [Network.Optimism, {\r\n        router: '0x4A7b5Da61326A6379179b40d00F57E5bbDC962c2',\r\n        factory: '0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf',\r\n    }],\r\n    [Network.Polygon, {\r\n        router: '0xedf6066a2b290C185783862C7F4776A2C8077AD1',\r\n        factory: '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C',\r\n    }],\r\n    [Network.Blast, {\r\n        router: '0xBB66Eb1c5e875933D44DAe661dbD80e5D9B03035',\r\n        factory: '0x5C346464d33F90bABaf70dB6388507CC889C1070',\r\n    }],\r\n    [Network.Zora, {\r\n        router: '0xa00F34A632630EFd15223B1968358bA4845bEEC7',\r\n        factory: '0x0F797dC7efaEA995bB916f268D919d0a1950eE3C',\r\n    }],\r\n    [Network.WorldChain, {\r\n        router: '0x541aB7c31A119441eF3575F6973277DE0eF460bd',\r\n        factory: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\nexport const pancakeswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.BSC, {\r\n        router: '0x10ED43C718714eb63d5aA57B78B54704E256024E',\r\n        factory: '0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73',\r\n    }],\r\n    [Network.Ethereum, {\r\n        router: '0xEfF92A263d31888d860bD50809A8D171709b7b1c',\r\n        factory: '0x1097053Fd2ea711dad45caCcc45EfF7548fCB362',\r\n    }],\r\n    [Network.ZkEVM, {\r\n        router: '0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb',\r\n        factory: '0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E',\r\n    }],\r\n    [Network.ZkSync, {\r\n        router: '0x5aEaF2883FBf30f3D62471154eDa3C0c1b05942d',\r\n        factory: '0xd03D8D566183F0086d8D09A84E1e30b58Dd5619d',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb',\r\n        factory: '0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E',\r\n    }],\r\n    [Network.Linea, {\r\n        router: '0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb',\r\n        factory: '0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb',\r\n        factory: '0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E',\r\n    }],\r\n    [Network.opBNB, {\r\n        router: '0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb',\r\n        factory: '0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E',\r\n    }],\r\n]);","import { Network } from \"../../../types/network\";\r\n\r\nexport const sushiswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.ArbitrumNova, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Avalanche, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0x6BDED42c6DA8FBf0d2bA55B2fa120C5e0c8D7891',\r\n        factory: '0x71524B4f93c58fcbF659783284E38825f0622859',\r\n    }],\r\n    [Network.Blast, {\r\n        router: '0x54CF3d259a06601b5bC45F61A16443ed5404DD64',\r\n        factory: '0x42Fa929fc636e657AC568C0b5Cf38E203b67aC2b',\r\n    }],\r\n    [Network.BobaAvax, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.BobaBnb, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Boba, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.BSC, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Celo, {\r\n        router: '0x9B3336186a38E1b6c21955d112dbb0343Ee061eE',\r\n        factory: '0xB45e53277a7e0F1D35f2a77160e91e25507f1763',\r\n        // TODO: add celo router 0xB45e53277a7e0F1D35f2a77160e91e25507f1763\r\n    }],\r\n    [Network.Core, {\r\n        router: '0x9B3336186a38E1b6c21955d112dbb0343Ee061eE',\r\n        factory: '0xB45e53277a7e0F1D35f2a77160e91e25507f1763',\r\n    }],\r\n    [Network.Ethereum, {\r\n        router: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F',\r\n        factory: '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac',\r\n    }],\r\n    [Network.Fantom, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Filecoin, {\r\n        router: '0x46B3fDF7b5CDe91Ac049936bF0bDb12c5d22202e',\r\n        factory: '0x9B3336186a38E1b6c21955d112dbb0343Ee061eE',\r\n    }],\r\n    [Network.Fuji, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Fuse, {\r\n        router: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\r\n        factory: '0x43eA90e2b786728520e4f930d2A71a477BF2737C',\r\n    }],\r\n    [Network.Haqq, {\r\n        router: '0x9B3336186a38E1b6c21955d112dbb0343Ee061eE',\r\n        factory: '0xB45e53277a7e0F1D35f2a77160e91e25507f1763',\r\n    }],\r\n    [Network.Harmony, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Heco, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Hemi, {\r\n        router: '0x46B3fDF7b5CDe91Ac049936bF0bDb12c5d22202e',\r\n        factory: '0x9B3336186a38E1b6c21955d112dbb0343Ee061eE',\r\n    }],\r\n    [Network.Kava, {\r\n        router: '0x1719DEf1BF8422a777f2442bcE704AC4Fb20c7f0',\r\n        factory: '0xD408a20f1213286fB3158a2bfBf5bFfAca8bF269',\r\n    }],\r\n    [Network.Linea, {\r\n        router: '0x2ABf469074dc0b54d793850807E6eb5Faf2625b1',\r\n        factory: '0xFbc12984689e5f15626Bad03Ad60160Fe98B303C',\r\n    }],\r\n    [Network.Polygon, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Metis, {\r\n        router: '0xbF3B71decBCEFABB3210B9D8f18eC22e0556f5F0',\r\n        factory: '0x580ED43F3BBa06555785C81c2957efCCa71f7483',\r\n    }],\r\n    [Network.Moonbeam, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Moonriver, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Okex, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Optimism, {\r\n        router: '0x2ABf469074dc0b54d793850807E6eb5Faf2625b1',\r\n        factory: '0xFbc12984689e5f15626Bad03Ad60160Fe98B303C',\r\n    }],\r\n    [Network.Palm, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.PolygonZkEvm, {\r\n        router: '0x9B3336186a38E1b6c21955d112dbb0343Ee061eE',\r\n        factory: '0xB45e53277a7e0F1D35f2a77160e91e25507f1763',\r\n    }],\r\n    [Network.RootStock, {\r\n        router: '0x9B3336186a38E1b6c21955d112dbb0343Ee061eE',\r\n        factory: '0xB45e53277a7e0F1D35f2a77160e91e25507f1763',\r\n    }],\r\n    [Network.Scroll, {\r\n        router: '0x9B3336186a38E1b6c21955d112dbb0343Ee061eE',\r\n        factory: '0xB45e53277a7e0F1D35f2a77160e91e25507f1763',\r\n    }],\r\n    [Network.Telos, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.Thundercore, {\r\n        router: '0x9B3336186a38E1b6c21955d112dbb0343Ee061eE',\r\n        factory: '0xB45e53277a7e0F1D35f2a77160e91e25507f1763',\r\n    }],\r\n    [Network.XDai, {\r\n        router: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n    }],\r\n    [Network.ZetaChain, {\r\n        router: '0x1f2FCf1d036b375b384012e61D3AA33F8C256bbE',\r\n        factory: '0x33d91116e0370970444B0281AB117e161fEbFcdD',\r\n    }],\r\n\r\n    \r\n]);","import { Network } from \"../../../types/network\";\r\n\r\nexport const alienbaseV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0x8c1A3cF8f83074169FE5D7aD50B978e1cD6b37c7',\r\n        factory: '0x3e84d913803b02a4a7f027165e8ca42c14c0fde7',\r\n    }],\r\n]);\r\n\r\n\r\nexport const alienbaseArea51V2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0x3485F8E155973cC247CBEa9E77C0dBBB4BBb79E7',\r\n        factory: '0x2d5dd5fa7B8a1BFBDbB0916B42280208Ee6DE51e',\r\n    }],\r\n]);\r\n\r\n","import { Network } from \"../../../types/network\";\r\n\r\nexport const dackieswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0xCa4EAa32E7081b0c4Ba47e2bDF9B7163907Fe56f',\r\n        factory: '0x591f122D1df761E616c13d265006fcbf4c6d6551',\r\n    }],\r\n    [Network.Optimism, {\r\n        router: '0x88651e15a6f1ECFf6BbC6390c16F6572bC285e84',\r\n        factory: '0xaEdc38bD52b0380b2Af4980948925734fD54FbF4',\r\n    }],\r\n    [Network.Mode, {\r\n        router: '0x507940c2469e6E3B33032F1d4FF8d123BDDe2f5C',\r\n        factory: '0x757cD583004400ee67e5cC3c7A60C6a62E3F6d30',\r\n    }],\r\n]);","import { Network } from \"../../../types/network\";\r\n\r\nexport const raifinanceV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0xD55a4d54f39baF26da2F3EE7bE9a6388c15F9831',\r\n        factory: '0x539db2B4FE8016DB2594d7CfbeAb4d2B730b723E',\r\n    }],\r\n]);\r\n\r\n\r\n","import { Network } from \"../../../types/network\";\r\n\r\nexport const sharkswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0x0573B0ce977bBa12E31ad7A3CCC02d0dB004D57a',\r\n        factory: '0x57592D44eb60011500961EF177BFf8D8691D5a8B',\r\n    }],\r\n]);\r\n\r\n\r\n","import { Network } from \"../../../types/network\";\r\n\r\nexport const swapbasedammV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0xaaa3b1F1bd7BCc97fD1917c18ADE665C5D31F066',\r\n        factory: '0x04C9f118d21e8B767D2e50C946f0cC9F6C367300',\r\n    }],\r\n]);\r\n\r\n\r\n","import { Network } from \"../../../types/network\";\r\n\r\nexport const leetswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0xaaa3b1F1bd7BCc97fD1917c18ADE665C5D31F066',\r\n        factory: '0x04C9f118d21e8B767D2e50C946f0cC9F6C367300',\r\n    }],\r\n    [Network.opBNB, {\r\n        router: '0xd3Ea3BC1F5A3F881bD6cE9761cbA5A0833a5d737',\r\n        factory: '0xa2899c776bAAF9925d432F83C950D5054A6CF59C',\r\n    }],\r\n    [Network.Linea, {\r\n        router: '0xd3Ea3BC1F5A3F881bD6cE9761cbA5A0833a5d737',\r\n        factory: '0xa2899c776bAAF9925d432F83C950D5054A6CF59C',\r\n    }],\r\n    [Network.Scroll, {\r\n        router: '0xd3Ea3BC1F5A3F881bD6cE9761cbA5A0833a5d737',\r\n        factory: '0xa2899c776bAAF9925d432F83C950D5054A6CF59C',\r\n    }],\r\n    [Network.Manta, {\r\n        router: '0xd3Ea3BC1F5A3F881bD6cE9761cbA5A0833a5d737',\r\n        factory: '0xa2899c776bAAF9925d432F83C950D5054A6CF59C',\r\n    }],\r\n    [Network.Shibarium, {\r\n        router: '0x3613F73F2eaf7B359571F4c346E5c6D526E70eC1',\r\n        factory: '0xd3Ea3BC1F5A3F881bD6cE9761cbA5A0833a5d737',\r\n    }],\r\n    [Network.PolygonZkEvm, {\r\n        router: '0xd3Ea3BC1F5A3F881bD6cE9761cbA5A0833a5d737',\r\n        factory: '0xa2899c776bAAF9925d432F83C950D5054A6CF59C',\r\n    }],\r\n    [Network.Canto, {\r\n        router: '0xD463786E7d54Fc570A92982157E15130e469dcD8',\r\n        factory: '0x1BB9cf4e63CD2DAb8741c334f525350AB2Ee2c96',\r\n    }],\r\n]);\r\n\r\n\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://wiki.icecreamswap.com/intro/contracts/v2\r\nexport const icecreamswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0xA1d3462AFbFFe3BA45A5044FB899e6E219Ec842A',\r\n        factory: '0x0a354845411CC1212cfb33Acc6A52Fcd4A80e3Ae',\r\n    }],\r\n    [Network.Avalanche, {\r\n        router: '0x3FFc2315A992b01dc4B3f79C8EEa1921091Ee24f',\r\n        factory: '0xb4FE60CD05A3e68668007Cee83DDFD9A50A45B36',\r\n    }],\r\n    [Network.Bitgert, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n    [Network.Blast, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n    [Network.BOB, {\r\n        router: '0x698a912F8CA34Df9b46E6Ea4A2B2DB0B7151b083',\r\n        factory: '0x7b2a5C88AB9367147F6ac384F857CbaDF5aA70a7',\r\n    }],\r\n    [Network.BobaNetwork, {\r\n        router: '0x698a912F8CA34Df9b46E6Ea4A2B2DB0B7151b083',\r\n        factory: '0x7b2a5C88AB9367147F6ac384F857CbaDF5aA70a7',\r\n    }],\r\n    [Network.BSC, {\r\n        router: '0xB403c6c93446eD1453CAa51d69A492053e008240',\r\n        factory: '0x89BdF2078BAFbdde92A796F7FC76abd36B84d4Db',\r\n    }],\r\n    [Network.Celo, {\r\n        router: '0xA1d3462AFbFFe3BA45A5044FB899e6E219Ec842A',\r\n        factory: '0xFABbD5f4a53725266a4fA84D4140276794572cD6',\r\n    }],\r\n    [Network.Core, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n    [Network.Cronos, {\r\n        router: '0xb4FE60CD05A3e68668007Cee83DDFD9A50A45B36',\r\n        factory: '0x63d3C7Ab37ca36A2A0A338076C163fF60c72527c',\r\n    }],\r\n    [Network.Dogechain, {\r\n        router: '0x4Cbd6DE8819237d43EA44b8F14fd4d39bCc3c2D5',\r\n        factory: '0x064b3B79A13A3D8959614AC45ffb7907A135f57a',\r\n    }],\r\n    [Network.DoKenSuperChain, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n    [Network.Fantom, {\r\n        router: '0x3FFc2315A992b01dc4B3f79C8EEa1921091Ee24f',\r\n        factory: '0xb4FE60CD05A3e68668007Cee83DDFD9A50A45B36',\r\n    }],\r\n    [Network.Fuse, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n    [Network.Kroma, {\r\n        router: '0xb4FE60CD05A3e68668007Cee83DDFD9A50A45B36',\r\n        factory: '0x63d3C7Ab37ca36A2A0A338076C163fF60c72527c',\r\n    }],\r\n    [Network.Lightlink, {\r\n        router: '0xE578184bC88EB48485Bba23a37B5509578d2aE38',\r\n        factory: '0xC87De04e2EC1F4282dFF2933A2D58199f688fC3d',\r\n    }],\r\n    [Network.Linea, {\r\n        router: '0xa575f37e869e6887564F87c07e2885e08D542C4a',\r\n        factory: '0x3FFc2315A992b01dc4B3f79C8EEa1921091Ee24f',\r\n    }],\r\n    [Network.Mantle, {\r\n        router: '0xb4FE60CD05A3e68668007Cee83DDFD9A50A45B36',\r\n        factory: '0x63d3C7Ab37ca36A2A0A338076C163fF60c72527c',\r\n    }],\r\n    [Network.Metis, {\r\n        router: '0xb4FE60CD05A3e68668007Cee83DDFD9A50A45B36',\r\n        factory: '0x63d3C7Ab37ca36A2A0A338076C163fF60c72527c',\r\n    }],\r\n    [Network.Mode, {\r\n        router: '0xb4FE60CD05A3e68668007Cee83DDFD9A50A45B36',\r\n        factory: '0x63d3C7Ab37ca36A2A0A338076C163fF60c72527c',\r\n    }],\r\n    [Network.Moonbeam, {\r\n        router: '0xb4FE60CD05A3e68668007Cee83DDFD9A50A45B36',\r\n        factory: '0x63d3C7Ab37ca36A2A0A338076C163fF60c72527c',\r\n    }],\r\n    [Network.Moonriver, {\r\n        router: '0xb4FE60CD05A3e68668007Cee83DDFD9A50A45B36',\r\n        factory: '0x63d3C7Ab37ca36A2A0A338076C163fF60c72527c',\r\n    }],\r\n    [Network.NeonEvm, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n    [Network.Optimism, {\r\n        router: '0xb4FE60CD05A3e68668007Cee83DDFD9A50A45B36',\r\n        factory: '0x3FFc2315A992b01dc4B3f79C8EEa1921091Ee24f',\r\n    }],\r\n    [Network.Quitmer, {\r\n        router: '0x575C065Bf1Fa9D6F0F94AAC620a6936dD8517c7D',\r\n        factory: '0x84aeB58fb9187dD64282d0C0975F788e21dd4475',\r\n    }],\r\n    [Network.RARI, {\r\n        router: '0x60cA396F69b8D9b22886208984D89a682D9D6f04',\r\n        factory: '0x8bCf938b30575594B02420e86b100121c92A54a3',\r\n    }],\r\n    [Network.Scroll, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n    [Network.ShimmerEvm, {\r\n        router: '0xBbB4CCfc93657AC125F4b1f734111349d1bFF611',\r\n        factory: '0x24cb308a4e2F3a4352F513681Bd0c31a0bd3BA31',\r\n    }],\r\n    [Network.Telos, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n    [Network.XDCNetwork, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n    [Network.XLayer, {\r\n        router: '0xE578184bC88EB48485Bba23a37B5509578d2aE38',\r\n        factory: '0xC87De04e2EC1F4282dFF2933A2D58199f688fC3d',\r\n    }],\r\n    [Network.XODEX, {\r\n        router: '0xBb5e1777A331ED93E07cF043363e48d320eb96c4',\r\n        factory: '0x9E6d21E759A7A288b80eef94E4737D313D31c13f',\r\n    }],\r\n]);\r\n\r\n\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://docs.elk.finance/further-information/addresses/\r\nexport const elkswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Avalanche, {\r\n        router: '0x9E4AAbd2B3E60Ee1322E94307d0776F2c8e6CFbb',\r\n        factory: '0x091d35d7F63487909C863001ddCA481c6De47091',\r\n    }],\r\n    [Network.Polygon, {\r\n        router: '0xf38a7A7Ac2D745E2204c13F824c00139DF831FFf',\r\n        factory: '0xE3BD06c7ac7E1CeB17BdD2E5BA83E40D1515AF2a',\r\n    }],\r\n    [Network.Fantom, {\r\n        router: '0x4D2cf285a519261F30b4d9c2c344Baf260d65Fa2',\r\n        factory: '0x7Ba73c99e6f01a37f3e33854c8F544BbbadD3420',\r\n    }],\r\n    [Network.HuobiECO, {\r\n        router: '0x62710D18596c808c70864695c77480De252DD9D5',\r\n        factory: '0x997fCE9164D630CC58eE366d4D275B9D773d54A4',\r\n    }],\r\n    [Network.Gnosis, {\r\n        router: '0xe5759714998e8B50A33c7333C04C2d02e5dcE77f',\r\n        factory: '0xCB018587dA9590A18f49fFE2b85314c33aF3Ad3B',\r\n    }],\r\n    [Network.BSC, {\r\n        router: '0xA63B831264183D755756ca9AE5190fF5183d65D6',\r\n        factory: '0x31aFfd875e9f68cd6Cd12Cee8943566c9A4bBA13',\r\n    }],\r\n    [Network.KCC, {\r\n        router: '0x5DDac4C73b15353dc4a00DaeAfb38631a7cBd389',\r\n        factory: '0x1f9aa39001ed0630dA6854859D7B3eD255648599',\r\n    }],\r\n    [Network.Harmony, {\r\n        router: '0xbeA02dc919B08b5aE2158a8fBC60D4DA5640737B',\r\n        factory: '0xCdde1AbfF5Ae3Cbfbdb55c1e866Ac56380e18720',\r\n    }],\r\n    [Network.OKXChain, {\r\n        router: '0x4652ab8e8821F234407b1f1cB0ac8dD7E617BfF8',\r\n        factory: '0x1116f8B82028324f2065078b4ff6b47F1Cc22B97',\r\n    }],\r\n    [Network.Elastos, {\r\n        router: '0xbF9Bebfd6954985E41Fed497a5421B3B5B0f66AB',\r\n        factory: '0x440a1B8b8e968D6765D41E6b92DF3cBb0e9D2b1e',\r\n    }],\r\n    [Network.Moonriver, {\r\n        router: '0xdCB8C29298AF7E9C48b56dB3c87dB6d124d1Ef97',\r\n        factory: '0xd45145f10fD4071dfC9fC3b1aefCd9c83A685e77',\r\n    }],\r\n    [Network.Telos, {\r\n        router: '0x75840EBB437981a3F3F1F004513821E0CcDCFC21',\r\n        factory: '0x47c3163e691966f8c1b93B308A236DDB3C1C592d',\r\n    }],\r\n    [Network.Cronos, {\r\n        router: '0xdB02A597b283eACb9436Cd2a2d15039a11A3299d',\r\n        factory: '0xEEa0e2830D09D8786Cb9F484cA20898b61819ef1',\r\n    }],\r\n    [Network.Fuse, {\r\n        router: '0x9a5De8C973c2f64f0f518DE581BcC2aa2dF8A621',\r\n        factory: '0x779407e40Dad9D70Ba5ADc30E45cC3494ec71ad2',\r\n    }],\r\n    [Network.Iotex, {\r\n        router: '0xAEB801BA5Cf1233B2a3765890D4f8f8C8141Fa43',\r\n        factory: '0xF96bE66DA0b9bC9DFD849827b4acfA7e8a6F3C42',\r\n    }],\r\n    [Network.Ethereum, {\r\n        router: '0xb5e9F6C58f548CeE53257304e287b23757eFFCA1',\r\n        factory: '0x6511eBA915fC1b94b2364289CCa2b27AE5898d80',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0x0A2e5A3Dc2f74E5Bfaf0Bf90685A5A899f379Cb0',\r\n        factory: '0xA59B2044EAFD15ee4deF138D410d764c9023E1F0',\r\n    }],\r\n    [Network.Optimism, {\r\n        router: '0xeadE97aFC8f79A8E5Ba85d57C4a4E629b1160C6A',\r\n        factory: '0xedfad3a0f42a8920b011bb0332ade632e552d846',\r\n    }],\r\n    [Network.Kava, {\r\n        router: '0x7a2c1D96C76B6EB62241df4d2fAEb9F0D3D59E10',\r\n        factory: '0xC012C4b3d253A8F22d5e4ADA67ea2236FF9778fc',\r\n    }],\r\n    [Network.BitTorrent, {\r\n        router: '0x7520D45BCC30Be211C6B28f6291522555EDa4D6c',\r\n        factory: '0xc06348AEE3f3E92eE452816E0D3F25C919F6fB04',\r\n    }],\r\n    [Network.Bitgert, {\r\n        router: '0x7ae799fDBE4c330A4AC18d8d65765222A0D47e6D',\r\n        factory: '0xfbb4E52FEcc90924c79F980eb24a9794ae4aFFA4',\r\n    }],\r\n    [Network.Metis, {\r\n        router: '0x7ae799fDBE4c330A4AC18d8d65765222A0D47e6D',\r\n        factory: '0xfbb4E52FEcc90924c79F980eb24a9794ae4aFFA4',\r\n    }],\r\n    [Network.Wanchain, {\r\n        router: '0x7ae799fDBE4c330A4AC18d8d65765222A0D47e6D',\r\n        factory: '0xfbb4E52FEcc90924c79F980eb24a9794ae4aFFA4',\r\n    }],\r\n    [Network.NeonEvm, {\r\n        router: '0x7ae799fDBE4c330A4AC18d8d65765222A0D47e6D',\r\n        factory: '0xfbb4E52FEcc90924c79F980eb24a9794ae4aFFA4',\r\n    }],\r\n    [Network.Astar, {\r\n        router: '0x7ae799fDBE4c330A4AC18d8d65765222A0D47e6D',\r\n        factory: '0xfbb4E52FEcc90924c79F980eb24a9794ae4aFFA4',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0x7ae799fDBE4c330A4AC18d8d65765222A0D47e6D',\r\n        factory: '0xfbb4E52FEcc90924c79F980eb24a9794ae4aFFA4',\r\n    }],\r\n    [Network.Linea, {\r\n        router: '0x7ae799fDBE4c330A4AC18d8d65765222A0D47e6D',\r\n        factory: '0xfbb4E52FEcc90924c79F980eb24a9794ae4aFFA4',\r\n    }],\r\n    [Network.Velas, {\r\n        router: '0x7ae799fDBE4c330A4AC18d8d65765222A0D47e6D',\r\n        factory: '0xfbb4E52FEcc90924c79F980eb24a9794ae4aFFA4',\r\n    }],\r\n    [Network.QBlockchain, {\r\n        router: '0x7ae799fDBE4c330A4AC18d8d65765222A0D47e6D',\r\n        factory: '0xfbb4E52FEcc90924c79F980eb24a9794ae4aFFA4',\r\n    }],\r\n    [Network.Arthera, {\r\n        router: '0x35FC5DF37eABaB62B55ECDc349b2d718C88E107A',\r\n        factory: '0x69D10bc18cD588A4b70F836a471D4e9C2FD86092',\r\n    }],\r\n    [Network.RootStock, {\r\n        router: '0x35FC5DF37eABaB62B55ECDc349b2d718C88E107A',\r\n        factory: '0x69D10bc18cD588A4b70F836a471D4e9C2FD86092',\r\n    }],\r\n]);","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://docs.rocketswap.cc/contracts-and-audit-report\r\nexport const rocketswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0x4cf76043B3f97ba06917cBd90F9e3A2AAC1B306e',\r\n        factory: '0x1B8128c3A1B7D20053D10763ff02466ca7FF99FC',\r\n    }],\r\n    [Network.opBNB, {\r\n        router: '0xBe35BeEC0AC33eefBcfaf16e8088897153C69fCB',\r\n        factory: '0xc83ef35eB044b57850CF28EfF40067719F136770',\r\n    }],\r\n    // TODO: find addresses in Shibarium Chain\r\n]);","import { Network } from \"../../../types/network\";\r\n\r\n// https://docs.baseswap.fi/baseswap/info/smart-contracts\r\nexport const baseswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Base, {\r\n        router: '0x327Df1E6de05895d2ab08513aaDD9313Fe505d86',\r\n        factory: '0xFDa619b6d20975be80A10332cD39b9a4b0FAa8BB',\r\n    }],\r\n]);\r\n\r\n\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://docs.gammaswap.com/resources/contract-addresses\r\nexport const deltaswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Ethereum, {\r\n        router: '0x5FbE219e88f6c6F214Ce6f5B1fcAa0294F31aE1b',\r\n        factory: '0xCF2b6bC8c0e0a1292dB7f0AE89410670796350c8',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0x5FbE219e88f6c6F214Ce6f5B1fcAa0294F31aE1b',\r\n        factory: '0xCb85E1222f715a81b8edaeB73b28182fa37cffA8',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0x1b7655aa64b7BD54077dE56B64a0f92BCba05b85',\r\n        factory: '0x9A9A171c69cC811dc6B59bB2f9990E34a22Fc971',\r\n    }],\r\n    \r\n]);","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://ringprotocol.gitbook.io/ring/docs/deployments\r\nexport const ringswapV2Addresses = new Map<Network, {router: string, factory: string}>([\r\n    [Network.Blast, {\r\n        router: '0x7001F706ACB6440d17cBFaD63Fa50a22D51696fF',\r\n        factory: '0x24F5Ac9A706De0cF795A8193F6AB3966B14ECfE6',\r\n    }],\r\n    [Network.Ethereum, {\r\n        router: '0x39d1d8fcC5E6EEAf567Bce4e29B94fec956D3519',\r\n        factory: '0xeb2A625B704d73e82946D8d026E1F588Eed06416',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0x224749CDd5791480ECEBE452e5FFAEfEf94Cd254',\r\n        factory: '0x9BfFC3B30D6659e3D84754cc38865B3D60B4980E',\r\n    }],\r\n    [Network.BSC, {\r\n        router: '0x20504f37A95eF80e3FC7476c4801fb39AaE6bAd0',\r\n        factory: '0x4De602A30Ad7fEf8223dcf67A9fB704324C4dd9B',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0xD69ed581480239357515e200560353AF1BbaA46A',\r\n        factory: '0x1246Fa62467a9AC0892a2d2A9F9aafC2F5609442',\r\n    }],\r\n    [Network.Story, {\r\n        router: '0xf9d7ff2f6A0c3631A807199276a493Af8097916F',\r\n        factory: '0xEeE400Eabfba8F60f4e6B351D8577394BeB972CD',\r\n    }],\r\n    [Network.Unichain, {\r\n        router: '0xf9d7ff2f6A0c3631A807199276a493Af8097916F',\r\n        factory: '0xEeE400Eabfba8F60f4e6B351D8577394BeB972CD',\r\n    }],\r\n]);","import { Contract, id, isAddress, MaxUint256, parseUnits, ZeroAddress } from \"ethers\";\r\n\r\nimport { type INetworkConfig } from \"../types/network\";\r\nimport { DexBase } from \"./DexBase\";\r\nimport { DexInterfaceName, DexType } from \"./types/IDexParams\";\r\nimport { routerAbi, factoryAbi, pairAbi } from \"./abi/uniswap-v2\";\r\nimport { erc20Abi } from \"../erc20/abi/erc20-abi\";\r\nimport { cutEncodedDataParams } from \"../utils/cut-encoded-data-params\";\r\nimport { uniswapV2Addresses } from \"./addresses/uniswap-v2-kind/uniswap-v2\";\r\nimport { pancakeswapV2Addresses } from \"./addresses/uniswap-v2-kind/pancakeswap-v2\";\r\nimport { sushiswapV2Addresses } from \"./addresses/uniswap-v2-kind/sushiswap-v2\";\r\nimport { alienbaseArea51V2Addresses, alienbaseV2Addresses } from \"./addresses/uniswap-v2-kind/alienbase-v2\";\r\nimport { dackieswapV2Addresses } from \"./addresses/uniswap-v2-kind/dackieswap-v2\";\r\nimport { raifinanceV2Addresses } from \"./addresses/uniswap-v2-kind/rai-finance-v2\";\r\nimport { sharkswapV2Addresses } from \"./addresses/uniswap-v2-kind/sharkswap-v2\";\r\nimport { swapbasedammV2Addresses } from \"./addresses/uniswap-v2-kind/swapbased-amm-v2\";\r\nimport { leetswapV2Addresses } from \"./addresses/uniswap-v2-kind/leetswap-v2\";\r\nimport { icecreamswapV2Addresses } from \"./addresses/uniswap-v2-kind/icecreamswap-v2\";\r\nimport { elkswapV2Addresses } from \"./addresses/uniswap-v2-kind/elkswap-v2\";\r\nimport { rocketswapV2Addresses } from \"./addresses/uniswap-v2-kind/rocketswap-v2\";\r\nimport { baseswapV2Addresses } from \"./addresses/uniswap-v2-kind/baseswap-v2\";\r\nimport { deltaswapV2Addresses } from \"./addresses/uniswap-v2-kind/deltaswap-v2\";\r\nimport { ringswapV2Addresses } from \"./addresses/uniswap-v2-kind/ringswap-v2\";\r\nimport { ERC20 } from \"../erc20/tokens/ERC20\";\r\nimport { reverseCopy } from \"../utils/reverse-copy\";\r\n\r\nexport class DexBaseKindUniswapV2 extends DexBase {\r\n    constructor(\r\n        routerAddress_: string,\r\n        factoryAddress_: string,\r\n        network: INetworkConfig,\r\n        name?: DexInterfaceName,\r\n        routerAbi_?: any,\r\n        factoryAbi_?: any,\r\n    ) {\r\n        super({\r\n            network,\r\n            type: DexType.UniswapV2,\r\n            name: name ?? DexInterfaceName.UniswapV2,\r\n            router: {\r\n                address: routerAddress_,\r\n                abi: routerAbi_ ?? routerAbi,\r\n            },\r\n            factory: {\r\n                address: factoryAddress_,\r\n                abi: factoryAbi_ ?? factoryAbi,\r\n            },\r\n        });\r\n    }\r\n\r\n    public async getPoolData(path: string[]): Promise<{\r\n        poolAddress: string;\r\n        token0: string;\r\n        token1: string;\r\n        reserves0: bigint;\r\n        reserves1: bigint;\r\n    }[]> {\r\n        const splitedPaths = this.splitPath(path);\r\n\r\n        if(splitedPaths.length === 0) {\r\n            throw new Error('No allowed paths providen');\r\n        }\r\n\r\n        const poolData: {\r\n            poolAddress: string;\r\n            token0: string;\r\n            token1: string;\r\n            reserves0: bigint;\r\n            reserves1: bigint;\r\n        }[] = [];\r\n        for(const path of splitedPaths) {\r\n            const pair = await this.getPoolAddress(path);\r\n            \r\n            if(pair === ZeroAddress) {\r\n                continue;\r\n            }\r\n            \r\n            const pairContract = new Contract(pair, pairAbi, this._provider);\r\n\r\n            const [\r\n                token0,\r\n                token1,\r\n                reserves,\r\n            ] = await Promise.all([\r\n                // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n                pairContract.token0(),\r\n                // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n                pairContract.token1(),\r\n                // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n                pairContract.getReserves(),\r\n            ]);\r\n\r\n            poolData.push({\r\n                poolAddress: pair,\r\n                token0,\r\n                token1,\r\n                reserves0: reserves[0],\r\n                reserves1: reserves[1],\r\n            })\r\n        }\r\n\r\n        return poolData;\r\n    }\r\n\r\n\r\n    public async getTokenPrice(path: string[]): Promise<number> {\r\n        if(path.length < 2) {\r\n            throw new Error('Path length should be at least 2');\r\n        }\r\n\r\n        const token = new Contract(path[0] as string, erc20Abi, this._provider);\r\n        const tokenQuote = new Contract(path[path.length - 1] as string, erc20Abi, this._provider);\r\n\r\n        const [decimals, decimalsQuote] = await Promise.all([\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            token.decimals(),\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            tokenQuote.decimals()\r\n        ]);\r\n\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        const amountsOut = await this._routerContract.getAmountsOut(parseUnits('1', decimals), path);\r\n        return Number(amountsOut[amountsOut.length - 1]) / 10**Number(decimalsQuote);\r\n    }\r\n\r\n    public async getPoolAddress(path: string[]): Promise<string> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._factoryContract.getPair(path[0], path[1]);\r\n    }\r\n\r\n\r\n    public async getPoolAddresses(path: string[]): Promise<string[]> {\r\n        const poolPairs = this.splitPath(path);\r\n        const pairsArray: string[] = []\r\n\r\n        for(const poolPair of poolPairs) {\r\n            pairsArray.push(await this.getPoolAddress(poolPair));\r\n        }\r\n\r\n        return pairsArray;\r\n    }\r\n\r\n    public async getPoolCount(): Promise<number> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return Number(await this._factoryContract.allPairsLength());\r\n    }\r\n\r\n    public async getPoolAddressByIndex(index: number): Promise<string> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._factoryContract.allPairs(index);\r\n    }\r\n\r\n    public async getPoolReserves(path: string[]): Promise<{\r\n        reserve0: number,\r\n        reserve1: number,\r\n        blockTimestampLast: number,\r\n    }> {\r\n        const pair = await this.getPoolAddress(path);\r\n        const pairContract = new Contract(pair, pairAbi, this._provider);\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        const [reserve0, reserve1, blockTimestampLast] = await pairContract.getReserves();\r\n\r\n        const token0 = new ERC20({\r\n            address: path[0] as string,\r\n            network: this._network,\r\n        });\r\n        const token1 = new ERC20({\r\n            address: path[path.length - 1] as string,\r\n            network: this._network,\r\n        });\r\n\r\n        const [decimals0, decimals1] = await Promise.all([\r\n            token0.getDecimals(),\r\n            token1.getDecimals(),\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            pairContract.getReserves()\r\n        ]);\r\n\r\n        return {\r\n            reserve0: Number(reserve0) / 10**Number(decimals0),\r\n            reserve1: Number(reserve1) / 10**Number(decimals1),\r\n            blockTimestampLast: Number(blockTimestampLast),\r\n        };\r\n    }\r\n\r\n    public async getFactoryAddress(): Promise<string> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._routerContract.factory();\r\n    }\r\n\r\n    public splitPath(path: string[]): string[][] {\r\n        for(const token of path) {\r\n            if(isAddress(token)) {\r\n                continue;\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n        if(path.length === 1) return [];\r\n        if(path.length === 2) return [path];\r\n\r\n        const pools: string[][] = [];\r\n        for (let i = 0; i < path.length - 1; i++) {\r\n            pools.push([path[i] as string, path[i + 1] as string]);\r\n        }\r\n        return pools;\r\n    }\r\n\r\n    public getEncodedSwap(\r\n        amountsIn: bigint,\r\n        path: (string | any)[],\r\n        sendTo: string,\r\n        slippage?: number,\r\n    ): {\r\n        data: string,\r\n        topHalf: string,\r\n        bottomHalf: string,\r\n    } {\r\n        // const deadline = Math.floor(Date.now() / 1000) + 10000;\r\n        const amountOutMin = slippage ? amountsIn * BigInt(10000 - slippage) / BigInt(10000) : 0;\r\n\r\n        const data = this._routerContract.interface.encodeFunctionData(\r\n            'swapExactTokensForTokens',\r\n            [\r\n                amountsIn,\r\n                amountOutMin,\r\n                path,\r\n                sendTo,\r\n                MaxUint256\r\n            ]\r\n        );\r\n\r\n        return {\r\n            data,\r\n            ...cutEncodedDataParams(data),\r\n        }\r\n    }\r\n\r\n\r\n    public async simulateSwap(\r\n        from: string,\r\n        amountsIn: bigint,\r\n        path: (string | any)[],\r\n        sendTo?: string,\r\n        overrides?: {\r\n            gasLimit?: number,\r\n            maxFeePerGas?: number,\r\n            maxPriorityFeePerGas?: number,\r\n        }\r\n    ) {\r\n        const deadline = Math.floor(Date.now() / 1000) + 600;\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._routerContract.swapExactTokensForTokens.staticCallResult(\r\n            amountsIn,\r\n            0,\r\n            path,\r\n            sendTo ?? from,\r\n            deadline,\r\n            {\r\n                ...overrides,\r\n                from,\r\n            }\r\n        );\r\n    }\r\n\r\n    public getDecodedSwapData(token0: string, token1: string, data: string): { tokenFrom: string; tokenTo: string; amountsIn: bigint; amountsOut: bigint; } {\r\n        const t0 = token0.toLowerCase();\r\n        const t1 = token1.toLowerCase();\r\n\r\n        const [amount0In, amount1In, amount0Out, amount1Out] = this._coder.decode(\r\n            [\"uint256\", \"uint256\", \"uint256\", \"uint256\"],\r\n            data\r\n        ) as unknown as [bigint, bigint, bigint, bigint];\r\n\r\n        if (amount0In > 0n) {\r\n            // трейдер внёс token0 и получил token1\r\n            return {\r\n                tokenFrom: t0,\r\n                tokenTo: t1,\r\n                amountsIn: amount0In,\r\n                amountsOut: amount1Out\r\n            };\r\n        }\r\n        if (amount1In > 0n) {\r\n            // трейдер внёс token1 и получил token0\r\n            return {\r\n                tokenFrom: t1,\r\n                tokenTo: t0,\r\n                amountsIn: amount1In,\r\n                amountsOut: amount0Out\r\n            };\r\n        }\r\n\r\n        // если все инпуты нулевые — странный кейс, считаем ошибкой\r\n        throw new Error(\"UniswapV2 swap decode: both amount0In and amount1In are zero\");\r\n    }\r\n\r\n    public getReversedPath(path: string[]): string[] {\r\n        return reverseCopy<string>(path);\r\n    }\r\n\r\n    public getSwapEventSignature(): {\r\n        event: string,\r\n        id: string,\r\n    } {\r\n        const rawEvent = 'Swap(address,uint256,uint256,uint256,uint256,address)';\r\n        return {\r\n            event: rawEvent,\r\n            id: id(rawEvent),\r\n        };\r\n    }\r\n}\r\n\r\n\r\nexport class UniswapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = uniswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.UniswapV2\r\n        );\r\n    }\r\n}\r\n\r\nexport class PancakeSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = pancakeswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.PancakeSwapV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class SushiSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = sushiswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.SushiSwapV2\r\n        );\r\n    }\r\n}\r\n\r\nexport class AlienBaseV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = alienbaseV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.AlienBaseV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class AlienBaseArea51V2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = alienbaseArea51V2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.AlienBaseArea51V2\r\n        );\r\n    }\r\n}\r\n\r\nexport class DackieSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = dackieswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.DackieSwapV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class RaiFinanceV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = raifinanceV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.RaiFinanceV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class SharkSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = sharkswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.SharkSwapV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class SwapBasedAmmV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = swapbasedammV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.SwapBasedAmmV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class LeetSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = leetswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.LeetSwapV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class IcecreamSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = icecreamswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.IcecreamSwapV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class ElkV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = elkswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.ElkV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class RocketSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = rocketswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.RocketSwapV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export class DiamondSwapV2 extends DexBaseKindUniswapV2 {\r\n//     constructor(network: INetworkConfig, overrides?: {\r\n//         routerAddress: string,\r\n//         factoryAddress: string,\r\n//         name?: string,\r\n//     }) {\r\n//         const addresses = diamondswapV2Addresses.get(network.id)!;\r\n//         super(\r\n//             overrides?.routerAddress ?? addresses.router,\r\n//             overrides?.factoryAddress ?? addresses.factory,\r\n//             network,\r\n//             overrides?.name ?? 'Diamond Swap V2'\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\nexport class BaseSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = baseswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.BaseSwapV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class DeltaSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = deltaswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.DeltaSwapV2\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class RingSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = ringswapV2Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.RingSwapV2\r\n        );\r\n    }\r\n}\r\n","import { Contract, parseUnits, formatUnits, MaxUint256 } from \"ethers\";\r\nimport type { INetworkConfig } from \"../types/network\";\r\nimport { ixswapV2Addresses } from \"./addresses/uniswap-v2-kind/ixswap-v2\";\r\nimport { DexBaseKindUniswapV2 } from \"./UniswapV2Kind\";\r\nimport { routerAbi } from \"./abi/ixswap-v2\";\r\nimport { erc20Abi } from \"../erc20/abi/erc20-abi\";\r\nimport { DexInterfaceName } from \"./types/IDexParams\";\r\n\r\nconst emptyAuthorisation = {\r\n    operator: '0x0000000000000000000000000000000000000000',\r\n    deadline:\r\n        '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\r\n    v: 0,\r\n    r: '0x0000000000000000000000000000000000000000000000000000000000000000',\r\n    s: '0x0000000000000000000000000000000000000000000000000000000000000000',\r\n};\r\n\r\nexport class IxSwapV2 extends DexBaseKindUniswapV2 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = ixswapV2Addresses.get(network.id)!;\r\n        const {\r\n            routerAddress = addresses.router,\r\n            factoryAddress = addresses.factory,\r\n            name = DexInterfaceName.IXSwap,\r\n        } = overrides ?? {};\r\n        super(\r\n            routerAddress as string,\r\n            factoryAddress as string,\r\n            network,\r\n            name,\r\n            routerAbi\r\n        );\r\n    }\r\n\r\n    // в параметр path вставляем два токена для находа пары\r\n    // цена будет возвращаться по первому токену из пары вставленному в path\r\n    public override async getTokenPrice(path: string[]): Promise<number> {\r\n        if(path.length < 2) {\r\n            throw new Error('path length should be at least 2');\r\n        }\r\n        const secPath = Array.from({ length: path.length }, () => false);\r\n        const token = new Contract(path[0] as string, erc20Abi, this._provider);\r\n        const tokenQuote = new Contract(path[path.length - 1] as string, erc20Abi, this._provider);\r\n\r\n        const [decimals, decimalsQuote] = await Promise.all([\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            token.decimals(),\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            tokenQuote.decimals()\r\n        ]);\r\n\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        const amountsOut = await this._routerContract.getAmountsOut(\r\n            parseUnits('1', decimals),\r\n            path,\r\n            secPath\r\n        );\r\n\r\n        return +formatUnits(amountsOut[amountsOut.length - 1], decimalsQuote);\r\n    }\r\n\r\n    public override async simulateSwap<T>(\r\n        from: string,\r\n        amountsIn: bigint,\r\n        path: T[],\r\n        sendTo: string,\r\n        overrides?: {\r\n            gasLimit?: number,\r\n            maxFeePerGas?: number,\r\n            maxPriorityFeePerGas?: number,\r\n        }\r\n    ) {\r\n        // const deadline = Math.floor(Date.now() / 1000) + 600;\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._routerContract.swapExactTokensForTokens.staticCallResult(\r\n            amountsIn,\r\n            0,\r\n            path,\r\n            sendTo,\r\n            MaxUint256,\r\n            [emptyAuthorisation, emptyAuthorisation],\r\n            {\r\n                ...overrides,\r\n                from,\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    public override getEncodedSwap<T>(\r\n        amountsIn: bigint,\r\n        path: T[],\r\n        sendTo: string,\r\n        slippage?: number,\r\n    ): {\r\n        data: string,\r\n        topHalf: string,\r\n        bottomHalf: string,\r\n    } {\r\n        // const deadline = Math.floor(Date.now() / 1000) + 10000;\r\n        const amountOutMin = slippage ? amountsIn * BigInt(10000 - slippage) / BigInt(10000) : 0;\r\n\r\n        const data = this._routerContract.interface.encodeFunctionData(\r\n            'swapExactTokensForTokens',\r\n            [\r\n                amountsIn,\r\n                amountOutMin,\r\n                path,\r\n                sendTo,\r\n                MaxUint256,\r\n                [emptyAuthorisation, emptyAuthorisation]\r\n            ]\r\n        );\r\n\r\n        return {\r\n            data,\r\n            topHalf: data.slice(0, 10),\r\n            bottomHalf: '0x' + data.slice(74),\r\n        }\r\n    }\r\n}\r\n\r\n","import { Network } from \"../../../types/network\";\r\n\r\nexport const uniswapV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.Ethereum, {\r\n        router: '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45',\r\n        factory: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\r\n        quoter: '0x61fFE014bA17989E743c5F6cB21bF9697530B21e',\r\n    }],\r\n    [Network.Unichain, {\r\n        router: '0x73855d06de49d0fe4a9c42636ba96c62da12ff9c',\r\n        factory: '0x1f98400000000000000000000000000000000003',\r\n        quoter: '0x385a5cf5f83e99f7bb2852b6a19c3538b9fa7658',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0x2626664c2603336E57B271c5C0b26F421741e481',\r\n        factory: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\r\n        quoter: '0x61fFE014bA17989E743c5F6cB21bF9697530B21e',\r\n    }],\r\n    [Network.Optimism, {\r\n        router: '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45',\r\n        factory: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\r\n        quoter: '0x61fFE014bA17989E743c5F6cB21bF9697530B21e',\r\n    }],\r\n    [Network.Polygon, {\r\n        router: '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45',\r\n        factory: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\r\n        quoter: '0x61fFE014bA17989E743c5F6cB21bF9697530B21e',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0x2626664c2603336E57B271c5C0b26F421741e481',\r\n        factory: '0x33128a8fC17869897dcE68Ed026d694621f6FDfD',\r\n        quoter: '0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a',\r\n    }],\r\n    [Network.BSC, {\r\n        router: '0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2',\r\n        factory: '0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7',\r\n        quoter: '0x78D78E420Da98ad378D7799bE8f4AF69033EB077',\r\n    }],\r\n    [Network.Avalanche, {\r\n        router: '0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE',\r\n        factory: '0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD',\r\n        quoter: '0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F',\r\n    }],\r\n    [Network.Celo, {\r\n        router: '0x5615CDAb10dc425a742d643d949a7F474C01abc4',\r\n        factory: '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc',\r\n        quoter: '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8',\r\n    }],\r\n    [Network.Blast, {\r\n        router: '0x549FEB8c9bd4c12Ad2AB27022dA12492aC452B66',\r\n        factory: '0x792edAdE80af5fC680d96a2eD80A44247D2Cf6Fd',\r\n        quoter: '0x6Cdcd65e03c1CEc3730AeeCd45bc140D57A25C77',\r\n    }],\r\n    [Network.ZkSync, {\r\n        router: '0x99c56385daBCE3E81d8499d0b8d0257aBC07E8A3',\r\n        factory: '0x8FdA5a7a8dCA67BBcDd10F02Fa0649A937215422',\r\n        quoter: '0x8Cb537fc92E26d8EBBb760E632c95484b6Ea3e28',\r\n    }],\r\n    [Network.WorldChain, {\r\n        router: '0x091AD9e2e6e5eD44c1c66dB50e49A601F9f36cF6',\r\n        factory: '0x7a5028BDa40e7B173C278C5342087826455ea25a',\r\n        quoter: '0x10158D43e6cc414deE1Bd1eB0EfC6a5cBCfF244c',\r\n    }],\r\n    [Network.Zora, {\r\n        router: '0x7De04c96BE5159c3b5CeffC82aa176dc81281557',\r\n        factory: '0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb',\r\n        quoter: '0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://github.com/sushiswap/v3-periphery/tree/master/deployments\r\nexport const sushiswapV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.ArbitrumNova, {\r\n        router: '0xc14Ee6B248787847527e11b8d7Cf257b212f7a9F',\r\n        factory: '0xaa26771d497814E81D305c511Efbb3ceD90BF5bd',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0x8A21F6768C1f8075791D08546Dadf6daA0bE820c',\r\n        factory: '0x1af415a1EbA07a4986a52B6f2e7dE7003D82231e',\r\n        quoter: '0x0524E833cCD057e4d7A296e3aaAb9f7675964Ce1',\r\n    }],\r\n    [Network.Avalanche, {\r\n        router: '0x8E4638eefee96732C56291fBF48bBB98725c6b31',\r\n        factory: '0x3e603C14aF37EBdaD31709C4f848Fc6aD5BEc715',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0xFB7eF66a7e61224DD6FcD0D7d9C3be5C8B049b9f',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.Blast, {\r\n        router: '0x5D0aA5dD03199D80089278B261167ffF24C304ca',\r\n        factory: '0x7680D4B43f3d1d54d6cfEeB2169463bFa7a6cf0d',\r\n        quoter: '0xD93a91442Afd80243cF12f7110f48aB276fFf33F',\r\n    }],\r\n    [Network.Boba, {\r\n        router: '', // TODO: add router\r\n        factory: '0x0BE808376Ecb75a5CF9bB6D237d16cd37893d904',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.BSC, {\r\n        router: '0x909662a99605382dB1E8d69cc1f182bb577d9038',\r\n        factory: '0x126555dd55a39328F69400d6aE4F782Bd4C34ABb',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.BTTC, {\r\n        router: '0xe43ca1Dee3F0fc1e2df73A0745674545F11A59F5',\r\n        factory: '0xBBDe1d67297329148Fe1ED5e6B00114842728e65',\r\n        quoter: '0x0389879e0156033202C44BF784ac18fC02edeE4f',\r\n    }],\r\n    [Network.Celo, {\r\n        router: '',\r\n        factory: '0x93395129bd3fcf49d95730D3C2737c17990fF328',\r\n        quoter: '',\r\n    }],\r\n    [Network.Core, {\r\n        router: '0x734583f62Bb6ACe3c9bA9bd5A53143CA2Ce8C55A',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n        quoter: '0x640129e6b5C31B3b12640A5b39FECdCa9F81C640',\r\n    }],\r\n    [Network.Ethereum, {\r\n        router: '0x2E6cd2d30aa43f40aa81619ff4b6E0a41479B13F',\r\n        factory: '0xbACEB8eC6b9355Dfc0269C18bac9d6E2Bdc29C4F',\r\n        quoter: '0x64e8802FE490fa7cc61d3463958199161Bb608A7',\r\n    }],\r\n    [Network.Fantom, {\r\n        router: '',\r\n        factory: '0x7770978eED668a3ba661d51a773d3a992Fc9DDCB',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.Filecoin, {\r\n        router: '0x0389879e0156033202C44BF784ac18fC02edeE4f',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n        quoter: '0x9B3fF703FA9C8B467F5886d7b61E61ba07a9b51c',\r\n    }],\r\n    [Network.Fuse, {\r\n        router: '',\r\n        factory: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.Gnosis, {\r\n        router: '0x4F54dd2F4f30347d841b7783aD08c050d8410a9d',\r\n        factory: '0xf78031CBCA409F2FB6876BDFDBc1b2df24cF9bEf',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.Haqq, {\r\n        router: '0xFB7eF66a7e61224DD6FcD0D7d9C3be5C8B049b9f',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n        quoter: '0x734583f62Bb6ACe3c9bA9bd5A53143CA2Ce8C55A',\r\n    }],\r\n    [Network.Hemi, {\r\n        router: '0x33d91116e0370970444B0281AB117e161fEbFcdD',\r\n        factory: '0xCdBCd51a5E8728E0AF4895ce5771b7d17fF71959',\r\n        quoter: '0x1400feFD6F9b897970f00Df6237Ff2B8b27Dc82C',\r\n    }],\r\n    [Network.Katana, {\r\n        router: '0x4e1d81A3E627b9294532e990109e4c21d217376C',\r\n        factory: '0x203e8740894c8955cB8950759876d7E7E45E04c1',\r\n        quoter: '0x92dea23ED1C683940fF1a2f8fE23FE98C5d3041c',\r\n    }],\r\n    [Network.Kava, {\r\n        router: '0xFF51a7C624Eb866917102707F3dA8bFb99Db8692',\r\n        factory: '0x1e9B24073183d5c6B7aE5FB4b8f0b1dd83FDC77a',\r\n        quoter: '0x5AbEdAc449A8301467c3e124B98e7151641F1e56',\r\n    }],\r\n    [Network.Linea, {\r\n        router: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n        quoter: '0xFB7eF66a7e61224DD6FcD0D7d9C3be5C8B049b9f',\r\n    }],\r\n    [Network.Metis, {\r\n        router: '0x2ABf469074dc0b54d793850807E6eb5Faf2625b1',\r\n        factory: '0x145d82bCa93cCa2AE057D1c6f26245d1b9522E6F',\r\n        quoter: '0xFbc12984689e5f15626Bad03Ad60160Fe98B303C',\r\n    }],\r\n    [Network.Moonbeam, {\r\n        router: '',\r\n        factory: '0x2ecd58F51819E8F8BA08A650BEA04Fc0DEa1d523',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.Moonriver, {\r\n        router: '',\r\n        factory: '0x2F255d3f3C0A3726c6c99E74566c4b18E36E3ce6',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.Optimism, {\r\n        router: '0x8c32Fd078B89Eccb06B40289A539D84A4aA9FDA6',\r\n        factory: '0x9c6522117e2ed1fE5bdb72bb0eD5E3f2bdE7DBe0',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.Polygon, {\r\n        router: '0x0aF89E1620b96170e2a9D0b68fEebb767eD044c3',\r\n        factory: '0x917933899c6a5F8E37F31E19f92CdBFF7e8FF0e2',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.PolygonZkEvm, {\r\n        router: '0xc14Ee6B248787847527e11b8d7Cf257b212f7a9F',\r\n        factory: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n        quoter: '0xb1E835Dc2785b52265711e17fCCb0fd018226a6e',\r\n    }],\r\n    [Network.RootStock, {\r\n        router: '0x1400feFD6F9b897970f00Df6237Ff2B8b27Dc82C',\r\n        factory: '0x46B3fDF7b5CDe91Ac049936bF0bDb12c5d22202e',\r\n        quoter: '0xe43ca1Dee3F0fc1e2df73A0745674545F11A59F5',\r\n    }],\r\n    [Network.Scroll, {\r\n        router: '0x33d91116e0370970444B0281AB117e161fEbFcdD',\r\n        factory: '0x46B3fDF7b5CDe91Ac049936bF0bDb12c5d22202e',\r\n        quoter: '0xe43ca1Dee3F0fc1e2df73A0745674545F11A59F5',\r\n    }],\r\n    [Network.ScaleEuropa, {\r\n        router: '0xd20a95C4470458aa00B1dF11EDA08c12ac29b858',\r\n        factory: '0x51d15889b66A2c919dBbD624d53B47a9E8feC4bB',\r\n        quoter: '0x25281328d69fd3452D16ffAb96E5EdD1c0a0AC43',\r\n    }],\r\n    [Network.Sonic, {\r\n        router: '0x1400feFD6F9b897970f00Df6237Ff2B8b27Dc82C',\r\n        factory: '0x46B3fDF7b5CDe91Ac049936bF0bDb12c5d22202e',\r\n        quoter: '0xe43ca1Dee3F0fc1e2df73A0745674545F11A59F5',\r\n    }],\r\n    [Network.Tatara, {\r\n        router: '0x1f2FCf1d036b375b384012e61D3AA33F8C256bbE',\r\n        factory: '0x9B3336186a38E1b6c21955d112dbb0343Ee061eE',\r\n        quoter: '0x33d91116e0370970444B0281AB117e161fEbFcdD',\r\n    }],\r\n    [Network.Thundercore, {\r\n        router: '0xc14Ee6B248787847527e11b8d7Cf257b212f7a9F',\r\n        factory: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n        quoter: '0x49244385bd56f557cE5201d8504C6D7f42Da8EF6',\r\n    }],\r\n    [Network.ZetaChain, {\r\n        router: '0x0389879e0156033202C44BF784ac18fC02edeE4f',\r\n        factory: '0xB45e53277a7e0F1D35f2a77160e91e25507f1763',\r\n        quoter: '0x57bfFa72db682f7eb6C132DAE03FF36bBEB0c459',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\nexport const pancakeswapV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.BSC, {\r\n        router: '0x1b81D678ffb9C0263b24A97847620C99d213eB14',\r\n        factory: '0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A091865',\r\n        quoter: '0xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e25997',\r\n    }],\r\n    [Network.Ethereum, {\r\n        router: '0x1b81D678ffb9C0263b24A97847620C99d213eB14',\r\n        factory: '0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A091865',\r\n        quoter: '0xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e25997',\r\n    }],\r\n    [Network.ZkEVM, {\r\n        router: '0x1b81D678ffb9C0263b24A97847620C99d213eB14',\r\n        factory: '0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A091865',\r\n        quoter: '0xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e25997',\r\n    }],\r\n    [Network.ZkSync, {\r\n        router: '0xD70C70AD87aa8D45b8D59600342FB3AEe76E3c68',\r\n        factory: '0x1BB72E0CbbEA93c08f535fc7856E0338D7F7a8aB',\r\n        quoter: '0x3d146FcE6c1006857750cBe8aF44f76a28041CCc',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0x1b81D678ffb9C0263b24A97847620C99d213eB14',\r\n        factory: '0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A091865',\r\n        quoter: '0xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e25997',\r\n    }],\r\n    [Network.Linea, {\r\n        router: '0x1b81D678ffb9C0263b24A97847620C99d213eB14',\r\n        factory: '0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A091865',\r\n        quoter: '0xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e25997',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0x1b81D678ffb9C0263b24A97847620C99d213eB14',\r\n        factory: '0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A091865',\r\n        quoter: '0xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e25997',\r\n    }],\r\n    [Network.opBNB, {\r\n        router: '0x1b81D678ffb9C0263b24A97847620C99d213eB14',\r\n        factory: '0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A091865',\r\n        quoter: '0xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e25997',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://derpdex.gitbook.io/home/contracts/contract-addresses\r\nexport const derpdexV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.ZkSync, {\r\n        router: '0x3de80D2d9dCa6F6357C77EF89ee1f7Db3Bba3c3f',\r\n        factory: '0x52A1865eb6903BC777A02Ae93159105015CA1517',\r\n        quoter: '0x48237655EFC513a79409882643eC987591dd6a81',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0xC9fdf5CE4C657ed8289A7D9D1107Ea7D55dbd53F',\r\n        factory: '0xedDef4273518b137CDbcB3a7FA1C6a688303dFe2',\r\n        quoter: '0x777Dc769bb69F3fd12846a928193765847F234Af',\r\n    }],\r\n    [Network.opBNB, {\r\n        router: '0xe36ABD2f6512fE90b7c9Ed920565bCCE7E86eE0d',\r\n        factory: '0xb91331Ea9539ee881e3A45191076c454E482dAc7',\r\n        quoter: '0xd068aA2be5F7605ABbFC766AA870bDAa430E6d4C',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\nexport const throneV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.Base, {\r\n        router: '0x48E285bC3690415c3B6220C3f833eD9C303a4f46',\r\n        factory: '0xE8839bF8175812691c6578C0Fc80E721bC3e00fB',\r\n        quoter: '',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://docs.dackieswap.xyz/dackieswap/dackieswap-contracts/base-mainnet-contracts\r\nexport const dackieswapV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.Base, {\r\n        router: '0x195FBc5B8Fbd5Ac739C1BA57D4Ef6D5a704F34f7',\r\n        factory: '0x3D237AC6D2f425D2E890Cc99198818cc1FA48870',\r\n        quoter: '',\r\n    }],\r\n    [Network.Optimism, {\r\n        router: '0xd1575B2e0C82fba9Eddc3de9c9AAF923AFA670cC',\r\n        factory: '0xc2BC7A73613B9bD5F373FE10B55C59a69F4D617B',\r\n        quoter: '',\r\n    }],\r\n    [Network.Mode, {\r\n        router: '0x3D237AC6D2f425D2E890Cc99198818cc1FA48870',\r\n        factory: '0xc6f3966E5D08Ced98aC30f8B65BeAB5882Be54C7',\r\n        quoter: '',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://docs.horizondex.io/resources/contracts\r\nexport const horizonDexV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.Linea, {\r\n        router: '0x272E156Df8DA513C69cB41cC7A99185D53F926Bb',\r\n        factory: '0x9Fe607e5dCd0Ea318dBB4D8a7B04fa553d6cB2c5',\r\n        quoter: '0x07AceD5690e09935b1c0e6E88B772d9440F64718',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0x99AEC509174Cbf06F8F7E15dDEeB7bcC32363827',\r\n        factory: '0x07AceD5690e09935b1c0e6E88B772d9440F64718',\r\n        quoter: '0x94ddDe405A00180891eD79Dc1147F0d841c30D73',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://docs.swapbased.finance/informational/contract-adresses\r\nexport const swapBasedAmmV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.Base, {\r\n        router: '0x756C6BbDd915202adac7beBB1c6C89aC0886503f',\r\n        factory: '0xb5620F90e803C7F957A9EF351B8DB3C746021BEa',\r\n        quoter: '',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://docs.baseswap.fi/baseswap/info/smart-contracts\r\nexport const baseswapV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.Base, {\r\n        router: '0x1B8eea9315bE495187D873DA7773a874545D9D48',\r\n        factory: '0x38015D05f4fEC8AFe15D7cc0386a126574e8077B',\r\n        quoter: '',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://docs.kinetix.finance/smart-contract-overview/v2-and-v3-dex\r\nexport const kinetixV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.Base, {\r\n        router: '0x4548d4eA048729b560cdC89D87eeF57abB756e7f',\r\n        factory: '0xdDF5a3259a88Ab79D5530eB3eB14c1C92CD97FCf',\r\n        quoter: '0xbBD8dD47DBEc68412Ac3f93C102A6Ac45C5c7644',\r\n    }],\r\n    [Network.Kava, {\r\n        router: '0xc8f22018D3c5f5A4101fB1448d5E5CcdDA4f123e',\r\n        factory: '0x2dBB6254231C5569B6A4313c6C1F5Fe1340b35C2 ',\r\n        quoter: '0xfa737a10f74831aA3cC1D4e3BdcC6aF997f16CCD',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\n\r\n// https://docs.wagmi.com/wagmi/contracts\r\nexport const wagmiV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.Ethereum, {\r\n        router: '0xD8ac778DB70221AB635921460C6BF70cC6d65293',\r\n        factory: '0xB9a14EE1cd3417f3AcC988F61650895151abde24',\r\n        quoter: '0x66034b71A749E655feE0005C5496D5c0949590F0',\r\n    }],\r\n    [Network.Sonic, {\r\n        router: '0x1Ac569879EF7EacB17CC373EF801cDcE4acCdeD5',\r\n        factory: '0x56CFC796bC88C9c7e1b38C2b0aF9B7120B079aef',\r\n        quoter: '0xDb51CffFf3B989d0cB6b58AbF173371b6F2d0D24',\r\n    }],\r\n    [Network.Avalanche, {\r\n        router: '0xd5B59C29efC50348241e815D1AFc37d1A7B26544',\r\n        factory: '0x08d6E1aE0f91423dDBD16f083ca39ccDd1D79cE8',\r\n        quoter: '0x834ddb3d0e54C6d14204c6eC91992aCd66570B87',\r\n    }],\r\n    [Network.BSC, {\r\n        router: '0x83a98D089D0cB37BB82Aa5aE16033C93f474b8a9',\r\n        factory: '0xE3Dc1A5a7aB81F1cC1895FA55034725c24a5BD0e',\r\n        quoter: '0x367Af54525c40337578a0F306C200ba3912462Ff',\r\n    }],\r\n    [Network.Polygon, {\r\n        router: '0x53dca7E0015B8c445881A9BC2baC1D8648d7f800',\r\n        factory: '0x8bb1Be7acD806BF6C9766486dC4c21284a472BaC',\r\n        quoter: '0x86fD613D79ceA7ce51deFd31Bfcf68ADbF4038Fa',\r\n    }],\r\n    [Network.Fantom, {\r\n        router: '0x0834Cf32553B255c767957588936881Ad8089485',\r\n        factory: '0xaf20f5f19698f1D19351028cd7103B63D30DE7d7',\r\n        quoter: '0x5dB68a533465040F5185e2771746AFed8CC4D14E',\r\n    }],\r\n    [Network.Arbitrum, {\r\n        router: '0x491D195B05DF4e9fD6Aba8C00e6f6d3459A1aB51',\r\n        factory: '0x7301350CC76D669ea384e77aF38a70C61661CA48',\r\n        quoter: '0x4E537A3A1E59FCdfA225FA470976B356786888Cc',\r\n    }],\r\n    [Network.Optimism, {\r\n        router: '0x49660491C29344C3C8E463Ed1867A68fb69Bb519',\r\n        factory: '0xC49c177736107fD8351ed6564136B9ADbE5B1eC3',\r\n        quoter: '0xe4d69A93e8CB390B4Fc04Dc7836a8206F074949C',\r\n    }],\r\n    [Network.Kava, {\r\n        router: '0xB9a14EE1cd3417f3AcC988F61650895151abde24',\r\n        factory: '0x0e0Ce4D450c705F8a0B6Dd9d5123e3df2787D16B',\r\n        quoter: '0x8187808B163E7CBAcCc4D0A9B138AE6196ac1f72',\r\n    }],\r\n    [Network.Metis, {\r\n        router: '0x8B741B0D79BE80E135C880F7583d427B4D41F015',\r\n        factory: '0x8112E18a34b63964388a3B2984037d6a2EFE5B8A',\r\n        quoter: '0xB9a14EE1cd3417f3AcC988F61650895151abde24',\r\n    }],\r\n    [Network.Base, {\r\n        router: '0xB5fa77E3929fe198a86Aa40fd6c77886785bCd0e',\r\n        factory: '0x576A1301B42942537d38FB147895fE83fB418fD4',\r\n        quoter: '0x8B741B0D79BE80E135C880F7583d427B4D41F015',\r\n    }],\r\n    [Network.Iota, {\r\n        router: '0xaE7b92C8B14E7bdB523408aE0A6fFbf3f589adD9',\r\n        factory: '0x01Bd510B2eA106917e711f9a05a42fC162bee2Ac',\r\n        quoter: '0x5C08A6762CAF9ec8a42F249eBC23aAE66097218D',\r\n    }],\r\n]);\r\n","import { Network } from \"../../../types/network\";\r\n\r\n// https://docs.alienbase.xyz/alien-base-v3/v3-contracts\r\nexport const alienbaseV3Addresses = new Map<Network, {router: string, factory: string, quoter: string}>([\r\n    [Network.Base, {\r\n        router: '0xB20C411FC84FBB27e78608C24d0056D974ea9411',\r\n        factory: '0x0Fd83557b2be93617c9C1C1B6fd549401C74558C',\r\n        quoter: '',\r\n    }],\r\n]);\r\n","import { Contract, formatUnits, id, MaxUint256, parseUnits, solidityPacked, ZeroAddress } from \"ethers\";\r\n\r\nimport type { INetworkConfig } from \"../types/network\";\r\nimport { DexBase } from \"./DexBase\";\r\nimport { DexInterfaceName, DexType } from \"./types/IDexParams\";\r\nimport { erc20Abi } from \"../erc20/abi/erc20-abi\";\r\nimport { cutEncodedDataParams } from \"../utils/cut-encoded-data-params\";\r\nimport { quoterAbi, routerAbi, factoryAbi, poolAbi } from \"./abi/uniswap-v3\";\r\nimport { reverseCopy } from \"../utils/reverse-copy\";\r\nimport { ERC20 } from \"../erc20/tokens/ERC20\";\r\nimport { uniswapV3Addresses } from \"./addresses/uniswap-v3-kind/uniswap-v3\";\r\nimport { sushiswapV3Addresses } from \"./addresses/uniswap-v3-kind/sushiswap-v3\";\r\nimport { pancakeswapV3Addresses } from \"./addresses/uniswap-v3-kind/pancakeswap-v3\";\r\nimport { derpdexV3Addresses } from \"./addresses/uniswap-v3-kind/derpdex-v3\";\r\nimport { throneV3Addresses } from \"./addresses/uniswap-v3-kind/throne-v3\";\r\nimport { dackieswapV3Addresses } from \"./addresses/uniswap-v3-kind/dackieswap-v3\";\r\nimport { horizonDexV3Addresses } from \"./addresses/uniswap-v3-kind/horizondex-v3\";\r\nimport { swapBasedAmmV3Addresses } from \"./addresses/uniswap-v3-kind/swapbasedamm-v3\";\r\nimport { baseswapV3Addresses } from \"./addresses/uniswap-v3-kind/baseswap-v3\";\r\nimport { kinetixV3Addresses } from \"./addresses/uniswap-v3-kind/kinetix-v3\";\r\nimport { wagmiV3Addresses } from \"./addresses/uniswap-v3-kind/wagmi-v3\";\r\nimport { alienbaseV3Addresses } from \"./addresses/uniswap-v3-kind/alienbase-v3\";\r\n\r\nexport class DexBaseKindUniswapV3 extends DexBase {\r\n    private readonly _quoterContract: Contract | null = null;\r\n\r\n    constructor(\r\n        routerAddress_: string,\r\n        factoryAddress_: string,\r\n        quoterAddress_: string,\r\n        network: INetworkConfig,\r\n        name?: DexInterfaceName,\r\n        overrides?: {\r\n            routerAbi: any,\r\n            factoryAbi: any,\r\n            quoterAbi: any,\r\n        }\r\n    ) {\r\n        super({\r\n            network,\r\n            type: DexType.UniswapV3,\r\n            name: name ?? DexInterfaceName.UniswapV3,\r\n            router: {\r\n                address: routerAddress_,\r\n                abi: overrides?.routerAbi ?? routerAbi,\r\n            },\r\n            factory: {\r\n                address: factoryAddress_,\r\n                abi: overrides?.factoryAbi ?? factoryAbi,\r\n            },\r\n        });\r\n\r\n        if (\r\n            quoterAddress_ !== undefined &&\r\n            quoterAddress_ !== null &&\r\n            quoterAddress_ !== ZeroAddress &&\r\n            quoterAddress_ !== ''\r\n        ) {\r\n            this._quoterContract = new Contract(\r\n                quoterAddress_,\r\n                overrides?.quoterAbi ?? quoterAbi,\r\n                this._provider\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    public get quoterAddress(): string {\r\n        if (this._quoterContract !== null) {\r\n            return this._quoterContract.target as string;\r\n        }\r\n        return ZeroAddress;\r\n    }\r\n\r\n    public async getPoolData(path: string[]): Promise<{\r\n        poolAddress: string;\r\n        token0: string;\r\n        token1: string;\r\n        reserves0: bigint;\r\n        reserves1: bigint;\r\n    }[]> {\r\n        const splitedPaths = this.splitPath(path);\r\n\r\n        if (splitedPaths.length === 0) {\r\n            throw new Error('No allowed paths provided');\r\n        }\r\n\r\n        const poolData: {\r\n            poolAddress: string;\r\n            token0: string;\r\n            token1: string;\r\n            reserves0: bigint;\r\n            reserves1: bigint;\r\n        }[] = [];\r\n        for (const path of splitedPaths) {\r\n            const pair = await this.getPoolAddress(path);\r\n\r\n            if(pair === ZeroAddress) {\r\n                continue;\r\n            }\r\n            const pairContract = new Contract(pair, poolAbi, this._provider);\r\n\r\n            const [\r\n                token0,\r\n                token1,\r\n            ] = await Promise.all([\r\n                // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n                pairContract.token0(),\r\n                // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n                pairContract.token1(),\r\n            ]);\r\n\r\n            const token0Contract = new Contract(token0, erc20Abi, this._provider);\r\n            const token1Contract = new Contract(token1, erc20Abi, this._provider);\r\n\r\n            const [\r\n                balance0,\r\n                balance1\r\n            ] = await Promise.all([\r\n                // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n                token0Contract.balanceOf(pair),\r\n                // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n                token1Contract.balanceOf(pair),\r\n            ]);\r\n\r\n            poolData.push({\r\n                poolAddress: pair,\r\n                token0,\r\n                token1,\r\n                reserves0: balance0,\r\n                reserves1: balance1,\r\n            })\r\n        }\r\n\r\n        return poolData;\r\n    }\r\n\r\n\r\n    public async getTokenPrice(path: (string | number | bigint)[]): Promise<number> {\r\n        if (this._quoterContract === null) {\r\n            throw new Error('Quoter contract is not initialized');\r\n        }\r\n\r\n        const token = new Contract(path[0] as string, erc20Abi, this._provider);\r\n        const tokenQuote = new Contract(path[path.length - 1] as string, erc20Abi, this._provider);\r\n\r\n        const encodedPath = this._encodePath(path);\r\n\r\n        const [decimals, decimalsQuote]: [bigint, bigint] = await Promise.all([\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            token.decimals(),\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            tokenQuote.decimals()\r\n        ]);\r\n\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        const amountsOut: bigint = (await this._quoterContract.quoteExactInput.staticCall(encodedPath, parseUnits('1', decimals)))[0];\r\n\r\n        return +formatUnits(amountsOut, decimalsQuote);\r\n    }\r\n\r\n    public async getPoolAddress(path: (string | number | bigint)[]): Promise<string> {\r\n        if (path.length !== 3) {\r\n            throw new Error('Path must have at only two addresses and one fee.');\r\n        }\r\n\r\n        const token0 = path[0] as string;\r\n        const token1 = path[path.length - 1] as string;\r\n        const fee = path[1] as number;\r\n\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._factoryContract.getPool(token0, token1, fee);\r\n    }\r\n\r\n    public async getPoolAddresses(path: (string | number | bigint)[]): Promise<string[]> {\r\n        const poolPairs = this.splitPath(path);\r\n        const pairsArray: string[] = []\r\n\r\n        for (const poolPair of poolPairs) {\r\n            pairsArray.push(await this.getPoolAddress(poolPair));\r\n        }\r\n\r\n        return pairsArray;\r\n    }\r\n\r\n    public async getPoolCount(): Promise<number> {\r\n        throw new Error('Not implemented');\r\n    }\r\n\r\n    public async getPoolAddressByIndex(_: number): Promise<string> {\r\n        throw new Error('Not implemented');\r\n    }\r\n\r\n\r\n\r\n    public async getPoolReserves(path: (string | number | bigint)[]): Promise<{\r\n        reserve0: number,\r\n        reserve1: number,\r\n        sqrtPriceX96: string,\r\n        liquidity: string,\r\n    }> {\r\n        const poolAddress = await this.getPoolAddress(path); // [token0, token1, fee]\r\n        const poolContract = new Contract(poolAddress, poolAbi, this._provider);\r\n\r\n        const [sqrtPriceX96Struct, liquidity, token0, token1] = await Promise.all([\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            poolContract.slot0(),\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            poolContract.liquidity(),\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            poolContract.token0(),\r\n            // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n            poolContract.token1(),\r\n        ]);\r\n\r\n        const sqrtPriceX96 = sqrtPriceX96Struct.sqrtPriceX96 ?? sqrtPriceX96Struct[0]; // совместимость\r\n\r\n        const erc0 = new ERC20({address: token0, network: this._network});\r\n        const erc1 = new ERC20({address: token1, network: this._network});\r\n\r\n        const [dec0, dec1] = await Promise.all([\r\n            erc0.getDecimals(),\r\n            erc1.getDecimals(),\r\n        ]);\r\n\r\n        // вычисляем виртуальные резервы\r\n        const Q96 = BigInt(2) ** BigInt(96);\r\n        const sqrtX = BigInt(sqrtPriceX96);\r\n        const L = BigInt(liquidity.toString());\r\n\r\n        const reserve0 = Number(L * Q96 / sqrtX) / 10 ** Number(dec0);\r\n        const reserve1 = Number(L * sqrtX / Q96) / 10 ** Number(dec1);\r\n\r\n        return {\r\n            reserve0,\r\n            reserve1,\r\n            sqrtPriceX96: sqrtX.toString(),\r\n            liquidity: L.toString(),\r\n        };\r\n    }\r\n\r\n    public async getFactoryAddress(): Promise<string> {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._routerContract.factory();\r\n    }\r\n\r\n    public splitPath(path: (string | number | bigint)[]): (string | number | bigint)[][] {\r\n        if (path.length === 1) {\r\n            return [];\r\n        }\r\n        if (path.length === 3) {\r\n            return [path];\r\n        }\r\n\r\n        const pools: (string | bigint | number)[][] = [];\r\n\r\n        for (let i = 0; i < path.length - 2; i += 2) {\r\n            pools.push(path.slice(i, i + 3));\r\n        }\r\n\r\n        return pools;\r\n    }\r\n\r\n    public getEncodedSwap(\r\n        amountsIn: bigint,\r\n        path: (string | number | bigint)[],\r\n        sendTo: string,\r\n        slippage?: number,\r\n    ): {\r\n        data: string,\r\n        topHalf: string,\r\n        bottomHalf: string,\r\n    } {\r\n        // const deadline = Math.floor(Date.now() / 1000) + 10000;\r\n        const amountOutMin = slippage ? amountsIn * BigInt(10000 - slippage) / BigInt(10000) : 0;\r\n\r\n        const data = this._routerContract.interface.encodeFunctionData(\r\n            'exactInput',\r\n            [\r\n                {\r\n                    path: this._encodePath(path),\r\n                    recipient: sendTo,\r\n                    deadline: MaxUint256,\r\n                    amountIn: amountsIn,\r\n                    amountOutMinimum: amountOutMin,\r\n                },\r\n            ]\r\n        );\r\n\r\n        return {\r\n            data,\r\n            ...cutEncodedDataParams(data, 3),\r\n        }\r\n    }\r\n\r\n    public async simulateSwap(\r\n        from: string,\r\n        amountsIn: bigint,\r\n        path: (string | any)[],\r\n        sendTo?: string,\r\n        overrides?: {\r\n            gasLimit?: number,\r\n            maxFeePerGas?: number,\r\n            maxPriorityFeePerGas?: number,\r\n        }\r\n    ) {\r\n        const deadline = Math.floor(Date.now() / 1000) + 600;\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        return await this._routerContract.swapExactTokensForTokens.staticCallResult(\r\n            amountsIn,\r\n            0,\r\n            path,\r\n            sendTo ?? from,\r\n            deadline,\r\n            {\r\n                ...overrides,\r\n                from,\r\n            }\r\n        );\r\n    }\r\n\r\n    public getReversedPath(path: string[]): string[] {\r\n        return reverseCopy<string>(path);\r\n    }\r\n\r\n    public getDecodedSwapData(token0: string, token1: string, data: string): { tokenFrom: string; tokenTo: string; amountsIn: bigint; amountsOut: bigint; } {\r\n        const t0 = token0.toLowerCase();\r\n        const t1 = token1.toLowerCase();\r\n\r\n        // В data лежат только НЕиндексированные поля, в порядке ниже:\r\n        const [amount0, amount1 /* sqrtPriceX96, liquidity, tick */] = this._coder.decode(\r\n            [\"int256\", \"int256\", \"uint160\", \"uint128\", \"int24\"],\r\n            data\r\n        ) as unknown as [bigint, bigint, bigint, bigint, number];\r\n\r\n        // В V3 знак означает направление потока относительно пула:\r\n        // amountX > 0  => трейдер внёс X в пул (вход)\r\n        // amountX < 0  => трейдер получил X из пула (выход)\r\n        if (amount0 > 0n && amount1 < 0n) {\r\n            // внёс token0, получил token1\r\n            return {\r\n                tokenFrom: t0,\r\n                tokenTo: t1,\r\n                amountsIn: amount0,\r\n                amountsOut: -amount1\r\n            };\r\n        }\r\n        if (amount1 > 0n && amount0 < 0n) {\r\n            // внёс token1, получил token0\r\n            return {\r\n                tokenFrom: t1,\r\n                tokenTo: t0,\r\n                amountsIn: amount1,\r\n                amountsOut: -amount0\r\n            };\r\n        }\r\n\r\n        // редкие случаи (напр., нулевые суммы) считаем невалидными для свопа\r\n        throw new Error(\"UniswapV3 swap decode: ambiguous or zero amounts\");\r\n    }\r\n\r\n    public getSwapEventSignature(): {\r\n        event: string,\r\n        id: string,\r\n    } {\r\n        const rawEvent = 'Swap(address,address,int256,int256,uint160,uint128,int24)';\r\n        return {\r\n            event: rawEvent,\r\n            id: id(rawEvent),\r\n        };\r\n    }\r\n\r\n\r\n    // HELPERS\r\n    private _encodePath<T>(path: T[]) {\r\n        if (path.length < 2) {\r\n            throw new Error('Path must have at least two addresses.');\r\n        }\r\n        if (path.length % 2 === 0) {\r\n            throw new Error(\r\n                'Path length must be odd (addresses and fees alternate).',\r\n            );\r\n        }\r\n\r\n        const types = [];\r\n        for (let i = 0; i < path.length; i++) {\r\n            types.push(i % 2 === 0 ? 'address' : 'uint24'); // Чередуем address и uint24\r\n        }\r\n\r\n        return solidityPacked(types, path);\r\n    }\r\n\r\n    // private async _getCreatedPools(): Promise<{\r\n    //     token0: string;\r\n    //     token1: string;\r\n    //     fee: number;\r\n    //     tickSpacing: number;\r\n    //     pool: string;\r\n    //     blockNumber: number;\r\n    //     transactionHash: string;\r\n    // }[]> {\r\n    //     // const filter = this._factoryContract.filters.PoolCreated();\r\n    //     // const latestBlock = await this._provider.getBlockNumber();\r\n\r\n    //     // const results: {\r\n    //     //     token0: string;\r\n    //     //     token1: string;\r\n    //     //     fee: number;\r\n    //     //     tickSpacing: number;\r\n    //     //     pool: string;\r\n    //     //     blockNumber: number;\r\n    //     //     transactionHash: string;\r\n    //     // }[] = [];\r\n\r\n    //     // let fromBlock = 0;\r\n    //     // let batchSize = 10000;\r\n    //     // const minBatchSize = 100;\r\n\r\n    //     // while (fromBlock <= latestBlock) {\r\n    //     //     const toBlock = Math.min(fromBlock + batchSize - 1, latestBlock);\r\n\r\n    //     //     try {\r\n    //     //         const events = await this._factoryContract.queryFilter(filter, fromBlock, toBlock);\r\n\r\n    //     //         for (const event of events) {\r\n    //     //             if (event instanceof EventLog) {\r\n    //     //                 const { token0, token1, fee, tickSpacing, pool } = event.args;\r\n    //     //                 results.push({\r\n    //     //                     token0,\r\n    //     //                     token1,\r\n    //     //                     fee,\r\n    //     //                     tickSpacing,\r\n    //     //                     pool,\r\n    //     //                     blockNumber: event.blockNumber,\r\n    //     //                     transactionHash: event.transactionHash,\r\n    //     //                 });\r\n    //     //             }\r\n    //     //         }\r\n\r\n    //     //         // Move to the next block range\r\n    //     //         fromBlock = toBlock + 1;\r\n    //     //         // Optional: reset batch size to default if it was reduced\r\n    //     //         batchSize = 10000; \r\n\r\n    //     //     } catch (err: any) {\r\n    //     //         const isRangeError = (e: any) => {\r\n    //     //             const message = JSON.stringify(e).toLowerCase();\r\n    //     //             return message.includes('block range') || \r\n    //     //                    message.includes('query returned more than') ||\r\n    //     //                    message.includes('400 bad request') ||\r\n    //     //                    e.error?.code === -32000;\r\n    //     //         };\r\n\r\n    //     //         if (isRangeError(err) && batchSize / 2 >= minBatchSize) {\r\n    //     //             const newBatchSize = Math.floor(batchSize / 2);\r\n    //     //             console.warn(\r\n    //     //                 `Query for logs in [${fromBlock}, ${toBlock}] failed. Reducing batch size from ${batchSize} to ${newBatchSize}.`\r\n    //     //             );\r\n    //     //             batchSize = newBatchSize;\r\n    //     //             await new Promise(res => setTimeout(res, 1000)); // Wait before retrying\r\n    //     //         } else {\r\n    //     //             console.error(`Unrecoverable error fetching logs in range [${fromBlock}, ${toBlock}] with batch size ${batchSize}:`, err);\r\n    //     //             throw err;\r\n    //     //         }\r\n    //     //     }\r\n    //     // }\r\n\r\n    //     // return results;\r\n\r\n    //     // TODO: Implement this\r\n    //     return [];\r\n    // }\r\n}\r\n\r\n\r\nexport class UniswapV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = uniswapV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.UniswapV3\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class PancakeSwapV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = pancakeswapV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.PancakeSwapV3\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class SushiSwapV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = sushiswapV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.SushiSwapV3\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class DerpDexV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = derpdexV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.DerpDexV3\r\n        );\r\n    }\r\n}\r\n\r\nexport class ThroneV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = throneV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.ThroneV3\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class HorizonDexV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = horizonDexV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.HorizonDexV3\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class SwapBasedAmmV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = swapBasedAmmV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.SwapBasedAmmV3\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class BaseSwapV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = baseswapV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.BaseSwapV3\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class KinetixV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = kinetixV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.KinetixV3\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class DackieSwapV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = dackieswapV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.DackieSwapV3\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class WagmiV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = wagmiV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.WagmiV3\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class AlienBaseV3 extends DexBaseKindUniswapV3 {\r\n    constructor(network: INetworkConfig, overrides?: {\r\n        routerAddress: string,\r\n        factoryAddress: string,\r\n        quoterAddress: string,\r\n        name?: DexInterfaceName,\r\n    }) {\r\n        const addresses = alienbaseV3Addresses.get(network.id)!;\r\n        super(\r\n            overrides?.routerAddress ?? addresses.router,\r\n            overrides?.factoryAddress ?? addresses.factory,\r\n            overrides?.quoterAddress ?? addresses.quoter,\r\n            network,\r\n            overrides?.name ?? DexInterfaceName.AlienBaseV3\r\n        );\r\n    }\r\n}","export function getEnumValuesArray<E extends Record<string, string | number>>(\r\n    e: E,\r\n): (E[keyof E])[] {\r\n    return Object.values(e).filter(\r\n        (v) =>\r\n            typeof v === \"number\" ||\r\n            !Object.prototype.hasOwnProperty.call(e, v as string)\r\n    ) as (E[keyof E])[];\r\n}","\r\nimport { DexBase } from \"./DexBase\";\r\nimport { \r\n    AlienBaseV2,\r\n    AlienBaseArea51V2,\r\n    BaseSwapV2,\r\n    DeltaSwapV2,\r\n    DackieSwapV2,\r\n    RingSwapV2,\r\n    RocketSwapV2,\r\n    RaiFinanceV2,\r\n    UniswapV2,\r\n    PancakeSwapV2,\r\n    SushiSwapV2,\r\n    SharkSwapV2,\r\n    SwapBasedAmmV2,\r\n    LeetSwapV2,\r\n    IcecreamSwapV2,\r\n    ElkV2,\r\n} from \"../../src/dex/UniswapV2Kind\";\r\nimport { \r\n    UniswapV3,\r\n    PancakeSwapV3,\r\n    SushiSwapV3,\r\n    DerpDexV3,\r\n    ThroneV3,\r\n    HorizonDexV3,\r\n    SwapBasedAmmV3,\r\n    BaseSwapV3,\r\n    KinetixV3,\r\n    DackieSwapV3,\r\n    WagmiV3,\r\n    AlienBaseV3,\r\n} from \"../../src/dex/UniswapV3Kind\";\r\nimport { IxSwapV2 } from \"./IxSwapV2\";\r\nimport { AerodromeV2 } from \"./AerodromeV2\";\r\nimport { DexInterfaceName } from \"./types/IDexParams\";\r\nimport { type INetworkConfig, Network } from \"../types/network\";\r\nimport { getEnumValuesArray } from \"../utils/get-enum-values-array\";\r\n\r\nexport type TCreateDex = (network: INetworkConfig) => DexBase;\r\n\r\nexport class DexFactory {\r\n    private static readonly _dexes: Record<DexInterfaceName, TCreateDex> = {\r\n        // Uniswap V2 Forks\r\n        [DexInterfaceName.UniswapV2]: (network: INetworkConfig) => new UniswapV2(network),\r\n        [DexInterfaceName.PancakeSwapV2]: (network: INetworkConfig) => new PancakeSwapV2(network),\r\n        [DexInterfaceName.SushiSwapV2]: (network: INetworkConfig) => new SushiSwapV2(network),\r\n        [DexInterfaceName.SharkSwapV2]: (network: INetworkConfig) => new SharkSwapV2(network),\r\n        [DexInterfaceName.SwapBasedAmmV2]: (network: INetworkConfig) => new SwapBasedAmmV2(network),\r\n        [DexInterfaceName.LeetSwapV2]: (network: INetworkConfig) => new LeetSwapV2(network),\r\n        [DexInterfaceName.IcecreamSwapV2]: (network: INetworkConfig) => new IcecreamSwapV2(network),\r\n        [DexInterfaceName.ElkV2]: (network: INetworkConfig) => new ElkV2(network),\r\n        [DexInterfaceName.RocketSwapV2]: (network: INetworkConfig) => new RocketSwapV2(network),\r\n        [DexInterfaceName.BaseSwapV2]: (network: INetworkConfig) => new BaseSwapV2(network),\r\n        [DexInterfaceName.DeltaSwapV2]: (network: INetworkConfig) => new DeltaSwapV2(network),\r\n        [DexInterfaceName.RingSwapV2]: (network: INetworkConfig) => new RingSwapV2(network),\r\n        [DexInterfaceName.AlienBaseV2]: (network: INetworkConfig) => new AlienBaseV2(network),\r\n        [DexInterfaceName.AlienBaseArea51V2]: (network: INetworkConfig) => new AlienBaseArea51V2(network),\r\n        [DexInterfaceName.DackieSwapV2]: (network: INetworkConfig) => new DackieSwapV2(network),\r\n        [DexInterfaceName.RaiFinanceV2]: (network: INetworkConfig) => new RaiFinanceV2(network),\r\n        \r\n        // Uniswap V3 Forks\r\n        [DexInterfaceName.UniswapV3]: (network: INetworkConfig) => new UniswapV3(network),\r\n        [DexInterfaceName.PancakeSwapV3]: (network: INetworkConfig) => new PancakeSwapV3(network),\r\n        [DexInterfaceName.SushiSwapV3]: (network: INetworkConfig) => new SushiSwapV3(network),\r\n        [DexInterfaceName.DerpDexV3]: (network: INetworkConfig) => new DerpDexV3(network),\r\n        [DexInterfaceName.ThroneV3]: (network: INetworkConfig) => new ThroneV3(network),\r\n        [DexInterfaceName.HorizonDexV3]: (network: INetworkConfig) => new HorizonDexV3(network),\r\n        [DexInterfaceName.SwapBasedAmmV3]: (network: INetworkConfig) => new SwapBasedAmmV3(network),\r\n        [DexInterfaceName.BaseSwapV3]: (network: INetworkConfig) => new BaseSwapV3(network),\r\n        [DexInterfaceName.KinetixV3]: (network: INetworkConfig) => new KinetixV3(network),\r\n        [DexInterfaceName.DackieSwapV3]: (network: INetworkConfig) => new DackieSwapV3(network),\r\n        [DexInterfaceName.WagmiV3]: (network: INetworkConfig) => new WagmiV3(network),\r\n        [DexInterfaceName.AlienBaseV3]: (network: INetworkConfig) => new AlienBaseV3(network),\r\n        \r\n        // Uniswap Forks with changes\r\n        [DexInterfaceName.AerodromeV2]: (network: INetworkConfig) => new AerodromeV2(network),\r\n        [DexInterfaceName.IXSwap]: (network: INetworkConfig) => new IxSwapV2(network),\r\n        \r\n    }\r\n\r\n    public static create(\r\n        network: INetworkConfig,\r\n        dexInterfaceName: DexInterfaceName\r\n    ): DexBase {\r\n        if(!this._dexes[dexInterfaceName]) {\r\n            throw new Error(`Dex type ${dexInterfaceName} not found`);\r\n        }\r\n\r\n        return this._dexes[dexInterfaceName](network);\r\n    }\r\n\r\n    public static getDexTypeByInterfaceName(\r\n        dexInterfaceName: DexInterfaceName\r\n    ) {\r\n        const networks = getEnumValuesArray(Network);\r\n\r\n        for (const network of networks) {\r\n            try {\r\n                return this.create({\r\n                    id: network,\r\n                    rpcUrl: \"\",\r\n                    wssUrl: \"\",\r\n                }, dexInterfaceName).dexParams.type;\r\n            } catch (error) {}\r\n        }\r\n\r\n        throw new Error(`Dex type ${dexInterfaceName} not found`);\r\n    }\r\n}","export const UniswapV3Fees = {\r\n    FEE_0: 100,\r\n    FEE_1: 200,\r\n    FEE_2: 300,\r\n    FEE_3: 400,\r\n    FEE_4: 500,\r\n    FEE_5: 3000,\r\n    FEE_6: 10000,\r\n} as const;\r\nexport type UniswapV3Fees = typeof UniswapV3Fees[keyof typeof UniswapV3Fees];\r\n\r\nexport const AlienbaseV3Fees = {\r\n    FEE_0: 500,\r\n    FEE_1: 3000,\r\n    FEE_2: 10000,\r\n} as const;\r\nexport type AlienbaseV3Fees = typeof AlienbaseV3Fees[keyof typeof AlienbaseV3Fees];\r\n\r\nexport const ThroneV3Fees = {\r\n    FEE_0: 100,\r\n    FEE_1: 500,\r\n    FEE_2: 2500,\r\n    FEE_3: 10000,\r\n} as const;\r\nexport type ThroneV3Fees = typeof ThroneV3Fees[keyof typeof ThroneV3Fees];\r\n\r\nexport const WagmiV3Fees = {\r\n    FEE_0: 0,\r\n    FEE_1: 500,\r\n    FEE_2: 1500,\r\n    FEE_3: 3000,\r\n    FEE_4: 10000,\r\n} as const;\r\nexport type WagmiV3Fees = typeof WagmiV3Fees[keyof typeof WagmiV3Fees];\r\n\r\nexport const HorizonDexV3Fees = {\r\n    FEE_0: 8,\r\n    FEE_1: 300,\r\n} as const;\r\nexport type HorizonDexV3Fees = typeof HorizonDexV3Fees[keyof typeof HorizonDexV3Fees];\r\n\r\nexport const SwapBasedAmmV3Fees = {\r\n    FEE_0: 35,\r\n    FEE_1: 40,\r\n    FEE_2: 80,\r\n    FEE_3: 500,\r\n    FEE_4: 2500,\r\n    FEE_5: 10000,\r\n} as const;\r\nexport type SwapBasedAmmV3Fees = typeof SwapBasedAmmV3Fees[keyof typeof SwapBasedAmmV3Fees];","namespace chunk {\r\n    export function getChunkNumber(chunkSize: number, itemsCount: number, maxChunks: number = 50): number {\r\n        const chunks = Math.ceil(itemsCount / chunkSize);\r\n        return chunks > maxChunks ? maxChunks : chunks;\r\n    }\r\n\r\n\r\n    export function chunkArray<T>(array: T[], chunkSize: number): T[][] {\r\n        const chunks = [];\r\n        for (let i = 0; i < array.length; i += chunkSize) {\r\n            chunks.push(array.slice(i, i + chunkSize));\r\n        }\r\n        return chunks;\r\n    }\r\n\r\n    export function processInChunks<T>(\r\n        items: T[],\r\n        chunkSize: number,\r\n        processor: (item: T, index: number) => any\r\n    ): any[] {\r\n        const chunks = chunkArray(items, chunkSize);\r\n        const results: any[] = [];\r\n    \r\n        // Обрабатываем каждый чанк последовательно\r\n        for (const chunk of chunks) {\r\n            const chunkResults = chunk.map((item, index) => processor(item, index));\r\n            results.push(...chunkResults);\r\n        }\r\n    \r\n        return results;\r\n    }\r\n    \r\n    export async function processInChunksAsync<T>(\r\n        items: T[],\r\n        chunkSize: number,\r\n        processor: (item: T, index: number) => any,\r\n        awaitTime: number = 0,\r\n    ): Promise<any[]> {\r\n        const chunks = chunkArray(items, chunkSize);\r\n        const results: any[] = [];\r\n    \r\n        // Обрабатываем каждый чанк последовательно\r\n        for (const chunk of chunks) {\r\n            const chunkResults = await Promise.all(\r\n                chunk.map((item, index) => processor(item, index))\r\n            );\r\n            results.push(...chunkResults);\r\n\r\n            if (awaitTime > 0 && chunk !== chunks[chunks.length - 1]) {\r\n                await new Promise<void>(r => setTimeout(r, awaitTime));\r\n            }\r\n        }\r\n    \r\n        return results;\r\n    }\r\n}\r\n\r\nexport default chunk;","export const weth9abi = [\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: true, internalType: 'address', name: 'src', type: 'address' },\r\n            { indexed: true, internalType: 'address', name: 'guy', type: 'address' },\r\n            { indexed: false, internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n        ],\r\n        name: 'Approval',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: true, internalType: 'address', name: 'dst', type: 'address' },\r\n            { indexed: false, internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n        ],\r\n        name: 'Deposit',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: true, internalType: 'address', name: 'src', type: 'address' },\r\n            { indexed: true, internalType: 'address', name: 'dst', type: 'address' },\r\n            { indexed: false, internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n        ],\r\n        name: 'Transfer',\r\n        type: 'event',\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: true, internalType: 'address', name: 'src', type: 'address' },\r\n            { indexed: false, internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n        ],\r\n        name: 'Withdrawal',\r\n        type: 'event',\r\n    },\r\n    { payable: true, stateMutability: 'payable', type: 'fallback' },\r\n    {\r\n        constant: true,\r\n        inputs: [\r\n            { internalType: 'address', name: '', type: 'address' },\r\n            { internalType: 'address', name: '', type: 'address' },\r\n        ],\r\n        name: 'allowance',\r\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        payable: false,\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: 'address', name: 'guy', type: 'address' },\r\n            { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n        ],\r\n        name: 'approve',\r\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n        payable: false,\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n        name: 'balanceOf',\r\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        payable: false,\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: 'decimals',\r\n        outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],\r\n        payable: false,\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [],\r\n        name: 'deposit',\r\n        outputs: [],\r\n        payable: true,\r\n        stateMutability: 'payable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: 'name',\r\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n        payable: false,\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: 'symbol',\r\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n        payable: false,\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: 'totalSupply',\r\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        payable: false,\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: 'address', name: 'dst', type: 'address' },\r\n            { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n        ],\r\n        name: 'transfer',\r\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n        payable: false,\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: 'address', name: 'src', type: 'address' },\r\n            { internalType: 'address', name: 'dst', type: 'address' },\r\n            { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n        ],\r\n        name: 'transferFrom',\r\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n        payable: false,\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [{ internalType: 'uint256', name: 'wad', type: 'uint256' }],\r\n        name: 'withdraw',\r\n        outputs: [],\r\n        payable: false,\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n];\r\n","import { erc20Abi } from \"../abi\";\r\nimport type { IERC20Settings, IToken, ITokenable } from \"../types\";\r\nimport { ERC20 } from \"./ERC20\"\r\n\r\nexport class Token extends ERC20 implements ITokenable {\r\n    private readonly _metadata: IToken;\r\n    constructor({\r\n        name,\r\n        symbol,\r\n        decimals,\r\n        network,\r\n        address,\r\n        privateKey,\r\n        abi = erc20Abi,\r\n    }: IERC20Settings & IToken) {\r\n        super({\r\n            address,\r\n            network,\r\n            abi,\r\n            privateKey\r\n        });\r\n        this._metadata = {\r\n            name,\r\n            symbol,\r\n            decimals,\r\n        };\r\n    }\r\n\r\n    public get metadata(): IToken {\r\n        return this._metadata;\r\n    }\r\n}","import type { TAddress } from \"../../types/hex\";\r\nimport type { IERC20Settings } from \"../types\";\r\nimport { Network } from \"../../types/network\";\r\nimport { weth9abi } from \"../abi\";\r\nimport { Token } from \"./Token\";\r\n\r\nconst wethAddresses = new Map<Network, string>([\r\n    [Network.Ethereum, '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'],\r\n    [Network.Base, '0x4200000000000000000000000000000000000006'],\r\n]);\r\n\r\n\r\nexport class WETH9 extends Token {\r\n    constructor({\r\n        network,\r\n        privateKey,\r\n        address = wethAddresses.get(network.id) ?? wethAddresses.get(Network.Ethereum)!,\r\n        abi = weth9abi,\r\n    }: Omit<IERC20Settings, \"address\"> & {address?: TAddress}) {\r\n        // const address = overrides?.address ?? wethAddresses.get(network.id) ?? wethAddresses.get(Network.Ethereum)!;\r\n        super({\r\n            name: \"Wrapped Ether\",\r\n            symbol: \"WETH\",\r\n            decimals: 18,\r\n            address,\r\n            network,\r\n            abi,\r\n            privateKey\r\n        });\r\n    }\r\n\r\n    public async deposit(amount: bigint) {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        const tx = await this._contract.deposit({ value: amount });\r\n        return tx;\r\n    }\r\n\r\n    public async withdraw(amount: bigint) {\r\n        // @ts-expect-error: ABI methods are attached at runtime by ethers\r\n        const tx = await this._contract.withdraw(amount);\r\n        return tx;\r\n    }\r\n}","\r\nimport chunk from \"../../utils/chunk\";\r\nimport { WETH9, ERC20 } from \"../../erc20\";\r\nimport type { INetworkConfig } from \"../../types/network\";\r\nimport type { TPathSegment } from \"../types/path\";\r\nimport { getEnumValuesArray } from \"../../utils/get-enum-values-array\";\r\nimport { DexBase } from \"../DexBase\";\r\nimport { DexFactory } from \"../DexFactory\";\r\nimport { AlienbaseV3Fees, HorizonDexV3Fees, SwapBasedAmmV3Fees, ThroneV3Fees, UniswapV3Fees, WagmiV3Fees } from \"../types/fees\";\r\nimport { DexInterfaceName, DexType } from \"../types/IDexParams\";\r\n\r\nexport interface IPoolScraperParams {\r\n    tokenIn: string;\r\n    tokenOut: string;\r\n    network: INetworkConfig;\r\n    dexIncluded: DexInterfaceName[];\r\n    isDirectPathOnly?: boolean;\r\n}\r\n\r\nexport class PoolScraper {\r\n    public static async getDexPaths(\r\n        {\r\n            tokenIn,\r\n            tokenOut,\r\n            network,\r\n            dexIncluded,\r\n            isDirectPathOnly,\r\n        }: IPoolScraperParams,\r\n        settings?: {\r\n            chunkSize: number;\r\n            chunkTimeout?: number;\r\n        }\r\n    ) {\r\n        const tokenInContract = new ERC20({\r\n            address: tokenIn,\r\n            network,\r\n        });\r\n        const tokenOutContract = new ERC20({\r\n            address: tokenOut,\r\n            network,\r\n        });\r\n\r\n        try {\r\n            await Promise.all([\r\n                tokenInContract.getDecimals(),\r\n                tokenOutContract.getDecimals(),\r\n            ]);\r\n        } catch (e) {\r\n            throw new Error(`Tokens are not supported. Token In: [#${tokenIn}]; Token Out: [#${tokenOut}]`);\r\n        }\r\n\r\n\r\n        const _settings = settings ?? {\r\n            chunkSize: 50,\r\n            chunkTimeout: 1000,\r\n        };\r\n\r\n        const dexes: DexBase[] = [...new Set(dexIncluded)].map(d => DexFactory.create(network, d));\r\n\r\n        const dexPaths = [];\r\n        for (const dex of dexes) {\r\n            dexPaths.push(...this._makeDexPaths({\r\n                tokenIn,\r\n                tokenOut,\r\n                dex,\r\n                network,\r\n                isDirectPathOnly,\r\n            }));\r\n        }\r\n\r\n        const validatePathsTask = dexPaths.map(param => async () => await this._getValidPath(param));\r\n\r\n        const validPaths = (await chunk.processInChunksAsync(\r\n            validatePathsTask,\r\n            _settings.chunkSize,\r\n            async (item) => item(),\r\n            _settings.chunkTimeout,\r\n        )).filter(vp => vp !== undefined);\r\n\r\n        return validPaths as {\r\n            dex: string;\r\n            path: TPathSegment[];\r\n            reserves: {\r\n                poolAddress: string;\r\n                token0: string;\r\n                token1: string;\r\n                reserves0: bigint;\r\n                reserves1: bigint;\r\n            }[];\r\n        }[];\r\n    }\r\n\r\n    private static _makeDexPaths(params: {\r\n        tokenIn: string,\r\n        tokenOut: string,\r\n        dex: DexBase,\r\n        network: INetworkConfig,\r\n        isDirectPathOnly?: boolean,\r\n    }) {\r\n        const { type: dexType } = params.dex.dexParams;\r\n        const weth = new WETH9({ network: params.network });\r\n        const isWethIncluded =\r\n            params.tokenIn.toLowerCase() === weth.address.toLowerCase() ||\r\n            params.tokenOut.toLowerCase() === weth.address.toLowerCase();\r\n\r\n        if (\r\n            dexType === DexType.UniswapV2 ||\r\n            dexType === DexType.IXSwap\r\n        ) {\r\n            if (params.isDirectPathOnly || isWethIncluded) {\r\n                return [\r\n                    {\r\n                        dex: params.dex,\r\n                        path: [params.tokenIn, params.tokenOut],\r\n                    }\r\n                ];\r\n            }\r\n\r\n            return [\r\n                {\r\n                    dex: params.dex,\r\n                    path: [params.tokenIn, params.tokenOut],\r\n                },\r\n                {\r\n                    dex: params.dex,\r\n                    path: [params.tokenIn, weth.address, params.tokenOut],\r\n                },\r\n            ];\r\n        } else if (dexType === DexType.UniswapV3) {\r\n            const dexInterfaceName = params.dex.dexParams.name;\r\n            const fees = getEnumValuesArray(\r\n                dexInterfaceName === DexInterfaceName.AlienBaseV3 ? AlienbaseV3Fees :\r\n                    dexInterfaceName === DexInterfaceName.ThroneV3 ? ThroneV3Fees :\r\n                        dexInterfaceName === DexInterfaceName.WagmiV3 ? WagmiV3Fees :\r\n                            dexInterfaceName === DexInterfaceName.HorizonDexV3 ? HorizonDexV3Fees :\r\n                                dexInterfaceName === DexInterfaceName.SwapBasedAmmV3 ? SwapBasedAmmV3Fees :\r\n                                    UniswapV3Fees\r\n            );\r\n\r\n            const directPaths = fees.map(fee => (\r\n                {\r\n                    dex: params.dex,\r\n                    path: [params.tokenIn, fee, params.tokenOut],\r\n                }\r\n            ));\r\n            if (params.isDirectPathOnly || isWethIncluded) {\r\n                return directPaths;\r\n            }\r\n\r\n            const paths = [];\r\n            for (const fee0 of fees) {\r\n                for (const fee1 of fees) {\r\n                    paths.push((\r\n                        {\r\n                            dex: params.dex,\r\n                            path: [params.tokenIn, fee0, weth.address, fee1, params.tokenOut]\r\n                        }\r\n                    ));\r\n                }\r\n            }\r\n            return [...directPaths, ...paths];\r\n        } else if (dexType === DexType.AerodromeV2) {\r\n            const directPaths = [\r\n                {\r\n                    dex: params.dex,\r\n                    path: [params.tokenIn, false, params.tokenOut],\r\n                },\r\n                {\r\n                    dex: params.dex,\r\n                    path: [params.tokenIn, true, params.tokenOut],\r\n                },\r\n            ];\r\n            if (params.isDirectPathOnly || isWethIncluded) {\r\n                return directPaths;\r\n            }\r\n\r\n            return [\r\n                ...directPaths,\r\n\r\n                {\r\n                    dex: params.dex,\r\n                    path: [params.tokenIn, false, weth.address, false, params.tokenOut],\r\n                },\r\n                {\r\n                    dex: params.dex,\r\n                    path: [params.tokenIn, false, weth.address, true, params.tokenOut],\r\n                },\r\n                {\r\n                    dex: params.dex,\r\n                    path: [params.tokenIn, true, weth.address, false, params.tokenOut],\r\n                },\r\n                {\r\n                    dex: params.dex,\r\n                    path: [params.tokenIn, true, weth.address, true, params.tokenOut],\r\n                },\r\n            ];\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    private static async _getValidPath(param: { dex: DexBase, path: TPathSegment[] }) {\r\n        const { dex, path } = param;\r\n        const splitedPaths = dex.splitPath(path);\r\n        const reserves = await dex.getPoolData(path);\r\n\r\n        if (splitedPaths.length !== reserves.length) {\r\n            return;\r\n        }\r\n\r\n\r\n        return {\r\n            dex: dex.dexParams.name,\r\n            path,\r\n            reserves,\r\n        };\r\n    }\r\n}\r\n","import { JsonRpcProvider, type TransactionRequest } from \"ethers\";\r\n\r\nexport async function callTransaction(\r\n    runner: JsonRpcProvider,\r\n    txRequest: TransactionRequest\r\n) {\r\n    try {\r\n        return await runner.call(txRequest);\r\n    } catch (e: any) {\r\n        return {\r\n            code: e.code,\r\n            action: e.action,\r\n            data: e.data,\r\n            reason: e.reason,\r\n        };\r\n    }\r\n}","import { FeeMarketEIP1559Transaction, LegacyTransaction, TransactionType } from '@ethereumjs/tx';\r\nimport { type AddressLike, type BigIntLike, bytesToHex } from '@ethereumjs/util';\r\nimport { Common } from '@ethereumjs/common';\r\n\r\n\r\nexport function signTransaction(\r\n    rawTx: {\r\n        nonce: bigint,\r\n        gasPrice?: BigIntLike | null,\r\n        maxFeePerGas: bigint,\r\n        maxPriorityFeePerGas: bigint,\r\n        gasLimit: bigint,\r\n        to: string,\r\n        value: bigint,\r\n        data?: string,\r\n        chainId: number,\r\n        type?: TransactionType\r\n    },\r\n    privateKey: string\r\n): string {\r\n    // Конвертация приватного ключа в Buffer\r\n    const privateKeyBuffer = Buffer.from(privateKey.replace(/^0x/, ''), 'hex');\r\n    const baseTxData = {\r\n        nonce: rawTx.nonce,\r\n        gasLimit: rawTx.gasLimit,\r\n        to: rawTx.to as AddressLike,\r\n        value: rawTx.value,\r\n        data: rawTx.data as AddressLike,\r\n    }\r\n\r\n    let txFromTxData = undefined;\r\n    let txData;\r\n    \r\n    const common = Common.custom(\r\n        {\r\n            name: 'base',\r\n            networkId: rawTx.chainId,\r\n            chainId: rawTx.chainId,\r\n        },\r\n    )\r\n    switch(rawTx.type) {\r\n        case TransactionType.Legacy:\r\n            txData = {\r\n                ...baseTxData,\r\n                gasPrice: rawTx.gasPrice,\r\n            };\r\n\r\n            txFromTxData = LegacyTransaction.fromTxData(txData, {common});\r\n            break;\r\n        case TransactionType.FeeMarketEIP1559:\r\n            txData = {\r\n                ...baseTxData,\r\n                maxFeePerGas: rawTx.maxFeePerGas,\r\n                maxPriorityFeePerGas: rawTx.maxPriorityFeePerGas,\r\n                chainId: rawTx.chainId,\r\n            };\r\n\r\n            txFromTxData = FeeMarketEIP1559Transaction.fromTxData(txData);\r\n            break;\r\n        default:\r\n            throw new Error('not implemented');\r\n    }\r\n    \r\n\r\n    // Подписываем транзакцию приватным ключом\r\n    const signedTx = txFromTxData.sign(privateKeyBuffer);\r\n\r\n    // Возвращаем сериализованную транзакцию в виде строки\r\n    return bytesToHex(signedTx.serialize());\r\n}"]}